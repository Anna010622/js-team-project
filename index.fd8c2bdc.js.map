{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","src/js/modile-menu.js","src/js/header.js","node_modules/@swc/helpers/lib/_class_call_check.js","node_modules/@swc/helpers/lib/_create_class.js","node_modules/@swc/helpers/lib/_sliced_to_array.js","node_modules/@swc/helpers/lib/_array_with_holes.js","node_modules/@swc/helpers/lib/_iterable_to_array.js","node_modules/@swc/helpers/lib/_non_iterable_rest.js","node_modules/@swc/helpers/lib/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/lib/_array_like_to_array.js","node_modules/@swc/helpers/lib/_to_consumable_array.js","node_modules/@swc/helpers/lib/_array_without_holes.js","node_modules/@swc/helpers/lib/_non_iterable_spread.js","src/js/foundations.js","src/js/charity-items.js","node_modules/@parcel/runtime-js/lib/runtime-0c43735d836197ee.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","node_modules/@parcel/runtime-js/lib/runtime-c87845363aafe896.js","node_modules/@parcel/runtime-js/lib/runtime-a079c75751273efc.js","node_modules/@parcel/runtime-js/lib/runtime-ff08399309efab61.js","node_modules/@parcel/runtime-js/lib/runtime-25359396204bc6e2.js","node_modules/@parcel/runtime-js/lib/runtime-e2866605692fa5d2.js","node_modules/@parcel/runtime-js/lib/runtime-c37d6fa5393b877d.js","node_modules/@parcel/runtime-js/lib/runtime-9c9461301ab8c18f.js","node_modules/@parcel/runtime-js/lib/runtime-fa6e5e50205e258d.js","node_modules/@parcel/runtime-js/lib/runtime-7d7a4348ad14d09b.js","node_modules/@parcel/runtime-js/lib/runtime-1ccccfb6af7debc5.js","node_modules/@parcel/runtime-js/lib/runtime-e2f615e51e3ca2ec.js","node_modules/@parcel/runtime-js/lib/runtime-2c00d61e674f3c00.js","node_modules/@parcel/runtime-js/lib/runtime-571106d517abdffc.js","node_modules/@parcel/runtime-js/lib/runtime-87769e4bd4179ab0.js","node_modules/@parcel/runtime-js/lib/runtime-70273784f6027ba2.js","node_modules/@parcel/runtime-js/lib/runtime-6a264ce9d9b8ffc1.js","node_modules/@parcel/runtime-js/lib/runtime-39c84dc02fae13d8.js","node_modules/swiper/swiper.esm.js","node_modules/swiper/core/core.js","node_modules/ssr-window/ssr-window.esm.js","node_modules/swiper/shared/utils.js","node_modules/@swc/helpers/lib/_define_property.js","node_modules/swiper/shared/get-support.js","node_modules/swiper/shared/get-device.js","node_modules/swiper/shared/get-browser.js","node_modules/swiper/core/modules/resize/resize.js","node_modules/swiper/core/modules/observer/observer.js","node_modules/swiper/core/events-emitter.js","node_modules/swiper/core/update/index.js","node_modules/swiper/core/update/updateSize.js","node_modules/swiper/core/update/updateSlides.js","node_modules/swiper/core/update/updateAutoHeight.js","node_modules/swiper/core/update/updateSlidesOffset.js","node_modules/swiper/core/update/updateSlidesProgress.js","node_modules/swiper/core/update/updateProgress.js","node_modules/swiper/core/update/updateSlidesClasses.js","node_modules/swiper/core/update/updateActiveIndex.js","node_modules/swiper/shared/process-lazy-preloader.js","node_modules/swiper/core/update/updateClickedSlide.js","node_modules/swiper/core/translate/index.js","node_modules/swiper/core/translate/getTranslate.js","node_modules/swiper/core/translate/setTranslate.js","node_modules/swiper/core/translate/minTranslate.js","node_modules/swiper/core/translate/maxTranslate.js","node_modules/swiper/core/translate/translateTo.js","node_modules/swiper/core/transition/index.js","node_modules/swiper/core/transition/setTransition.js","node_modules/swiper/core/transition/transitionStart.js","node_modules/swiper/core/transition/transitionEmit.js","node_modules/swiper/core/transition/transitionEnd.js","node_modules/swiper/core/slide/index.js","node_modules/swiper/core/slide/slideTo.js","node_modules/swiper/core/slide/slideToLoop.js","node_modules/swiper/core/slide/slideNext.js","node_modules/swiper/core/slide/slidePrev.js","node_modules/swiper/core/slide/slideReset.js","node_modules/swiper/core/slide/slideToClosest.js","node_modules/swiper/core/slide/slideToClickedSlide.js","node_modules/swiper/core/loop/index.js","node_modules/swiper/core/loop/loopCreate.js","node_modules/swiper/core/loop/loopFix.js","node_modules/swiper/core/loop/loopDestroy.js","node_modules/swiper/core/grab-cursor/index.js","node_modules/swiper/core/grab-cursor/setGrabCursor.js","node_modules/swiper/core/grab-cursor/unsetGrabCursor.js","node_modules/swiper/core/events/index.js","node_modules/swiper/core/events/onTouchStart.js","node_modules/swiper/core/events/onTouchMove.js","node_modules/swiper/core/events/onTouchEnd.js","node_modules/swiper/core/events/onResize.js","node_modules/swiper/core/events/onClick.js","node_modules/swiper/core/events/onScroll.js","node_modules/swiper/core/events/onLoad.js","node_modules/swiper/core/breakpoints/index.js","node_modules/swiper/core/breakpoints/setBreakpoint.js","node_modules/swiper/core/breakpoints/getBreakpoint.js","node_modules/swiper/core/classes/index.js","node_modules/swiper/core/classes/addClasses.js","node_modules/swiper/core/classes/removeClasses.js","node_modules/swiper/core/check-overflow/index.js","node_modules/swiper/core/defaults.js","node_modules/swiper/core/moduleExtendParams.js","node_modules/swiper/modules/virtual/virtual.js","node_modules/swiper/modules/keyboard/keyboard.js","node_modules/swiper/modules/mousewheel/mousewheel.js","node_modules/swiper/modules/navigation/navigation.js","node_modules/swiper/shared/create-element-if-not-defined.js","node_modules/swiper/modules/pagination/pagination.js","node_modules/swiper/shared/classes-to-selector.js","node_modules/swiper/modules/scrollbar/scrollbar.js","node_modules/swiper/modules/parallax/parallax.js","node_modules/swiper/modules/zoom/zoom.js","node_modules/swiper/modules/controller/controller.js","node_modules/swiper/modules/a11y/a11y.js","node_modules/swiper/modules/history/history.js","node_modules/swiper/modules/hash-navigation/hash-navigation.js","node_modules/swiper/modules/autoplay/autoplay.js","node_modules/swiper/modules/thumbs/thumbs.js","node_modules/swiper/modules/free-mode/free-mode.js","node_modules/swiper/modules/grid/grid.js","node_modules/swiper/modules/manipulation/manipulation.js","node_modules/swiper/modules/manipulation/methods/appendSlide.js","node_modules/swiper/modules/manipulation/methods/prependSlide.js","node_modules/swiper/modules/manipulation/methods/addSlide.js","node_modules/swiper/modules/manipulation/methods/removeSlide.js","node_modules/swiper/modules/manipulation/methods/removeAllSlides.js","node_modules/swiper/modules/effect-fade/effect-fade.js","node_modules/swiper/shared/effect-init.js","node_modules/swiper/shared/effect-target.js","node_modules/swiper/shared/effect-virtual-transition-end.js","node_modules/swiper/modules/effect-cube/effect-cube.js","node_modules/swiper/modules/effect-flip/effect-flip.js","node_modules/swiper/shared/create-shadow.js","node_modules/swiper/modules/effect-coverflow/effect-coverflow.js","node_modules/swiper/modules/effect-creative/effect-creative.js","node_modules/swiper/modules/effect-cards/effect-cards.js","src/js/dark-theme.js","node_modules/@parcel/runtime-js/lib/runtime-5f354dbadb72daad.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","(() => {\n  const mobileMenu = document.querySelector('.js-menu-container');\n  const openMenuBtn = document.querySelector('.js-open-menu');\n  const closeMenuBtn = document.querySelector('.js-close-menu');\n  const closeMenuLink = document.querySelectorAll('.modal-menu__link');\n  // const buyNowBtn = document.querySelector('.mobile-menu__button');\n\n  const toggleMenu = () => {\n    const isMenuOpen =\n      openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n    openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n    mobileMenu.classList.toggle('is-open');\n\n    const scrollLockMethod = !isMenuOpen\n      ? 'disableBodyScroll'\n      : 'enableBodyScroll';\n    // bodyScrollLock[scrollLockMethod](document.body);\n  };\n  closeMenuLink.forEach(item => item.addEventListener('click', toggleMenu));\n  openMenuBtn.addEventListener('click', toggleMenu);\n  closeMenuBtn.addEventListener('click', toggleMenu);\n  // buyNowBtn.addEventListener('click', toggleMenu);\n\n  // Close the mobile menu on wider screens if the device orientation changes\n  window.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n    if (!e.matches) return;\n    mobileMenu.classList.remove('is-open');\n    openMenuBtn.setAttribute('aria-expanded', false);\n    // bodyScrollLock.enableBodyScroll(document.body);\n  });\n})();\n","// import BrowserSprite from '../images/icons.svg';\n\n// const headerNav = document.querySelector('nav');\n// const headerButton = document.querySelector('.header__container');\n// const mobileMenu = document.querySelector('.mobile-menu__flex');\n// let nameLogin = '';\n\n// if (localStorage.getItem('key')) {\n//   nameLogin = localStorage.getItem('key');\n// }\n\n// if (localStorage.getItem('key') !== null) {\n//   console.log(111);\n//   headerNav.insertAdjacentHTML(\n//     'beforeend',\n//     `<ul class=\"nav\">\n//         <li class=\"nav__item\">\n//           <a href=\"./index.html\" class=\"nav__link\">HOME</a>\n//         </li>\n//         <li class=\"nav__item\">\n//           <a href=\"./shoppinglist.html\" class=\"nav__link\"\n//             >SHOPPING LIST\n//             <svg class=\"icon_shop\" width=\"20\" height=\"20\">\n//               <use href=${BrowserSprite}#icon-shoppingcart></use>\n//             </svg>\n//           </a>\n//         </li>\n//       </ul>\n//     `\n//   );\n//   headerButton.insertAdjacentHTML(\n//     'beforeend',\n//     `<button\n//       type=\"button\"\n//       class=\"js-open-modal button header__button header__button_logout\"\n//       data-modal=\"logout\"\n//     >\n//       <svg class=\"button__icon\" width=\"19\" height=\"19\">\n//         <use href=${BrowserSprite}#icon-user></use>\n//       </svg>\n//       ${nameLogin}\n//       <svg class=\"button__icon\" width=\"23\" height=\"26\">\n//         <use href=${BrowserSprite}#icon-arrow-down></use>\n//       </svg>\n//     </button>`\n//   );\n//   mobileMenu.insertAdjacentHTML(\n//     'beforeend',\n//     `<button\n//         type=\"button\"\n//         class=\"js-open-modal button mobile__button log-in\"\n//         data-modal=\"buynow\"\n//       >\n//         <svg class=\"button__icon mobile-button__icon\" width=\"16\" height=\"16\">\n//           <use href=${BrowserSprite}#icon-user></use>\n//         </svg>\n//         ${nameLogin}\n//       </button>\n\n//       <ul class=\"mobile-nav\">\n//         <li class=\"mobile-nav__item\">\n//           <a href=\"./index.html\" class=\"mobile-nav__link\">HOME</a>\n//         </li>\n//         <li class=\"mobile-nav__item\">\n//           <a href=\"./shoppinglist.html\" class=\"mobile-nav__link\"\n//             >SHOPPING LIST\n//             <svg class=\"icon_shop\" width=\"13\" height=\"16\">\n//               <use href=${BrowserSprite}#icon-shoppingcart></use>\n//             </svg>\n//           </a>\n//         </li>\n//       </ul>\n//       <button\n//         type=\"button\"\n//         class=\"js-open-modal button mobile__button mobile__button_logout log-out\"\n//         data-modal=\"logout\"\n//       >\n//         Log out\n//         <svg class=\"button__icon log-out__icon\" width=\"16\" height=\"16\">\n//           <use href=${BrowserSprite}#icon-arrow-right></use>\n//         </svg>\n//       </button>`\n//   );\n// } else {\n//   console.log(9999);\n//   headerButton.insertAdjacentHTML(\n//     'beforeend',\n//     `<button type=\"button\" class=\"js-open-modal button header__button\" data-modal=\"signup\">\n//         Sign up\n//           <svg class=\"button__icon \" width=\"20\" height=\"20\">\n//             <use href=${BrowserSprite}#icon-arrow-right></use>\n//           </svg>\n//     </button>`\n//   );\n//   mobileMenu.insertAdjacentHTML(\n//     'beforeend',\n//     `<button\n//         type=\"button\"\n//         class=\"js-open-modal button mobile__button\"\n//         data-modal=\"signup\"\n//       >\n//         Sign up\n//         <svg class=\"button__icon\" width=\"16\" height=\"16\">\n//           <use href=${BrowserSprite}#icon-arrow-right>></use>\n//         </svg>\n//       </button> `\n//   );\n// }\n\n//*** */\n(function () {\n  const a = document.querySelectorAll('.nav a');\n  for (let i = a.length; i--; ) {\n    if (\n      a[i].href === window.location.pathname ||\n      a[i].href === window.location.href\n    ) {\n      a[i].className += ' nav__link--current';\n      return;\n    } else {\n      a[0].className += ' nav__link--current';\n      return;\n    }\n  }\n})();\n\n//*** */\n\n(function () {\n  const a = document.querySelectorAll('.mobile-nav a');\n  for (let i = a.length; i--; ) {\n    if (\n      a[i].href === window.location.pathname ||\n      a[i].href === window.location.href\n    ) {\n      a[i].className += ' mobile-nav__link--current';\n      return;\n    } else {\n      a[0].className += ' mobile-nav__link--current';\n      return;\n    }\n  }\n})();\n\n//*** */\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _classCallCheck;\nfunction _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _createClass;\nfunction _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n}\nfunction _defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _slicedToArray;\nvar _arrayWithHoles = _interopRequireDefault(require(\"./_array_with_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableRest = _interopRequireDefault(require(\"./_non_iterable_rest\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _slicedToArray(arr, i) {\n    return (0, _arrayWithHoles).default(arr) || (0, _iterableToArray).default(arr, i) || (0, _unsupportedIterableToArray).default(arr, i) || (0, _nonIterableRest).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithHoles;\nfunction _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _iterableToArray;\nfunction _iterableToArray(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableRest;\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _unsupportedIterableToArray;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, _arrayLikeToArray).default(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, _arrayLikeToArray).default(o, minLen);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayLikeToArray;\nfunction _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _toConsumableArray;\nvar _arrayWithoutHoles = _interopRequireDefault(require(\"./_array_without_holes\"));\nvar _iterableToArray = _interopRequireDefault(require(\"./_iterable_to_array\"));\nvar _nonIterableSpread = _interopRequireDefault(require(\"./_non_iterable_spread\"));\nvar _unsupportedIterableToArray = _interopRequireDefault(require(\"./_unsupported_iterable_to_array\"));\nfunction _toConsumableArray(arr) {\n    return (0, _arrayWithoutHoles).default(arr) || (0, _iterableToArray).default(arr) || (0, _unsupportedIterableToArray).default(arr) || (0, _nonIterableSpread).default();\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _arrayWithoutHoles;\nvar _arrayLikeToArray = _interopRequireDefault(require(\"./_array_like_to_array\"));\nfunction _arrayWithoutHoles(arr) {\n    if (Array.isArray(arr)) return (0, _arrayLikeToArray).default(arr);\n}\nfunction _interopRequireDefault(obj) {\n    return obj && obj.__esModule ? obj : {\n        default: obj\n    };\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _nonIterableSpread;\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n","import { charityItems } from './charity-items.js';\nimport Swiper from 'swiper';\nimport 'swiper/swiper-bundle.min.css';\n\n\nconst charityEl = document.querySelector('.swiper-wrapper');\nconst charityItemsHtml = charityItems.map(({ url, img, imgRetina, title }, index) =>\n  `<div class=\"charity-item swiper-slide tooltip\">\n    <a href=\"${url}\" class=\"charity-link\" \n      target=\"_blank\"\n      rel=\"noopener noreferrer nofollow\">\n    <span class=\"charity_index\">${(index + 1).toString().padStart(2, \"0\")}</span>\n     <img class=\"charity_logo\"  srcset = \"\n        ${img} 1x,\n        ${imgRetina} 2x\n        \"\n        src=\"${img}\" alt=\"${title}\">\n    </a>\n    <span class=\"tooltiptext tooltip-right\">\n    ${title}\n    </span>\n  </div>`).join('');\n\ncharityEl.innerHTML = charityItemsHtml;\nconst swiperEl = document.querySelector('.swiper');\n\nconst swiper = new Swiper('.swiper', {\n  direction: 'vertical',\n  loop: true,\n  spaceBetween: 20,\n  slidesPerView: 4,\n  breakpoints: {\n    768: {\n      slidesPerView: 6\n    }\n  }\n});\n\nconst nextBtnEl = document.querySelector('.charity-next-slide');\nnextBtnEl.addEventListener('click', () => {\n  if (swiper.activeIndex + swiper.loopedSlides + 1 > swiper.slides.length) {\n    swiper.slideToLoop(0)\n  } else {\n    swiper.slideNext()\n  }\n});","import save1x from '../images/foundations/save-the-children@1x.png';\nimport save2x from '../images/foundations/save-the-children@2x.png';\nimport hope1x from '../images/foundations/project-hope@1x.png';\nimport hope2x from '../images/foundations/project-hope@2x.png';\nimport united1x from '../images/foundations/united@1x.png';\nimport united2x from '../images/foundations/united@2x.png';\nimport medicalCorp1x from '../images/foundations/medical-corp@1x.png';\nimport medicalCorp2x from '../images/foundations/medical-corp@2x.png';\nimport msf1x from '../images/foundations/msf@1x.png';\nimport msf2x from '../images/foundations/msf@2x.png';\nimport razom1x from '../images/foundations/razom@1x.png';\nimport razom2x from '../images/foundations/razom@2x.png';\nimport aah1x from '../images/foundations/against-hunger@1x.png';\nimport aah2x from '../images/foundations/against-hunger@2x.png';\nimport worldVision1x from '../images/foundations/world-vision@1x.png';\nimport worldVision2x from '../images/foundations/world-vision@2x.png';\nimport sprytula1x from '../images/foundations/sprytula@1x.png';\nimport sprytula2x from '../images/foundations/sprytula@2x.png';\n\n\nexport const charityItems = [\n  {\n    title: 'Save the Children',\n    url: 'https://www.savethechildren.net/what-we-do/emergencies/ukraine-crisis',\n    img: save1x,\n    imgRetina: save2x,\n  },\n  {\n    title: 'Project HOPE',\n    url: 'https://www.projecthope.org/country/ukraine/',\n    img: hope1x,\n    imgRetina: hope2x,\n  },\n  {\n    title: 'UNITED24',\n    url: 'https://u24.gov.ua/uk',\n    img: united1x,\n    imgRetina: united2x,\n  },\n  {\n    title: 'International Medical Corps',\n    url: 'https://internationalmedicalcorps.org/country/ukraine/',\n    img: medicalCorp1x,\n    imgRetina: medicalCorp2x,\n  },\n  {\n    title: 'Medicins Sans Frontieres',\n    url: 'https://www.msf.org/ukraine',\n    img: msf1x,\n    imgRetina: msf2x,\n  },\n  {\n    title: 'RAZOM',\n    url: 'https://www.razomforukraine.org/',\n    img: razom1x,\n    imgRetina: razom2x,\n  },\n  {\n    title: 'Action against hunger',\n    url: 'https://www.actionagainsthunger.org/location/europe/ukraine/',\n    img: aah1x,\n    imgRetina: aah2x,\n  },\n  {\n    title: 'World vision',\n    url: 'https://www.wvi.org/emergencies/ukraine',\n    img: worldVision1x,\n    imgRetina: worldVision2x,\n  },\n  {\n    title: 'Serhiy Prytula Charity Foundation',\n    url: 'https://prytulafoundation.org/en',\n    img: sprytula1x,\n    imgRetina: sprytula2x,\n  },\n]\n","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"6IS9A\");","\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"6gXfa\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"gvTuF\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"3R9K2\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"4cd8Z\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"ay3B9\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"iLbAS\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"hcyNA\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"f3wf9\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"b2FOw\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"5DDrP\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"2Krz4\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"Rhm4P\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"ffy0U\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"fBtqB\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"deDmU\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"gM9A7\");","module.exports = require('./helpers/bundle-url').getBundleURL('cIs3N') + require('./helpers/bundle-manifest').resolve(\"55zs5\");","/**\n * Swiper 9.2.2\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * https://swiperjs.com\n *\n * Copyright 2014-2023 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: April 14, 2023\n */\n\nexport { default as Swiper, default } from './core/core.js';\nexport { default as Virtual } from './modules/virtual/virtual.js';\nexport { default as Keyboard } from './modules/keyboard/keyboard.js';\nexport { default as Mousewheel } from './modules/mousewheel/mousewheel.js';\nexport { default as Navigation } from './modules/navigation/navigation.js';\nexport { default as Pagination } from './modules/pagination/pagination.js';\nexport { default as Scrollbar } from './modules/scrollbar/scrollbar.js';\nexport { default as Parallax } from './modules/parallax/parallax.js';\nexport { default as Zoom } from './modules/zoom/zoom.js';\nexport { default as Controller } from './modules/controller/controller.js';\nexport { default as A11y } from './modules/a11y/a11y.js';\nexport { default as History } from './modules/history/history.js';\nexport { default as HashNavigation } from './modules/hash-navigation/hash-navigation.js';\nexport { default as Autoplay } from './modules/autoplay/autoplay.js';\nexport { default as Thumbs } from './modules/thumbs/thumbs.js';\nexport { default as FreeMode } from './modules/free-mode/free-mode.js';\nexport { default as Grid } from './modules/grid/grid.js';\nexport { default as Manipulation } from './modules/manipulation/manipulation.js';\nexport { default as EffectFade } from './modules/effect-fade/effect-fade.js';\nexport { default as EffectCube } from './modules/effect-cube/effect-cube.js';\nexport { default as EffectFlip } from './modules/effect-flip/effect-flip.js';\nexport { default as EffectCoverflow } from './modules/effect-coverflow/effect-coverflow.js';\nexport { default as EffectCreative } from './modules/effect-creative/effect-creative.js';\nexport { default as EffectCards } from './modules/effect-cards/effect-cards.js';","/* eslint no-param-reassign: \"off\" */\nimport { getDocument } from 'ssr-window';\nimport { extend, deleteProps, createElement, elementChildren, elementStyle, elementIndex } from '../shared/utils.js';\nimport { getSupport } from '../shared/get-support.js';\nimport { getDevice } from '../shared/get-device.js';\nimport { getBrowser } from '../shared/get-browser.js';\nimport Resize from './modules/resize/resize.js';\nimport Observer from './modules/observer/observer.js';\nimport eventsEmitter from './events-emitter.js';\nimport update from './update/index.js';\nimport translate from './translate/index.js';\nimport transition from './transition/index.js';\nimport slide from './slide/index.js';\nimport loop from './loop/index.js';\nimport grabCursor from './grab-cursor/index.js';\nimport events from './events/index.js';\nimport breakpoints from './breakpoints/index.js';\nimport classes from './classes/index.js';\nimport checkOverflow from './check-overflow/index.js';\nimport defaults from './defaults.js';\nimport moduleExtendParams from './moduleExtendParams.js';\nimport { processLazyPreloader, preload } from '../shared/process-lazy-preloader.js';\nconst prototypes = {\n  eventsEmitter,\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  events,\n  breakpoints,\n  checkOverflow,\n  classes\n};\nconst extendedDefaults = {};\nclass Swiper {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && Object.prototype.toString.call(args[0]).slice(8, -1) === 'Object') {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n    params = extend({}, params);\n    if (el && !params.el) params.el = el;\n    const document = getDocument();\n    if (params.el && typeof params.el === 'string' && document.querySelectorAll(params.el).length > 1) {\n      const swipers = [];\n      document.querySelectorAll(params.el).forEach(containerEl => {\n        const newParams = extend({}, params, {\n          el: containerEl\n        });\n        swipers.push(new Swiper(newParams));\n      });\n      // eslint-disable-next-line no-constructor-return\n      return swipers;\n    }\n\n    // Swiper Instance\n    const swiper = this;\n    swiper.__swiper__ = true;\n    swiper.support = getSupport();\n    swiper.device = getDevice({\n      userAgent: params.userAgent\n    });\n    swiper.browser = getBrowser();\n    swiper.eventsListeners = {};\n    swiper.eventsAnyListeners = [];\n    swiper.modules = [...swiper.__modules__];\n    if (params.modules && Array.isArray(params.modules)) {\n      swiper.modules.push(...params.modules);\n    }\n    const allModulesParams = {};\n    swiper.modules.forEach(mod => {\n      mod({\n        params,\n        swiper,\n        extendParams: moduleExtendParams(params, allModulesParams),\n        on: swiper.on.bind(swiper),\n        once: swiper.once.bind(swiper),\n        off: swiper.off.bind(swiper),\n        emit: swiper.emit.bind(swiper)\n      });\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = extend({}, defaults, allModulesParams);\n\n    // Extend defaults with passed params\n    swiper.params = extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = extend({}, swiper.params);\n    swiper.passedParams = extend({}, params);\n\n    // add event listeners\n    if (swiper.params && swiper.params.on) {\n      Object.keys(swiper.params.on).forEach(eventName => {\n        swiper.on(eventName, swiper.params.on[eventName]);\n      });\n    }\n    if (swiper.params && swiper.params.onAny) {\n      swiper.onAny(swiper.params.onAny);\n    }\n\n    // Extend Swiper\n    Object.assign(swiper, {\n      enabled: swiper.params.enabled,\n      el,\n      // Classes\n      classNames: [],\n      // Slides\n      slides: [],\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n      //\n      isBeginning: true,\n      isEnd: false,\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n      cssOverflowAdjustment() {\n        // Returns 0 unless `translate` is > 2**23\n        // Should be subtracted from css values to prevent overflow\n        return Math.trunc(this.translate / 2 ** 23) * 2 ** 23;\n      },\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n      // Touch Events\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        focusableElements: swiper.params.focusableElements,\n        // Last click time\n        lastClickTime: 0,\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        startMoving: undefined,\n        evCache: []\n      },\n      // Clicks\n      allowClick: true,\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0\n      },\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0\n    });\n    swiper.emit('_swiper');\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    // eslint-disable-next-line no-constructor-return\n    return swiper;\n  }\n  getSlideIndex(slideEl) {\n    const {\n      slidesEl,\n      params\n    } = this;\n    const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n    const firstSlideIndex = elementIndex(slides[0]);\n    return elementIndex(slideEl) - firstSlideIndex;\n  }\n  getSlideIndexByData(index) {\n    return this.getSlideIndex(this.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') * 1 === index)[0]);\n  }\n  recalcSlides() {\n    const swiper = this;\n    const {\n      slidesEl,\n      params\n    } = swiper;\n    swiper.slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  }\n  enable() {\n    const swiper = this;\n    if (swiper.enabled) return;\n    swiper.enabled = true;\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n    swiper.emit('enable');\n  }\n  disable() {\n    const swiper = this;\n    if (!swiper.enabled) return;\n    swiper.enabled = false;\n    if (swiper.params.grabCursor) {\n      swiper.unsetGrabCursor();\n    }\n    swiper.emit('disable');\n  }\n  setProgress(progress, speed) {\n    const swiper = this;\n    progress = Math.min(Math.max(progress, 0), 1);\n    const min = swiper.minTranslate();\n    const max = swiper.maxTranslate();\n    const current = (max - min) * progress + min;\n    swiper.translateTo(current, typeof speed === 'undefined' ? 0 : speed);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  emitContainerClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const cls = swiper.el.className.split(' ').filter(className => {\n      return className.indexOf('swiper') === 0 || className.indexOf(swiper.params.containerModifierClass) === 0;\n    });\n    swiper.emit('_containerClasses', cls.join(' '));\n  }\n  getSlideClasses(slideEl) {\n    const swiper = this;\n    if (swiper.destroyed) return '';\n    return slideEl.className.split(' ').filter(className => {\n      return className.indexOf('swiper-slide') === 0 || className.indexOf(swiper.params.slideClass) === 0;\n    }).join(' ');\n  }\n  emitSlidesClasses() {\n    const swiper = this;\n    if (!swiper.params._emitClasses || !swiper.el) return;\n    const updates = [];\n    swiper.slides.forEach(slideEl => {\n      const classNames = swiper.getSlideClasses(slideEl);\n      updates.push({\n        slideEl,\n        classNames\n      });\n      swiper.emit('_slideClass', slideEl, classNames);\n    });\n    swiper.emit('_slideClasses', updates);\n  }\n  slidesPerViewDynamic(view = 'current', exact = false) {\n    const swiper = this;\n    const {\n      params,\n      slides,\n      slidesGrid,\n      slidesSizesGrid,\n      size: swiperSize,\n      activeIndex\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      // eslint-disable-next-line\n      if (view === 'current') {\n        for (let i = activeIndex + 1; i < slides.length; i += 1) {\n          const slideInView = exact ? slidesGrid[i] + slidesSizesGrid[i] - slidesGrid[activeIndex] < swiperSize : slidesGrid[i] - slidesGrid[activeIndex] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      } else {\n        // previous\n        for (let i = activeIndex - 1; i >= 0; i -= 1) {\n          const slideInView = slidesGrid[activeIndex] - slidesGrid[i] < swiperSize;\n          if (slideInView) {\n            spv += 1;\n          }\n        }\n      }\n    }\n    return spv;\n  }\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const {\n      snapGrid,\n      params\n    } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      }\n    });\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode && swiper.params.freeMode.enabled) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if (newDirection === currentDirection || newDirection !== 'horizontal' && newDirection !== 'vertical') {\n      return swiper;\n    }\n    swiper.el.classList.remove(`${swiper.params.containerModifierClass}${currentDirection}`);\n    swiper.el.classList.add(`${swiper.params.containerModifierClass}${newDirection}`);\n    swiper.emitContainerClasses();\n    swiper.params.direction = newDirection;\n    swiper.slides.forEach(slideEl => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n    return swiper;\n  }\n  changeLanguageDirection(direction) {\n    const swiper = this;\n    if (swiper.rtl && direction === 'rtl' || !swiper.rtl && direction === 'ltr') return;\n    swiper.rtl = direction === 'rtl';\n    swiper.rtlTranslate = swiper.params.direction === 'horizontal' && swiper.rtl;\n    if (swiper.rtl) {\n      swiper.el.classList.add(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'rtl';\n    } else {\n      swiper.el.classList.remove(`${swiper.params.containerModifierClass}rtl`);\n      swiper.el.dir = 'ltr';\n    }\n    swiper.update();\n  }\n  mount(element) {\n    const swiper = this;\n    if (swiper.mounted) return true;\n\n    // Find el\n    let el = element || swiper.params.el;\n    if (typeof el === 'string') {\n      el = document.querySelector(el);\n    }\n    if (!el) {\n      return false;\n    }\n    el.swiper = swiper;\n    if (el.shadowEl) {\n      swiper.isElement = true;\n    }\n    const getWrapperSelector = () => {\n      return `.${(swiper.params.wrapperClass || '').trim().split(' ').join('.')}`;\n    };\n    const getWrapper = () => {\n      if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n        const res = el.shadowRoot.querySelector(getWrapperSelector());\n        // Children needs to return slot items\n        return res;\n      }\n      return elementChildren(el, getWrapperSelector())[0];\n    };\n    // Find Wrapper\n    let wrapperEl = getWrapper();\n    if (!wrapperEl && swiper.params.createElements) {\n      wrapperEl = createElement('div', swiper.params.wrapperClass);\n      el.append(wrapperEl);\n      elementChildren(el, `.${swiper.params.slideClass}`).forEach(slideEl => {\n        wrapperEl.append(slideEl);\n      });\n    }\n    Object.assign(swiper, {\n      el,\n      wrapperEl,\n      slidesEl: swiper.isElement ? el : wrapperEl,\n      mounted: true,\n      // RTL\n      rtl: el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl',\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || elementStyle(el, 'direction') === 'rtl'),\n      wrongRTL: elementStyle(wrapperEl, 'display') === '-webkit-box'\n    });\n    return true;\n  }\n  init(el) {\n    const swiper = this;\n    if (swiper.initialized) return swiper;\n    const mounted = swiper.mount(el);\n    if (mounted === false) return swiper;\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor && swiper.enabled) {\n      swiper.setGrabCursor();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.virtual.slidesBefore, 0, swiper.params.runCallbacksOnInit, false, true);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit, false, true);\n    }\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Attach events\n    swiper.attachEvents();\n    [...swiper.el.querySelectorAll('[loading=\"lazy\"]')].forEach(imageEl => {\n      if (imageEl.complete) {\n        processLazyPreloader(swiper, imageEl);\n      } else {\n        imageEl.addEventListener('load', e => {\n          processLazyPreloader(swiper, e.target);\n        });\n      }\n    });\n    preload(swiper);\n\n    // Init Flag\n    swiper.initialized = true;\n    preload(swiper);\n\n    // Emit\n    swiper.emit('init');\n    swiper.emit('afterInit');\n    return swiper;\n  }\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params,\n      el,\n      wrapperEl,\n      slides\n    } = swiper;\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      el.removeAttribute('style');\n      wrapperEl.removeAttribute('style');\n      if (slides && slides.length) {\n        slides.forEach(slideEl => {\n          slideEl.classList.remove(params.slideVisibleClass, params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n          slideEl.removeAttribute('style');\n          slideEl.removeAttribute('data-swiper-slide-index');\n        });\n      }\n    }\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach(eventName => {\n      swiper.off(eventName);\n    });\n    if (deleteInstance !== false) {\n      swiper.el.swiper = null;\n      deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n    return null;\n  }\n  static extendDefaults(newDefaults) {\n    extend(extendedDefaults, newDefaults);\n  }\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n  static get defaults() {\n    return defaults;\n  }\n  static installModule(mod) {\n    if (!Swiper.prototype.__modules__) Swiper.prototype.__modules__ = [];\n    const modules = Swiper.prototype.__modules__;\n    if (typeof mod === 'function' && modules.indexOf(mod) < 0) {\n      modules.push(mod);\n    }\n  }\n  static use(module) {\n    if (Array.isArray(module)) {\n      module.forEach(m => Swiper.installModule(m));\n      return Swiper;\n    }\n    Swiper.installModule(module);\n    return Swiper;\n  }\n}\nObject.keys(prototypes).forEach(prototypeGroup => {\n  Object.keys(prototypes[prototypeGroup]).forEach(protoMethod => {\n    Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n  });\n});\nSwiper.use([Resize, Observer]);\nexport default Swiper;","/**\n * SSR Window 4.0.2\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2021, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: December 13, 2021\n */\n/* eslint-disable no-param-reassign */\nfunction isObject(obj) {\n    return (obj !== null &&\n        typeof obj === 'object' &&\n        'constructor' in obj &&\n        obj.constructor === Object);\n}\nfunction extend(target = {}, src = {}) {\n    Object.keys(src).forEach((key) => {\n        if (typeof target[key] === 'undefined')\n            target[key] = src[key];\n        else if (isObject(src[key]) &&\n            isObject(target[key]) &&\n            Object.keys(src[key]).length > 0) {\n            extend(target[key], src[key]);\n        }\n    });\n}\n\nconst ssrDocument = {\n    body: {},\n    addEventListener() { },\n    removeEventListener() { },\n    activeElement: {\n        blur() { },\n        nodeName: '',\n    },\n    querySelector() {\n        return null;\n    },\n    querySelectorAll() {\n        return [];\n    },\n    getElementById() {\n        return null;\n    },\n    createEvent() {\n        return {\n            initEvent() { },\n        };\n    },\n    createElement() {\n        return {\n            children: [],\n            childNodes: [],\n            style: {},\n            setAttribute() { },\n            getElementsByTagName() {\n                return [];\n            },\n        };\n    },\n    createElementNS() {\n        return {};\n    },\n    importNode() {\n        return null;\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n};\nfunction getDocument() {\n    const doc = typeof document !== 'undefined' ? document : {};\n    extend(doc, ssrDocument);\n    return doc;\n}\n\nconst ssrWindow = {\n    document: ssrDocument,\n    navigator: {\n        userAgent: '',\n    },\n    location: {\n        hash: '',\n        host: '',\n        hostname: '',\n        href: '',\n        origin: '',\n        pathname: '',\n        protocol: '',\n        search: '',\n    },\n    history: {\n        replaceState() { },\n        pushState() { },\n        go() { },\n        back() { },\n    },\n    CustomEvent: function CustomEvent() {\n        return this;\n    },\n    addEventListener() { },\n    removeEventListener() { },\n    getComputedStyle() {\n        return {\n            getPropertyValue() {\n                return '';\n            },\n        };\n    },\n    Image() { },\n    Date() { },\n    screen: {},\n    setTimeout() { },\n    clearTimeout() { },\n    matchMedia() {\n        return {};\n    },\n    requestAnimationFrame(callback) {\n        if (typeof setTimeout === 'undefined') {\n            callback();\n            return null;\n        }\n        return setTimeout(callback, 0);\n    },\n    cancelAnimationFrame(id) {\n        if (typeof setTimeout === 'undefined') {\n            return;\n        }\n        clearTimeout(id);\n    },\n};\nfunction getWindow() {\n    const win = typeof window !== 'undefined' ? window : {};\n    extend(win, ssrWindow);\n    return win;\n}\n\nexport { extend, getDocument, getWindow, ssrDocument, ssrWindow };\n","import { getWindow, getDocument } from 'ssr-window';\nfunction deleteProps(obj) {\n  const object = obj;\n  Object.keys(object).forEach(key => {\n    try {\n      object[key] = null;\n    } catch (e) {\n      // no getter for object\n    }\n    try {\n      delete object[key];\n    } catch (e) {\n      // something got wrong\n    }\n  });\n}\nfunction nextTick(callback, delay = 0) {\n  return setTimeout(callback, delay);\n}\nfunction now() {\n  return Date.now();\n}\nfunction getComputedStyle(el) {\n  const window = getWindow();\n  let style;\n  if (window.getComputedStyle) {\n    style = window.getComputedStyle(el, null);\n  }\n  if (!style && el.currentStyle) {\n    style = el.currentStyle;\n  }\n  if (!style) {\n    style = el.style;\n  }\n  return style;\n}\nfunction getTranslate(el, axis = 'x') {\n  const window = getWindow();\n  let matrix;\n  let curTransform;\n  let transformMatrix;\n  const curStyle = getComputedStyle(el, null);\n  if (window.WebKitCSSMatrix) {\n    curTransform = curStyle.transform || curStyle.webkitTransform;\n    if (curTransform.split(',').length > 6) {\n      curTransform = curTransform.split(', ').map(a => a.replace(',', '.')).join(', ');\n    }\n    // Some old versions of Webkit choke when 'none' is passed; pass\n    // empty string instead in this case\n    transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n  } else {\n    transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n    matrix = transformMatrix.toString().split(',');\n  }\n  if (axis === 'x') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[4]);\n  }\n  if (axis === 'y') {\n    // Latest Chrome and webkits Fix\n    if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n    // Crazy IE10 Matrix\n    else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n    // Normal Browsers\n    else curTransform = parseFloat(matrix[5]);\n  }\n  return curTransform || 0;\n}\nfunction isObject(o) {\n  return typeof o === 'object' && o !== null && o.constructor && Object.prototype.toString.call(o).slice(8, -1) === 'Object';\n}\nfunction isNode(node) {\n  // eslint-disable-next-line\n  if (typeof window !== 'undefined' && typeof window.HTMLElement !== 'undefined') {\n    return node instanceof HTMLElement;\n  }\n  return node && (node.nodeType === 1 || node.nodeType === 11);\n}\nfunction extend(...args) {\n  const to = Object(args[0]);\n  const noExtend = ['__proto__', 'constructor', 'prototype'];\n  for (let i = 1; i < args.length; i += 1) {\n    const nextSource = args[i];\n    if (nextSource !== undefined && nextSource !== null && !isNode(nextSource)) {\n      const keysArray = Object.keys(Object(nextSource)).filter(key => noExtend.indexOf(key) < 0);\n      for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n        const nextKey = keysArray[nextIndex];\n        const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n        if (desc !== undefined && desc.enumerable) {\n          if (isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else if (!isObject(to[nextKey]) && isObject(nextSource[nextKey])) {\n            to[nextKey] = {};\n            if (nextSource[nextKey].__swiper__) {\n              to[nextKey] = nextSource[nextKey];\n            } else {\n              extend(to[nextKey], nextSource[nextKey]);\n            }\n          } else {\n            to[nextKey] = nextSource[nextKey];\n          }\n        }\n      }\n    }\n  }\n  return to;\n}\nfunction setCSSProperty(el, varName, varValue) {\n  el.style.setProperty(varName, varValue);\n}\nfunction animateCSSModeScroll({\n  swiper,\n  targetPosition,\n  side\n}) {\n  const window = getWindow();\n  const startPosition = -swiper.translate;\n  let startTime = null;\n  let time;\n  const duration = swiper.params.speed;\n  swiper.wrapperEl.style.scrollSnapType = 'none';\n  window.cancelAnimationFrame(swiper.cssModeFrameID);\n  const dir = targetPosition > startPosition ? 'next' : 'prev';\n  const isOutOfBound = (current, target) => {\n    return dir === 'next' && current >= target || dir === 'prev' && current <= target;\n  };\n  const animate = () => {\n    time = new Date().getTime();\n    if (startTime === null) {\n      startTime = time;\n    }\n    const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n    const easeProgress = 0.5 - Math.cos(progress * Math.PI) / 2;\n    let currentPosition = startPosition + easeProgress * (targetPosition - startPosition);\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      currentPosition = targetPosition;\n    }\n    swiper.wrapperEl.scrollTo({\n      [side]: currentPosition\n    });\n    if (isOutOfBound(currentPosition, targetPosition)) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.scrollSnapType = '';\n      setTimeout(() => {\n        swiper.wrapperEl.style.overflow = '';\n        swiper.wrapperEl.scrollTo({\n          [side]: currentPosition\n        });\n      });\n      window.cancelAnimationFrame(swiper.cssModeFrameID);\n      return;\n    }\n    swiper.cssModeFrameID = window.requestAnimationFrame(animate);\n  };\n  animate();\n}\nfunction getSlideTransformEl(slideEl) {\n  return slideEl.querySelector('.swiper-slide-transform') || slideEl.shadowEl && slideEl.shadowEl.querySelector('.swiper-slide-transform') || slideEl;\n}\nfunction findElementsInElements(elements = [], selector = '') {\n  const found = [];\n  elements.forEach(el => {\n    found.push(...el.querySelectorAll(selector));\n  });\n  return found;\n}\nfunction elementChildren(element, selector = '') {\n  return [...element.children].filter(el => el.matches(selector));\n}\nfunction createElement(tag, classes = []) {\n  const el = document.createElement(tag);\n  el.classList.add(...(Array.isArray(classes) ? classes : [classes]));\n  return el;\n}\nfunction elementOffset(el) {\n  const window = getWindow();\n  const document = getDocument();\n  const box = el.getBoundingClientRect();\n  const body = document.body;\n  const clientTop = el.clientTop || body.clientTop || 0;\n  const clientLeft = el.clientLeft || body.clientLeft || 0;\n  const scrollTop = el === window ? window.scrollY : el.scrollTop;\n  const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n  return {\n    top: box.top + scrollTop - clientTop,\n    left: box.left + scrollLeft - clientLeft\n  };\n}\nfunction elementPrevAll(el, selector) {\n  const prevEls = [];\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if (prev.matches(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return prevEls;\n}\nfunction elementNextAll(el, selector) {\n  const nextEls = [];\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if (next.matches(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return nextEls;\n}\nfunction elementStyle(el, prop) {\n  const window = getWindow();\n  return window.getComputedStyle(el, null).getPropertyValue(prop);\n}\nfunction elementIndex(el) {\n  let child = el;\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\nfunction elementParents(el, selector) {\n  const parents = []; // eslint-disable-line\n  let parent = el.parentElement; // eslint-disable-line\n  while (parent) {\n    if (selector) {\n      if (parent.matches(selector)) parents.push(parent);\n    } else {\n      parents.push(parent);\n    }\n    parent = parent.parentElement;\n  }\n  return parents;\n}\nfunction elementTransitionEnd(el, callback) {\n  function fireCallBack(e) {\n    if (e.target !== el) return;\n    callback.call(el, e);\n    el.removeEventListener('transitionend', fireCallBack);\n  }\n  if (callback) {\n    el.addEventListener('transitionend', fireCallBack);\n  }\n}\nfunction elementOuterSize(el, size, includeMargins) {\n  const window = getWindow();\n  if (includeMargins) {\n    return el[size === 'width' ? 'offsetWidth' : 'offsetHeight'] + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-right' : 'margin-top')) + parseFloat(window.getComputedStyle(el, null).getPropertyValue(size === 'width' ? 'margin-left' : 'margin-bottom'));\n  }\n  return el.offsetWidth;\n}\nexport { animateCSSModeScroll, deleteProps, nextTick, now, getTranslate, isObject, extend, getComputedStyle, setCSSProperty, getSlideTransformEl,\n// dom\nfindElementsInElements, createElement, elementChildren, elementOffset, elementPrevAll, elementNextAll, elementStyle, elementIndex, elementParents, elementTransitionEnd, elementOuterSize };","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","import { getWindow, getDocument } from 'ssr-window';\nlet support;\nfunction calcSupport() {\n  const window = getWindow();\n  const document = getDocument();\n  return {\n    smoothScroll: document.documentElement && 'scrollBehavior' in document.documentElement.style,\n    touch: !!('ontouchstart' in window || window.DocumentTouch && document instanceof window.DocumentTouch)\n  };\n}\nfunction getSupport() {\n  if (!support) {\n    support = calcSupport();\n  }\n  return support;\n}\nexport { getSupport };","import { getWindow } from 'ssr-window';\nimport { getSupport } from './get-support.js';\nlet deviceCached;\nfunction calcDevice({\n  userAgent\n} = {}) {\n  const support = getSupport();\n  const window = getWindow();\n  const platform = window.navigator.platform;\n  const ua = userAgent || window.navigator.userAgent;\n  const device = {\n    ios: false,\n    android: false\n  };\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const windows = platform === 'Win32';\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  const iPadScreens = ['1024x1366', '1366x1024', '834x1194', '1194x834', '834x1112', '1112x834', '768x1024', '1024x768', '820x1180', '1180x820', '810x1080', '1080x810'];\n  if (!ipad && macos && support.touch && iPadScreens.indexOf(`${screenWidth}x${screenHeight}`) >= 0) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    if (!ipad) ipad = [0, 1, '13_0_0'];\n    macos = false;\n  }\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.android = true;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n\n  // Export object\n  return device;\n}\nfunction getDevice(overrides = {}) {\n  if (!deviceCached) {\n    deviceCached = calcDevice(overrides);\n  }\n  return deviceCached;\n}\nexport { getDevice };","import { getWindow } from 'ssr-window';\nlet browser;\nfunction calcBrowser() {\n  const window = getWindow();\n  let needPerspectiveFix = false;\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0;\n  }\n  if (isSafari()) {\n    const ua = String(window.navigator.userAgent);\n    if (ua.includes('Version/')) {\n      const [major, minor] = ua.split('Version/')[1].split(' ')[0].split('.').map(num => Number(num));\n      needPerspectiveFix = major < 16 || major === 16 && minor < 2;\n    }\n  }\n  return {\n    isSafari: needPerspectiveFix || isSafari(),\n    needPerspectiveFix,\n    isWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent)\n  };\n}\nfunction getBrowser() {\n  if (!browser) {\n    browser = calcBrowser();\n  }\n  return browser;\n}\nexport { getBrowser };","import { getWindow } from 'ssr-window';\nexport default function Resize({\n  swiper,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  let observer = null;\n  let animationFrame = null;\n  const resizeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('beforeResize');\n    emit('resize');\n  };\n  const createObserver = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    observer = new ResizeObserver(entries => {\n      animationFrame = window.requestAnimationFrame(() => {\n        const {\n          width,\n          height\n        } = swiper;\n        let newWidth = width;\n        let newHeight = height;\n        entries.forEach(({\n          contentBoxSize,\n          contentRect,\n          target\n        }) => {\n          if (target && target !== swiper.el) return;\n          newWidth = contentRect ? contentRect.width : (contentBoxSize[0] || contentBoxSize).inlineSize;\n          newHeight = contentRect ? contentRect.height : (contentBoxSize[0] || contentBoxSize).blockSize;\n        });\n        if (newWidth !== width || newHeight !== height) {\n          resizeHandler();\n        }\n      });\n    });\n    observer.observe(swiper.el);\n  };\n  const removeObserver = () => {\n    if (animationFrame) {\n      window.cancelAnimationFrame(animationFrame);\n    }\n    if (observer && observer.unobserve && swiper.el) {\n      observer.unobserve(swiper.el);\n      observer = null;\n    }\n  };\n  const orientationChangeHandler = () => {\n    if (!swiper || swiper.destroyed || !swiper.initialized) return;\n    emit('orientationchange');\n  };\n  on('init', () => {\n    if (swiper.params.resizeObserver && typeof window.ResizeObserver !== 'undefined') {\n      createObserver();\n      return;\n    }\n    window.addEventListener('resize', resizeHandler);\n    window.addEventListener('orientationchange', orientationChangeHandler);\n  });\n  on('destroy', () => {\n    removeObserver();\n    window.removeEventListener('resize', resizeHandler);\n    window.removeEventListener('orientationchange', orientationChangeHandler);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementParents } from '../../../shared/utils.js';\nexport default function Observer({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const observers = [];\n  const window = getWindow();\n  const attach = (target, options = {}) => {\n    const ObserverFunc = window.MutationObserver || window.WebkitMutationObserver;\n    const observer = new ObserverFunc(mutations => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (swiper.__preventObserver__) return;\n      if (mutations.length === 1) {\n        emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        emit('observerUpdate', mutations[0]);\n      };\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData\n    });\n    observers.push(observer);\n  };\n  const init = () => {\n    if (!swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = elementParents(swiper.el);\n      for (let i = 0; i < containerParents.length; i += 1) {\n        attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    attach(swiper.el, {\n      childList: swiper.params.observeSlideChildren\n    });\n\n    // Observe wrapper\n    attach(swiper.wrapperEl, {\n      attributes: false\n    });\n  };\n  const destroy = () => {\n    observers.forEach(observer => {\n      observer.disconnect();\n    });\n    observers.splice(0, observers.length);\n  };\n  extendParams({\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false\n  });\n  on('init', init);\n  on('destroy', destroy);\n}","/* eslint-disable no-underscore-dangle */\n\nexport default {\n  on(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach(event => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  },\n  once(events, handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.__emitterProxy) {\n        delete onceHandler.__emitterProxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.__emitterProxy = handler;\n    return self.on(events, onceHandler, priority);\n  },\n  onAny(handler, priority) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    if (self.eventsAnyListeners.indexOf(handler) < 0) {\n      self.eventsAnyListeners[method](handler);\n    }\n    return self;\n  },\n  offAny(handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsAnyListeners) return self;\n    const index = self.eventsAnyListeners.indexOf(handler);\n    if (index >= 0) {\n      self.eventsAnyListeners.splice(index, 1);\n    }\n    return self;\n  },\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach(event => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || eventHandler.__emitterProxy && eventHandler.__emitterProxy === handler) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  },\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners || self.destroyed) return self;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    data.unshift(context);\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach(event => {\n      if (self.eventsAnyListeners && self.eventsAnyListeners.length) {\n        self.eventsAnyListeners.forEach(eventHandler => {\n          eventHandler.apply(context, [event, ...data]);\n        });\n      }\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        self.eventsListeners[event].forEach(eventHandler => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n};","import updateSize from './updateSize.js';\nimport updateSlides from './updateSlides.js';\nimport updateAutoHeight from './updateAutoHeight.js';\nimport updateSlidesOffset from './updateSlidesOffset.js';\nimport updateSlidesProgress from './updateSlidesProgress.js';\nimport updateProgress from './updateProgress.js';\nimport updateSlidesClasses from './updateSlidesClasses.js';\nimport updateActiveIndex from './updateActiveIndex.js';\nimport updateClickedSlide from './updateClickedSlide.js';\nexport default {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide\n};","import { elementStyle } from '../../shared/utils.js';\nexport default function updateSize() {\n  const swiper = this;\n  let width;\n  let height;\n  const el = swiper.el;\n  if (typeof swiper.params.width !== 'undefined' && swiper.params.width !== null) {\n    width = swiper.params.width;\n  } else {\n    width = el.clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined' && swiper.params.height !== null) {\n    height = swiper.params.height;\n  } else {\n    height = el.clientHeight;\n  }\n  if (width === 0 && swiper.isHorizontal() || height === 0 && swiper.isVertical()) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt(elementStyle(el, 'padding-left') || 0, 10) - parseInt(elementStyle(el, 'padding-right') || 0, 10);\n  height = height - parseInt(elementStyle(el, 'padding-top') || 0, 10) - parseInt(elementStyle(el, 'padding-bottom') || 0, 10);\n  if (Number.isNaN(width)) width = 0;\n  if (Number.isNaN(height)) height = 0;\n  Object.assign(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height\n  });\n}","import { elementChildren, elementOuterSize, elementStyle, setCSSProperty } from '../../shared/utils.js';\nexport default function updateSlides() {\n  const swiper = this;\n  function getDirectionLabel(property) {\n    if (swiper.isHorizontal()) {\n      return property;\n    }\n    // prettier-ignore\n    return {\n      'width': 'height',\n      'margin-top': 'margin-left',\n      'margin-bottom ': 'margin-right',\n      'margin-left': 'margin-top',\n      'margin-right': 'margin-bottom',\n      'padding-left': 'padding-top',\n      'padding-right': 'padding-bottom',\n      'marginRight': 'marginBottom'\n    }[property];\n  }\n  function getDirectionPropertyValue(node, label) {\n    return parseFloat(node.getPropertyValue(getDirectionLabel(label)) || 0);\n  }\n  const params = swiper.params;\n  const {\n    wrapperEl,\n    slidesEl,\n    size: swiperSize,\n    rtlTranslate: rtl,\n    wrongRTL\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = elementChildren(slidesEl, `.${swiper.params.slideClass}, swiper-slide`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.slidesGrid.length;\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = parseFloat(spaceBetween.replace('%', '')) / 100 * swiperSize;\n  }\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  slides.forEach(slideEl => {\n    if (rtl) {\n      slideEl.style.marginLeft = '';\n    } else {\n      slideEl.style.marginRight = '';\n    }\n    slideEl.style.marginBottom = '';\n    slideEl.style.marginTop = '';\n  });\n\n  // reset cssMode offsets\n  if (params.centeredSlides && params.cssMode) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', '');\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', '');\n  }\n  const gridEnabled = params.grid && params.grid.rows > 1 && swiper.grid;\n  if (gridEnabled) {\n    swiper.grid.initSlides(slidesLength);\n  }\n\n  // Calc slides\n  let slideSize;\n  const shouldResetSlideSize = params.slidesPerView === 'auto' && params.breakpoints && Object.keys(params.breakpoints).filter(key => {\n    return typeof params.breakpoints[key].slidesPerView !== 'undefined';\n  }).length > 0;\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    let slide;\n    if (slides[i]) slide = slides[i];\n    if (gridEnabled) {\n      swiper.grid.updateSlide(i, slide, slidesLength, getDirectionLabel);\n    }\n    if (slides[i] && elementStyle(slide, 'display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      if (shouldResetSlideSize) {\n        slides[i].style[getDirectionLabel('width')] = ``;\n      }\n      const slideStyles = getComputedStyle(slide);\n      const currentTransform = slide.style.transform;\n      const currentWebKitTransform = slide.style.webkitTransform;\n      if (currentTransform) {\n        slide.style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal() ? elementOuterSize(slide, 'width', true) : elementOuterSize(slide, 'height', true);\n      } else {\n        // eslint-disable-next-line\n        const width = getDirectionPropertyValue(slideStyles, 'width');\n        const paddingLeft = getDirectionPropertyValue(slideStyles, 'padding-left');\n        const paddingRight = getDirectionPropertyValue(slideStyles, 'padding-right');\n        const marginLeft = getDirectionPropertyValue(slideStyles, 'margin-left');\n        const marginRight = getDirectionPropertyValue(slideStyles, 'margin-right');\n        const boxSizing = slideStyles.getPropertyValue('box-sizing');\n        if (boxSizing && boxSizing === 'border-box') {\n          slideSize = width + marginLeft + marginRight;\n        } else {\n          const {\n            clientWidth,\n            offsetWidth\n          } = slide;\n          slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight + (offsetWidth - clientWidth);\n        }\n      }\n      if (currentTransform) {\n        slide.style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide.style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - (params.slidesPerView - 1) * spaceBetween) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n      if (slides[i]) {\n        slides[i].style[getDirectionLabel('width')] = `${slideSize}px`;\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + slideSize / 2 + prevSlideSize / 2 + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - swiperSize / 2 - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if (index % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index - Math.min(swiper.params.slidesPerGroupSkip, index)) % swiper.params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n    swiper.virtualSize += slideSize + spaceBetween;\n    prevSlideSize = slideSize;\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  if (rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    wrapperEl.style.width = `${swiper.virtualSize + params.spaceBetween}px`;\n  }\n  if (params.setWrapperSize) {\n    wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + params.spaceBetween}px`;\n  }\n  if (gridEnabled) {\n    swiper.grid.updateWrapperSize(slideSize, snapGrid, getDirectionLabel);\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    const newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (isVirtual && params.loop) {\n    const size = slidesSizesGrid[0] + spaceBetween;\n    if (params.slidesPerGroup > 1) {\n      const groups = Math.ceil((swiper.virtual.slidesBefore + swiper.virtual.slidesAfter) / params.slidesPerGroup);\n      const groupSize = size * params.slidesPerGroup;\n      for (let i = 0; i < groups; i += 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + groupSize);\n      }\n    }\n    for (let i = 0; i < swiper.virtual.slidesBefore + swiper.virtual.slidesAfter; i += 1) {\n      if (params.slidesPerGroup === 1) {\n        snapGrid.push(snapGrid[snapGrid.length - 1] + size);\n      }\n      slidesGrid.push(slidesGrid[slidesGrid.length - 1] + size);\n      swiper.virtualSize += size;\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n  if (params.spaceBetween !== 0) {\n    const key = swiper.isHorizontal() && rtl ? 'marginLeft' : getDirectionLabel('marginRight');\n    slides.filter((_, slideIndex) => {\n      if (!params.cssMode || params.loop) return true;\n      if (slideIndex === slides.length - 1) {\n        return false;\n      }\n      return true;\n    }).forEach(slideEl => {\n      slideEl.style[key] = `${spaceBetween}px`;\n    });\n  }\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map(snap => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach(slideSizeValue => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n  Object.assign(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid\n  });\n  if (params.centeredSlides && params.cssMode && !params.centeredSlidesBounds) {\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-before', `${-snapGrid[0]}px`);\n    setCSSProperty(wrapperEl, '--swiper-centered-offset-after', `${swiper.size / 2 - slidesSizesGrid[slidesSizesGrid.length - 1] / 2}px`);\n    const addToSnapGrid = -swiper.snapGrid[0];\n    const addToSlidesGrid = -swiper.slidesGrid[0];\n    swiper.snapGrid = swiper.snapGrid.map(v => v + addToSnapGrid);\n    swiper.slidesGrid = swiper.slidesGrid.map(v => v + addToSlidesGrid);\n  }\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (!isVirtual && !params.cssMode && (params.effect === 'slide' || params.effect === 'fade')) {\n    const backFaceHiddenClass = `${params.containerModifierClass}backface-hidden`;\n    const hasClassBackfaceClassAdded = swiper.el.classList.contains(backFaceHiddenClass);\n    if (slidesLength <= params.maxBackfaceHiddenSlides) {\n      if (!hasClassBackfaceClassAdded) swiper.el.classList.add(backFaceHiddenClass);\n    } else if (hasClassBackfaceClassAdded) {\n      swiper.el.classList.remove(backFaceHiddenClass);\n    }\n  }\n}","export default function updateAutoHeight(speed) {\n  const swiper = this;\n  const activeSlides = [];\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  const getSlideByIndex = index => {\n    if (isVirtual) {\n      return swiper.getSlideIndexByData(index);\n    }\n    return swiper.slides[index];\n  };\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    if (swiper.params.centeredSlides) {\n      (swiper.visibleSlides || []).forEach(slide => {\n        activeSlides.push(slide);\n      });\n    } else {\n      for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n        const index = swiper.activeIndex + i;\n        if (index > swiper.slides.length && !isVirtual) break;\n        activeSlides.push(getSlideByIndex(index));\n      }\n    }\n  } else {\n    activeSlides.push(getSlideByIndex(swiper.activeIndex));\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight || newHeight === 0) swiper.wrapperEl.style.height = `${newHeight}px`;\n}","export default function updateSlidesOffset() {\n  const swiper = this;\n  const slides = swiper.slides;\n  // eslint-disable-next-line\n  const minusOffset = swiper.isElement ? swiper.isHorizontal() ? swiper.wrapperEl.offsetLeft : swiper.wrapperEl.offsetTop : 0;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = (swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop) - minusOffset - swiper.cssOverflowAdjustment();\n  }\n}","export default function updateSlidesProgress(translate = this && this.translate || 0) {\n  const swiper = this;\n  const params = swiper.params;\n  const {\n    slides,\n    rtlTranslate: rtl,\n    snapGrid\n  } = swiper;\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideVisibleClass);\n  });\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    let slideOffset = slide.swiperSlideOffset;\n    if (params.cssMode && params.centeredSlides) {\n      slideOffset -= slides[0].swiperSlideOffset;\n    }\n    const slideProgress = (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const originalSlideProgress = (offsetCenter - snapGrid[0] + (params.centeredSlides ? swiper.minTranslate() : 0) - slideOffset) / (slide.swiperSlideSize + params.spaceBetween);\n    const slideBefore = -(offsetCenter - slideOffset);\n    const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n    const isVisible = slideBefore >= 0 && slideBefore < swiper.size - 1 || slideAfter > 1 && slideAfter <= swiper.size || slideBefore <= 0 && slideAfter >= swiper.size;\n    if (isVisible) {\n      swiper.visibleSlides.push(slide);\n      swiper.visibleSlidesIndexes.push(i);\n      slides[i].classList.add(params.slideVisibleClass);\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n    slide.originalProgress = rtl ? -originalSlideProgress : originalSlideProgress;\n  }\n}","export default function updateProgress(translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = swiper && swiper.translate && swiper.translate * multiplier || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let {\n    progress,\n    isBeginning,\n    isEnd,\n    progressLoop\n  } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / translatesDiff;\n    const isBeginningRounded = Math.abs(translate - swiper.minTranslate()) < 1;\n    const isEndRounded = Math.abs(translate - swiper.maxTranslate()) < 1;\n    isBeginning = isBeginningRounded || progress <= 0;\n    isEnd = isEndRounded || progress >= 1;\n    if (isBeginningRounded) progress = 0;\n    if (isEndRounded) progress = 1;\n  }\n  if (params.loop) {\n    const firstSlideIndex = swiper.getSlideIndexByData(0);\n    const lastSlideIndex = swiper.getSlideIndexByData(swiper.slides.length - 1);\n    const firstSlideTranslate = swiper.slidesGrid[firstSlideIndex];\n    const lastSlideTranslate = swiper.slidesGrid[lastSlideIndex];\n    const translateMax = swiper.slidesGrid[swiper.slidesGrid.length - 1];\n    const translateAbs = Math.abs(translate);\n    if (translateAbs >= firstSlideTranslate) {\n      progressLoop = (translateAbs - firstSlideTranslate) / translateMax;\n    } else {\n      progressLoop = (translateAbs + translateMax - lastSlideTranslate) / translateMax;\n    }\n    if (progressLoop > 1) progressLoop -= 1;\n  }\n  Object.assign(swiper, {\n    progress,\n    progressLoop,\n    isBeginning,\n    isEnd\n  });\n  if (params.watchSlidesProgress || params.centeredSlides && params.autoHeight) swiper.updateSlidesProgress(translate);\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if (wasBeginning && !isBeginning || wasEnd && !isEnd) {\n    swiper.emit('fromEdge');\n  }\n  swiper.emit('progress', progress);\n}","import { elementChildren, elementNextAll, elementPrevAll } from '../../shared/utils.js';\nexport default function updateSlidesClasses() {\n  const swiper = this;\n  const {\n    slides,\n    params,\n    slidesEl,\n    activeIndex\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const getFilteredSlide = selector => {\n    return elementChildren(slidesEl, `.${params.slideClass}${selector}, swiper-slide${selector}`)[0];\n  };\n  slides.forEach(slideEl => {\n    slideEl.classList.remove(params.slideActiveClass, params.slideNextClass, params.slidePrevClass);\n  });\n  let activeSlide;\n  if (isVirtual) {\n    if (params.loop) {\n      let slideIndex = activeIndex - swiper.virtual.slidesBefore;\n      if (slideIndex < 0) slideIndex = swiper.virtual.slides.length + slideIndex;\n      if (slideIndex >= swiper.virtual.slides.length) slideIndex -= swiper.virtual.slides.length;\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${slideIndex}\"]`);\n    } else {\n      activeSlide = getFilteredSlide(`[data-swiper-slide-index=\"${activeIndex}\"]`);\n    }\n  } else {\n    activeSlide = slides[activeIndex];\n  }\n  if (activeSlide) {\n    // Active classes\n    activeSlide.classList.add(params.slideActiveClass);\n\n    // Next Slide\n    let nextSlide = elementNextAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !nextSlide) {\n      nextSlide = slides[0];\n    }\n    if (nextSlide) {\n      nextSlide.classList.add(params.slideNextClass);\n    }\n    // Prev Slide\n    let prevSlide = elementPrevAll(activeSlide, `.${params.slideClass}, swiper-slide`)[0];\n    if (params.loop && !prevSlide === 0) {\n      prevSlide = slides[slides.length - 1];\n    }\n    if (prevSlide) {\n      prevSlide.classList.add(params.slidePrevClass);\n    }\n  }\n  swiper.emitSlidesClasses();\n}","import { preload } from '../../shared/process-lazy-preloader.js';\nexport function getActiveIndexByTranslate(swiper) {\n  const {\n    slidesGrid,\n    params\n  } = swiper;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  let activeIndex;\n  for (let i = 0; i < slidesGrid.length; i += 1) {\n    if (typeof slidesGrid[i + 1] !== 'undefined') {\n      if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - (slidesGrid[i + 1] - slidesGrid[i]) / 2) {\n        activeIndex = i;\n      } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n        activeIndex = i + 1;\n      }\n    } else if (translate >= slidesGrid[i]) {\n      activeIndex = i;\n    }\n  }\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n  }\n  return activeIndex;\n}\nexport default function updateActiveIndex(newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    snapGrid,\n    params,\n    activeIndex: previousIndex,\n    realIndex: previousRealIndex,\n    snapIndex: previousSnapIndex\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  const getVirtualRealIndex = aIndex => {\n    let realIndex = aIndex - swiper.virtual.slidesBefore;\n    if (realIndex < 0) {\n      realIndex = swiper.virtual.slides.length + realIndex;\n    }\n    if (realIndex >= swiper.virtual.slides.length) {\n      realIndex -= swiper.virtual.slides.length;\n    }\n    return realIndex;\n  };\n  if (typeof activeIndex === 'undefined') {\n    activeIndex = getActiveIndexByTranslate(swiper);\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    const skip = Math.min(params.slidesPerGroupSkip, activeIndex);\n    snapIndex = skip + Math.floor((activeIndex - skip) / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    if (swiper.params.loop && swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.realIndex = getVirtualRealIndex(activeIndex);\n    }\n    return;\n  }\n  // Get real index\n  let realIndex;\n  if (swiper.virtual && params.virtual.enabled && params.loop) {\n    realIndex = getVirtualRealIndex(activeIndex);\n  } else if (swiper.slides[activeIndex]) {\n    realIndex = parseInt(swiper.slides[activeIndex].getAttribute('data-swiper-slide-index') || activeIndex, 10);\n  } else {\n    realIndex = activeIndex;\n  }\n  Object.assign(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex\n  });\n  if (swiper.initialized) {\n    preload(swiper);\n  }\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.params.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}","export const processLazyPreloader = (swiper, imageEl) => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  const slideSelector = () => swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  const slideEl = imageEl.closest(slideSelector());\n  if (slideEl) {\n    const lazyEl = slideEl.querySelector(`.${swiper.params.lazyPreloaderClass}`);\n    if (lazyEl) lazyEl.remove();\n  }\n};\nconst unlazy = (swiper, index) => {\n  if (!swiper.slides[index]) return;\n  const imageEl = swiper.slides[index].querySelector('[loading=\"lazy\"]');\n  if (imageEl) imageEl.removeAttribute('loading');\n};\nexport const preload = swiper => {\n  if (!swiper || swiper.destroyed || !swiper.params) return;\n  let amount = swiper.params.lazyPreloadPrevNext;\n  const len = swiper.slides.length;\n  if (!len || !amount || amount < 0) return;\n  amount = Math.min(amount, len);\n  const slidesPerView = swiper.params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(swiper.params.slidesPerView);\n  const activeIndex = swiper.activeIndex;\n  const slideIndexLastInView = activeIndex + slidesPerView - 1;\n  if (swiper.params.rewind) {\n    for (let i = activeIndex - amount; i <= slideIndexLastInView + amount; i += 1) {\n      const realIndex = (i % len + len) % len;\n      if (realIndex !== activeIndex && realIndex > slideIndexLastInView) unlazy(swiper, realIndex);\n    }\n  } else {\n    for (let i = Math.max(slideIndexLastInView - amount, 0); i <= Math.min(slideIndexLastInView + amount, len - 1); i += 1) {\n      if (i !== activeIndex && i > slideIndexLastInView) unlazy(swiper, i);\n    }\n  }\n};","export default function updateClickedSlide(e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = e.closest(`.${params.slideClass}, swiper-slide`);\n  let slideFound = false;\n  let slideIndex;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) {\n        slideFound = true;\n        slideIndex = i;\n        break;\n      }\n    }\n  }\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt(slide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = slideIndex;\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}","import getTranslate from './getTranslate.js';\nimport setTranslate from './setTranslate.js';\nimport minTranslate from './minTranslate.js';\nimport maxTranslate from './maxTranslate.js';\nimport translateTo from './translateTo.js';\nexport default {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo\n};","import { getTranslate } from '../../shared/utils.js';\nexport default function getSwiperTranslate(axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n  const {\n    params,\n    rtlTranslate: rtl,\n    translate,\n    wrapperEl\n  } = swiper;\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n  let currentTranslate = getTranslate(wrapperEl, axis);\n  currentTranslate += swiper.cssOverflowAdjustment();\n  if (rtl) currentTranslate = -currentTranslate;\n  return currentTranslate || 0;\n}","export default function setTranslate(translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl,\n    params,\n    wrapperEl,\n    progress\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    if (swiper.isHorizontal()) {\n      x -= swiper.cssOverflowAdjustment();\n    } else {\n      y -= swiper.cssOverflowAdjustment();\n    }\n    wrapperEl.style.transform = `translate3d(${x}px, ${y}px, ${z}px)`;\n  }\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, byController);\n}","export default function minTranslate() {\n  return -this.snapGrid[0];\n}","export default function maxTranslate() {\n  return -this.snapGrid[this.snapGrid.length - 1];\n}","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function translateTo(translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    wrapperEl\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: -newTranslate,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: -newTranslate,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.wrapperEl.removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.wrapperEl.addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n  return true;\n}","import setTransition from './setTransition.js';\nimport transitionStart from './transitionStart.js';\nimport transitionEnd from './transitionEnd.js';\nexport default {\n  setTransition,\n  transitionStart,\n  transitionEnd\n};","export default function setTransition(duration, byController) {\n  const swiper = this;\n  if (!swiper.params.cssMode) {\n    swiper.wrapperEl.style.transitionDuration = `${duration}ms`;\n  }\n  swiper.emit('setTransition', duration, byController);\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionStart(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'Start'\n  });\n}","export default function transitionEmit({\n  swiper,\n  runCallbacks,\n  direction,\n  step\n}) {\n  const {\n    activeIndex,\n    previousIndex\n  } = swiper;\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';else if (activeIndex < previousIndex) dir = 'prev';else dir = 'reset';\n  }\n  swiper.emit(`transition${step}`);\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit(`slideResetTransition${step}`);\n      return;\n    }\n    swiper.emit(`slideChangeTransition${step}`);\n    if (dir === 'next') {\n      swiper.emit(`slideNextTransition${step}`);\n    } else {\n      swiper.emit(`slidePrevTransition${step}`);\n    }\n  }\n}","import transitionEmit from './transitionEmit.js';\nexport default function transitionEnd(runCallbacks = true, direction) {\n  const swiper = this;\n  const {\n    params\n  } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n  transitionEmit({\n    swiper,\n    runCallbacks,\n    direction,\n    step: 'End'\n  });\n}","import slideTo from './slideTo.js';\nimport slideToLoop from './slideToLoop.js';\nimport slideNext from './slideNext.js';\nimport slidePrev from './slidePrev.js';\nimport slideReset from './slideReset.js';\nimport slideToClosest from './slideToClosest.js';\nimport slideToClickedSlide from './slideToClickedSlide.js';\nexport default {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide\n};","import { animateCSSModeScroll } from '../../shared/utils.js';\nexport default function slideTo(index = 0, speed = this.params.speed, runCallbacks = true, internal, initial) {\n  if (typeof index === 'string') {\n    index = parseInt(index, 10);\n  }\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    previousIndex,\n    activeIndex,\n    rtlTranslate: rtl,\n    wrapperEl,\n    enabled\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition || !enabled && !internal && !initial) {\n    return false;\n  }\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, slideIndex);\n  let snapIndex = skip + Math.floor((slideIndex - skip) / swiper.params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  const translate = -snapGrid[snapIndex];\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      const normalizedTranslate = -Math.floor(translate * 100);\n      const normalizedGrid = Math.floor(slidesGrid[i] * 100);\n      const normalizedGridNext = Math.floor(slidesGrid[i + 1] * 100);\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext - (normalizedGridNext - normalizedGrid) / 2) {\n          slideIndex = i;\n        } else if (normalizedTranslate >= normalizedGrid && normalizedTranslate < normalizedGridNext) {\n          slideIndex = i + 1;\n        }\n      } else if (normalizedTranslate >= normalizedGrid) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) {\n        return false;\n      }\n    }\n  }\n  if (slideIndex !== (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  // Update progress\n  swiper.updateProgress(translate);\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';else if (slideIndex < activeIndex) direction = 'prev';else direction = 'reset';\n\n  // Update Index\n  if (rtl && -translate === swiper.translate || !rtl && translate === swiper.translate) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    const t = rtl ? translate : -translate;\n    if (speed === 0) {\n      const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n      if (isVirtual) {\n        swiper.wrapperEl.style.scrollSnapType = 'none';\n        swiper._immediateVirtual = true;\n      }\n      if (isVirtual && !swiper._cssModeVirtualInitialSet && swiper.params.initialSlide > 0) {\n        swiper._cssModeVirtualInitialSet = true;\n        requestAnimationFrame(() => {\n          wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = t;\n      }\n      if (isVirtual) {\n        requestAnimationFrame(() => {\n          swiper.wrapperEl.style.scrollSnapType = '';\n          swiper._immediateVirtual = false;\n        });\n      }\n    } else {\n      if (!swiper.support.smoothScroll) {\n        animateCSSModeScroll({\n          swiper,\n          targetPosition: t,\n          side: isH ? 'left' : 'top'\n        });\n        return true;\n      }\n      wrapperEl.scrollTo({\n        [isH ? 'left' : 'top']: t,\n        behavior: 'smooth'\n      });\n    }\n    return true;\n  }\n  swiper.setTransition(speed);\n  swiper.setTranslate(translate);\n  swiper.updateActiveIndex(slideIndex);\n  swiper.updateSlidesClasses();\n  swiper.emit('beforeTransitionStart', speed, internal);\n  swiper.transitionStart(runCallbacks, direction);\n  if (speed === 0) {\n    swiper.transitionEnd(runCallbacks, direction);\n  } else if (!swiper.animating) {\n    swiper.animating = true;\n    if (!swiper.onSlideToWrapperTransitionEnd) {\n      swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n        if (!swiper || swiper.destroyed) return;\n        if (e.target !== this) return;\n        swiper.wrapperEl.removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n        swiper.onSlideToWrapperTransitionEnd = null;\n        delete swiper.onSlideToWrapperTransitionEnd;\n        swiper.transitionEnd(runCallbacks, direction);\n      };\n    }\n    swiper.wrapperEl.addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n  }\n  return true;\n}","export default function slideToLoop(index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  if (typeof index === 'string') {\n    const indexAsNumber = parseInt(index, 10);\n    index = indexAsNumber;\n  }\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      // eslint-disable-next-line\n      newIndex = newIndex + swiper.virtual.slidesBefore;\n    } else {\n      newIndex = swiper.getSlideIndexByData(newIndex);\n    }\n  }\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideNext(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    enabled,\n    params,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  let perGroup = params.slidesPerGroup;\n  if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n    perGroup = Math.max(swiper.slidesPerViewDynamic('current', true), 1);\n  }\n  const increment = swiper.activeIndex < params.slidesPerGroupSkip ? 1 : perGroup;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'next'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  if (params.rewind && swiper.isEnd) {\n    return swiper.slideTo(0, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + increment, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slidePrev(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params,\n    snapGrid,\n    slidesGrid,\n    rtlTranslate,\n    enabled,\n    animating\n  } = swiper;\n  if (!enabled) return swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  if (params.loop) {\n    if (animating && !isVirtual && params.loopPreventsSliding) return false;\n    swiper.loopFix({\n      direction: 'prev'\n    });\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.wrapperEl.clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map(val => normalize(val));\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    let prevSnapIndex;\n    snapGrid.forEach((snap, snapIndex) => {\n      if (normalizedTranslate >= snap) {\n        // prevSnap = snap;\n        prevSnapIndex = snapIndex;\n      }\n    });\n    if (typeof prevSnapIndex !== 'undefined') {\n      prevSnap = snapGrid[prevSnapIndex > 0 ? prevSnapIndex - 1 : prevSnapIndex];\n    }\n  }\n  let prevIndex = 0;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n    if (params.slidesPerView === 'auto' && params.slidesPerGroup === 1 && params.slidesPerGroupAuto) {\n      prevIndex = prevIndex - swiper.slidesPerViewDynamic('previous', true) + 1;\n      prevIndex = Math.max(prevIndex, 0);\n    }\n  }\n  if (params.rewind && swiper.isBeginning) {\n    const lastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    return swiper.slideTo(lastIndex, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideReset(speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}","/* eslint no-unused-vars: \"off\" */\nexport default function slideToClosest(speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const skip = Math.min(swiper.params.slidesPerGroupSkip, index);\n  const snapIndex = skip + Math.floor((index - skip) / swiper.params.slidesPerGroup);\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if (translate - currentSnap > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if (translate - prevSnap <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.slidesGrid.length - 1);\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}","import { elementChildren, nextTick } from '../../shared/utils.js';\nexport default function slideToClickedSlide() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  const slideSelector = swiper.isElement ? `swiper-slide` : `.${params.slideClass}`;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt(swiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (slideToIndex < swiper.loopedSlides - slidesPerView / 2 || slideToIndex > swiper.slides.length - swiper.loopedSlides + slidesPerView / 2) {\n        swiper.loopFix();\n        slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n        nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = swiper.getSlideIndex(elementChildren(slidesEl, `${slideSelector}[data-swiper-slide-index=\"${realIndex}\"]`)[0]);\n      nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}","import loopCreate from './loopCreate.js';\nimport loopFix from './loopFix.js';\nimport loopDestroy from './loopDestroy.js';\nexport default {\n  loopCreate,\n  loopFix,\n  loopDestroy\n};","import { elementChildren } from '../../shared/utils.js';\nexport default function loopCreate(slideRealIndex) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  const slides = elementChildren(slidesEl, `.${params.slideClass}, swiper-slide`);\n  slides.forEach((el, index) => {\n    el.setAttribute('data-swiper-slide-index', index);\n  });\n  swiper.loopFix({\n    slideRealIndex,\n    direction: params.centeredSlides ? undefined : 'next'\n  });\n}","export default function loopFix({\n  slideRealIndex,\n  slideTo = true,\n  direction,\n  setTranslate,\n  activeSlideIndex,\n  byController,\n  byMousewheel\n} = {}) {\n  const swiper = this;\n  if (!swiper.params.loop) return;\n  swiper.emit('beforeLoopFix');\n  const {\n    slides,\n    allowSlidePrev,\n    allowSlideNext,\n    slidesEl,\n    params\n  } = swiper;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n  if (swiper.virtual && params.virtual.enabled) {\n    if (slideTo) {\n      if (!params.centeredSlides && swiper.snapIndex === 0) {\n        swiper.slideTo(swiper.virtual.slides.length, 0, false, true);\n      } else if (params.centeredSlides && swiper.snapIndex < params.slidesPerView) {\n        swiper.slideTo(swiper.virtual.slides.length + swiper.snapIndex, 0, false, true);\n      } else if (swiper.snapIndex === swiper.snapGrid.length - 1) {\n        swiper.slideTo(swiper.virtual.slidesBefore, 0, false, true);\n      }\n    }\n    swiper.allowSlidePrev = allowSlidePrev;\n    swiper.allowSlideNext = allowSlideNext;\n    swiper.emit('loopFix');\n    return;\n  }\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10));\n  let loopedSlides = params.loopedSlides || slidesPerView;\n  if (loopedSlides % params.slidesPerGroup !== 0) {\n    loopedSlides += params.slidesPerGroup - loopedSlides % params.slidesPerGroup;\n  }\n  swiper.loopedSlides = loopedSlides;\n  const prependSlidesIndexes = [];\n  const appendSlidesIndexes = [];\n  let activeIndex = swiper.activeIndex;\n  if (typeof activeSlideIndex === 'undefined') {\n    activeSlideIndex = swiper.getSlideIndex(swiper.slides.filter(el => el.classList.contains(params.slideActiveClass))[0]);\n  } else {\n    activeIndex = activeSlideIndex;\n  }\n  const isNext = direction === 'next' || !direction;\n  const isPrev = direction === 'prev' || !direction;\n  let slidesPrepended = 0;\n  let slidesAppended = 0;\n  // prepend last slides before start\n  if (activeSlideIndex < loopedSlides) {\n    slidesPrepended = Math.max(loopedSlides - activeSlideIndex, params.slidesPerGroup);\n    for (let i = 0; i < loopedSlides - activeSlideIndex; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      prependSlidesIndexes.push(slides.length - index - 1);\n    }\n  } else if (activeSlideIndex /* + slidesPerView */ > swiper.slides.length - loopedSlides * 2) {\n    slidesAppended = Math.max(activeSlideIndex - (swiper.slides.length - loopedSlides * 2), params.slidesPerGroup);\n    for (let i = 0; i < slidesAppended; i += 1) {\n      const index = i - Math.floor(i / slides.length) * slides.length;\n      appendSlidesIndexes.push(index);\n    }\n  }\n  if (isPrev) {\n    prependSlidesIndexes.forEach(index => {\n      slidesEl.prepend(swiper.slides[index]);\n    });\n  }\n  if (isNext) {\n    appendSlidesIndexes.forEach(index => {\n      slidesEl.append(swiper.slides[index]);\n    });\n  }\n  swiper.recalcSlides();\n  if (params.watchSlidesProgress) {\n    swiper.updateSlidesOffset();\n  }\n  if (slideTo) {\n    if (prependSlidesIndexes.length > 0 && isPrev) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex + slidesPrepended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex + slidesPrepended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        if (setTranslate) {\n          swiper.slideToLoop(slideRealIndex, 0, false, true);\n        }\n      }\n    } else if (appendSlidesIndexes.length > 0 && isNext) {\n      if (typeof slideRealIndex === 'undefined') {\n        const currentSlideTranslate = swiper.slidesGrid[activeIndex];\n        const newSlideTranslate = swiper.slidesGrid[activeIndex - slidesAppended];\n        const diff = newSlideTranslate - currentSlideTranslate;\n        if (byMousewheel) {\n          swiper.setTranslate(swiper.translate - diff);\n        } else {\n          swiper.slideTo(activeIndex - slidesAppended, 0, false, true);\n          if (setTranslate) {\n            swiper.touches[swiper.isHorizontal() ? 'startX' : 'startY'] += diff;\n          }\n        }\n      } else {\n        swiper.slideToLoop(slideRealIndex, 0, false, true);\n      }\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.controller && swiper.controller.control && !byController) {\n    const loopParams = {\n      slideRealIndex,\n      slideTo: false,\n      direction,\n      setTranslate,\n      activeSlideIndex,\n      byController: true\n    };\n    if (Array.isArray(swiper.controller.control)) {\n      swiper.controller.control.forEach(c => {\n        if (!c.destroyed && c.params.loop) c.loopFix(loopParams);\n      });\n    } else if (swiper.controller.control instanceof swiper.constructor && swiper.controller.control.params.loop) {\n      swiper.controller.control.loopFix(loopParams);\n    }\n  }\n  swiper.emit('loopFix');\n}","export default function loopDestroy() {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (!params.loop || swiper.virtual && swiper.params.virtual.enabled) return;\n  swiper.recalcSlides();\n  const newSlidesOrder = [];\n  swiper.slides.forEach(slideEl => {\n    const index = typeof slideEl.swiperSlideIndex === 'undefined' ? slideEl.getAttribute('data-swiper-slide-index') * 1 : slideEl.swiperSlideIndex;\n    newSlidesOrder[index] = slideEl;\n  });\n  swiper.slides.forEach(slideEl => {\n    slideEl.removeAttribute('data-swiper-slide-index');\n  });\n  newSlidesOrder.forEach(slideEl => {\n    slidesEl.append(slideEl);\n  });\n  swiper.recalcSlides();\n  swiper.slideTo(swiper.realIndex, 0);\n}","import setGrabCursor from './setGrabCursor.js';\nimport unsetGrabCursor from './unsetGrabCursor.js';\nexport default {\n  setGrabCursor,\n  unsetGrabCursor\n};","export default function setGrabCursor(moving) {\n  const swiper = this;\n  if (!swiper.params.simulateTouch || swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) return;\n  const el = swiper.params.touchEventsTarget === 'container' ? swiper.el : swiper.wrapperEl;\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","export default function unsetGrabCursor() {\n  const swiper = this;\n  if (swiper.params.watchOverflow && swiper.isLocked || swiper.params.cssMode) {\n    return;\n  }\n  if (swiper.isElement) {\n    swiper.__preventObserver__ = true;\n  }\n  swiper[swiper.params.touchEventsTarget === 'container' ? 'el' : 'wrapperEl'].style.cursor = '';\n  if (swiper.isElement) {\n    requestAnimationFrame(() => {\n      swiper.__preventObserver__ = false;\n    });\n  }\n}","import { getDocument } from 'ssr-window';\nimport onTouchStart from './onTouchStart.js';\nimport onTouchMove from './onTouchMove.js';\nimport onTouchEnd from './onTouchEnd.js';\nimport onResize from './onResize.js';\nimport onClick from './onClick.js';\nimport onScroll from './onScroll.js';\nimport onLoad from './onLoad.js';\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\nconst events = (swiper, method) => {\n  const document = getDocument();\n  const {\n    params,\n    el,\n    wrapperEl,\n    device\n  } = swiper;\n  const capture = !!params.nested;\n  const domMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n  const swiperMethod = method;\n\n  // Touch Events\n  el[domMethod]('pointerdown', swiper.onTouchStart, {\n    passive: false\n  });\n  document[domMethod]('pointermove', swiper.onTouchMove, {\n    passive: false,\n    capture\n  });\n  document[domMethod]('pointerup', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointercancel', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerout', swiper.onTouchEnd, {\n    passive: true\n  });\n  document[domMethod]('pointerleave', swiper.onTouchEnd, {\n    passive: true\n  });\n\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el[domMethod]('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl[domMethod]('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper[swiperMethod](device.ios || device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate', onResize, true);\n  } else {\n    swiper[swiperMethod]('observerUpdate', onResize, true);\n  }\n\n  // Images loader\n  el[domMethod]('load', swiper.onLoad, {\n    capture: true\n  });\n};\nfunction attachEvents() {\n  const swiper = this;\n  const document = getDocument();\n  const {\n    params\n  } = swiper;\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n  swiper.onClick = onClick.bind(swiper);\n  swiper.onLoad = onLoad.bind(swiper);\n  if (!dummyEventAttached) {\n    document.addEventListener('touchstart', dummyEventListener);\n    dummyEventAttached = true;\n  }\n  events(swiper, 'on');\n}\nfunction detachEvents() {\n  const swiper = this;\n  events(swiper, 'off');\n}\nexport default {\n  attachEvents,\n  detachEvents\n};","import { getWindow, getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\n\n// Modified from https://stackoverflow.com/questions/54520554/custom-element-getrootnode-closest-function-crossing-multiple-parent-shadowd\nfunction closestElement(selector, base = this) {\n  function __closestFrom(el) {\n    if (!el || el === getDocument() || el === getWindow()) return null;\n    if (el.assignedSlot) el = el.assignedSlot;\n    const found = el.closest(selector);\n    if (!found && !el.getRootNode) {\n      return null;\n    }\n    return found || __closestFrom(el.getRootNode().host);\n  }\n  return __closestFrom(base);\n}\nexport default function onTouchStart(event) {\n  const swiper = this;\n  const document = getDocument();\n  const window = getWindow();\n  const data = swiper.touchEventsData;\n  data.evCache.push(event);\n  const {\n    params,\n    touches,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  if (!swiper.animating && params.cssMode && params.loop) {\n    swiper.loopFix();\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  let targetEl = e.target;\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!swiper.wrapperEl.contains(targetEl)) return;\n  }\n  if ('which' in e && e.which === 3) return;\n  if ('button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n\n  // change target el for shadow root component\n  const swipingClassHasValue = !!params.noSwipingClass && params.noSwipingClass !== '';\n  // eslint-disable-next-line\n  const eventPath = event.composedPath ? event.composedPath() : event.path;\n  if (swipingClassHasValue && e.target && e.target.shadowRoot && eventPath) {\n    targetEl = eventPath[0];\n  }\n  const noSwipingSelector = params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`;\n  const isTargetShadow = !!(e.target && e.target.shadowRoot);\n\n  // use closestElement for shadow root element to get the actual closest for nested shadow root element\n  if (params.noSwiping && (isTargetShadow ? closestElement(noSwipingSelector, targetEl) : targetEl.closest(noSwipingSelector))) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!targetEl.closest(params.swipeHandler)) return;\n  }\n  touches.currentX = e.pageX;\n  touches.currentY = e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (edgeSwipeDetection && (startX <= edgeSwipeThreshold || startX >= window.innerWidth - edgeSwipeThreshold)) {\n    if (edgeSwipeDetection === 'prevent') {\n      event.preventDefault();\n    } else {\n      return;\n    }\n  }\n  Object.assign(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined\n  });\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  let preventDefault = true;\n  if (targetEl.matches(data.focusableElements)) {\n    preventDefault = false;\n    if (targetEl.nodeName === 'SELECT') {\n      data.isTouched = false;\n    }\n  }\n  if (document.activeElement && document.activeElement.matches(data.focusableElements) && document.activeElement !== targetEl) {\n    document.activeElement.blur();\n  }\n  const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n  if ((params.touchStartForcePreventDefault || shouldPreventDefault) && !targetEl.isContentEditable) {\n    e.preventDefault();\n  }\n  if (swiper.params.freeMode && swiper.params.freeMode.enabled && swiper.freeMode && swiper.animating && !params.cssMode) {\n    swiper.freeMode.onTouchStart();\n  }\n  swiper.emit('touchStart', e);\n}","import { getDocument } from 'ssr-window';\nimport { now } from '../../shared/utils.js';\nexport default function onTouchMove(event) {\n  const document = getDocument();\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n  if (pointerIndex >= 0) data.evCache[pointerIndex] = e;\n  const targetTouch = data.evCache.length > 1 ? data.evCache[0] : e;\n  const pageX = targetTouch.pageX;\n  const pageY = targetTouch.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    if (!e.target.matches(data.focusableElements)) {\n      swiper.allowClick = false;\n    }\n    if (data.isTouched) {\n      Object.assign(touches, {\n        startX: pageX,\n        startY: pageY,\n        prevX: swiper.touches.currentX,\n        prevY: swiper.touches.currentY,\n        currentX: pageX,\n        currentY: pageY\n      });\n      data.touchStartTime = now();\n    }\n    return;\n  }\n  if (params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (pageY < touches.startY && swiper.translate <= swiper.maxTranslate() || pageY > touches.startY && swiper.translate >= swiper.minTranslate()) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (pageX < touches.startX && swiper.translate <= swiper.maxTranslate() || pageX > touches.startX && swiper.translate >= swiper.minTranslate()) {\n      return;\n    }\n  }\n  if (document.activeElement) {\n    if (e.target === document.activeElement && e.target.matches(data.focusableElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt(diffX ** 2 + diffY ** 2) < swiper.params.threshold) return;\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if (swiper.isHorizontal() && touches.currentY === touches.startY || swiper.isVertical() && touches.currentX === touches.startX) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if (diffX * diffX + diffY * diffY >= 25) {\n        touchAngle = Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180 / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : 90 - touchAngle > params.touchAngle;\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling || swiper.zoom && swiper.params.zoom && swiper.params.zoom.enabled && data.evCache.length > 1) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode && e.cancelable) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  let touchesDiff = swiper.isHorizontal() ? touches.currentX - touches.previousX : touches.currentY - touches.previousY;\n  if (params.oneWayMovement) {\n    diff = Math.abs(diff) * (rtl ? 1 : -1);\n    touchesDiff = Math.abs(touchesDiff) * (rtl ? 1 : -1);\n  }\n  touches.diff = diff;\n  diff *= params.touchRatio;\n  if (rtl) {\n    diff = -diff;\n    touchesDiff = -touchesDiff;\n  }\n  const prevTouchesDirection = swiper.touchesDirection;\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  swiper.touchesDirection = touchesDiff > 0 ? 'prev' : 'next';\n  const isLoop = swiper.params.loop && !params.cssMode;\n  if (!data.isMoved) {\n    if (isLoop) {\n      swiper.loopFix({\n        direction: swiper.swipeDirection\n      });\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      const evt = new window.CustomEvent('transitionend', {\n        bubbles: true,\n        cancelable: true\n      });\n      swiper.wrapperEl.dispatchEvent(evt);\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  let loopFixed;\n  if (data.isMoved && prevTouchesDirection !== swiper.touchesDirection && isLoop && Math.abs(diff) >= 1) {\n    // need another loop fix\n    swiper.loopFix({\n      direction: swiper.swipeDirection,\n      setTranslate: true\n    });\n    loopFixed = true;\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n  data.currentTranslate = diff + data.startTranslate;\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if (diff > 0) {\n    if (isLoop && !loopFixed && data.currentTranslate > (params.centeredSlides ? swiper.minTranslate() - swiper.size / 2 : swiper.minTranslate())) {\n      swiper.loopFix({\n        direction: 'prev',\n        setTranslate: true,\n        activeSlideIndex: 0\n      });\n    }\n    if (data.currentTranslate > swiper.minTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.minTranslate() - 1 + (-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio;\n      }\n    }\n  } else if (diff < 0) {\n    if (isLoop && !loopFixed && data.currentTranslate < (params.centeredSlides ? swiper.maxTranslate() + swiper.size / 2 : swiper.maxTranslate())) {\n      swiper.loopFix({\n        direction: 'next',\n        setTranslate: true,\n        activeSlideIndex: swiper.slides.length - (params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : Math.ceil(parseFloat(params.slidesPerView, 10)))\n      });\n    }\n    if (data.currentTranslate < swiper.maxTranslate()) {\n      disableParentSwiper = false;\n      if (params.resistance) {\n        data.currentTranslate = swiper.maxTranslate() + 1 - (swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio;\n      }\n    }\n  }\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && !swiper.allowSlideNext) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode && params.freeMode.enabled && swiper.freeMode || params.watchSlidesProgress) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled && swiper.freeMode) {\n    swiper.freeMode.onTouchMove();\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}","import { now, nextTick } from '../../shared/utils.js';\nexport default function onTouchEnd(event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const pointerIndex = data.evCache.findIndex(cachedEv => cachedEv.pointerId === event.pointerId);\n  if (pointerIndex >= 0) {\n    data.evCache.splice(pointerIndex, 1);\n  }\n  if (['pointercancel', 'pointerout', 'pointerleave'].includes(event.type)) {\n    const proceed = event.type === 'pointercancel' && (swiper.browser.isSafari || swiper.browser.isWebView);\n    if (!proceed) {\n      return;\n    }\n  }\n  const {\n    params,\n    touches,\n    rtlTranslate: rtl,\n    slidesGrid,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  if (!params.simulateTouch && event.pointerType === 'mouse') return;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    const pathTree = e.path || e.composedPath && e.composedPath();\n    swiper.updateClickedSlide(pathTree && pathTree[0] || e.target);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && touchEndTime - data.lastClickTime < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n  data.lastClickTime = now();\n  nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n  if (params.cssMode) {\n    return;\n  }\n  if (swiper.params.freeMode && params.freeMode.enabled) {\n    swiper.freeMode.onTouchEnd({\n      currentPos\n    });\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += i < params.slidesPerGroupSkip ? 1 : params.slidesPerGroup) {\n    const increment = i < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n    if (typeof slidesGrid[i + increment] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + increment]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + increment] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n  let rewindFirstIndex = null;\n  let rewindLastIndex = null;\n  if (params.rewind) {\n    if (swiper.isBeginning) {\n      rewindLastIndex = swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual ? swiper.virtual.slides.length - 1 : swiper.slides.length - 1;\n    } else if (swiper.isEnd) {\n      rewindFirstIndex = 0;\n    }\n  }\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n  const increment = stopIndex < params.slidesPerGroupSkip - 1 ? 1 : params.slidesPerGroup;\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(params.rewind && swiper.isEnd ? rewindFirstIndex : stopIndex + increment);else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > 1 - params.longSwipesRatio) {\n        swiper.slideTo(stopIndex + increment);\n      } else if (rewindLastIndex !== null && ratio < 0 && Math.abs(ratio) > params.longSwipesRatio) {\n        swiper.slideTo(rewindLastIndex);\n      } else {\n        swiper.slideTo(stopIndex);\n      }\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(rewindFirstIndex !== null ? rewindFirstIndex : stopIndex + increment);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(rewindLastIndex !== null ? rewindLastIndex : stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + increment);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}","let timeout;\nexport default function onResize() {\n  const swiper = this;\n  const {\n    params,\n    el\n  } = swiper;\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const {\n    allowSlideNext,\n    allowSlidePrev,\n    snapGrid\n  } = swiper;\n  const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n  swiper.updateSize();\n  swiper.updateSlides();\n  swiper.updateSlidesClasses();\n  const isVirtualLoop = isVirtual && params.loop;\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.isBeginning && !swiper.params.centeredSlides && !isVirtualLoop) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    if (swiper.params.loop && !isVirtual) {\n      swiper.slideToLoop(swiper.realIndex, 0, false, true);\n    } else {\n      swiper.slideTo(swiper.activeIndex, 0, false, true);\n    }\n  }\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    clearTimeout(timeout);\n    timeout = setTimeout(() => {\n      if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n        swiper.autoplay.resume();\n      }\n    }, 500);\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}","export default function onClick(e) {\n  const swiper = this;\n  if (!swiper.enabled) return;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}","export default function onScroll() {\n  const swiper = this;\n  const {\n    wrapperEl,\n    rtlTranslate,\n    enabled\n  } = swiper;\n  if (!enabled) return;\n  swiper.previousTranslate = swiper.translate;\n  if (swiper.isHorizontal()) {\n    swiper.translate = -wrapperEl.scrollLeft;\n  } else {\n    swiper.translate = -wrapperEl.scrollTop;\n  }\n  // eslint-disable-next-line\n  if (swiper.translate === 0) swiper.translate = 0;\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / translatesDiff;\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(rtlTranslate ? -swiper.translate : swiper.translate);\n  }\n  swiper.emit('setTranslate', swiper.translate, false);\n}","import { processLazyPreloader } from '../../shared/process-lazy-preloader.js';\nexport default function onLoad(e) {\n  const swiper = this;\n  processLazyPreloader(swiper, e.target);\n  swiper.update();\n}","import setBreakpoint from './setBreakpoint.js';\nimport getBreakpoint from './getBreakpoint.js';\nexport default {\n  setBreakpoint,\n  getBreakpoint\n};","import { extend } from '../../shared/utils.js';\nconst isGridEnabled = (swiper, params) => {\n  return swiper.grid && params.grid && params.grid.rows > 1;\n};\nexport default function setBreakpoint() {\n  const swiper = this;\n  const {\n    realIndex,\n    initialized,\n    params,\n    el\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || breakpoints && Object.keys(breakpoints).length === 0) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints, swiper.params.breakpointsBase, swiper.el);\n  if (!breakpoint || swiper.currentBreakpoint === breakpoint) return;\n  const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n  const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n  const wasMultiRow = isGridEnabled(swiper, params);\n  const isMultiRow = isGridEnabled(swiper, breakpointParams);\n  const wasEnabled = params.enabled;\n  if (wasMultiRow && !isMultiRow) {\n    el.classList.remove(`${params.containerModifierClass}grid`, `${params.containerModifierClass}grid-column`);\n    swiper.emitContainerClasses();\n  } else if (!wasMultiRow && isMultiRow) {\n    el.classList.add(`${params.containerModifierClass}grid`);\n    if (breakpointParams.grid.fill && breakpointParams.grid.fill === 'column' || !breakpointParams.grid.fill && params.grid.fill === 'column') {\n      el.classList.add(`${params.containerModifierClass}grid-column`);\n    }\n    swiper.emitContainerClasses();\n  }\n\n  // Toggle navigation, pagination, scrollbar\n  ['navigation', 'pagination', 'scrollbar'].forEach(prop => {\n    const wasModuleEnabled = params[prop] && params[prop].enabled;\n    const isModuleEnabled = breakpointParams[prop] && breakpointParams[prop].enabled;\n    if (wasModuleEnabled && !isModuleEnabled) {\n      swiper[prop].disable();\n    }\n    if (!wasModuleEnabled && isModuleEnabled) {\n      swiper[prop].enable();\n    }\n  });\n  const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n  const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n  if (directionChanged && initialized) {\n    swiper.changeDirection();\n  }\n  extend(swiper.params, breakpointParams);\n  const isEnabled = swiper.params.enabled;\n  Object.assign(swiper, {\n    allowTouchMove: swiper.params.allowTouchMove,\n    allowSlideNext: swiper.params.allowSlideNext,\n    allowSlidePrev: swiper.params.allowSlidePrev\n  });\n  if (wasEnabled && !isEnabled) {\n    swiper.disable();\n  } else if (!wasEnabled && isEnabled) {\n    swiper.enable();\n  }\n  swiper.currentBreakpoint = breakpoint;\n  swiper.emit('_beforeBreakpoint', breakpointParams);\n  if (needsReLoop && initialized) {\n    swiper.loopDestroy();\n    swiper.loopCreate(realIndex);\n    swiper.updateSlides();\n  }\n  swiper.emit('breakpoint', breakpointParams);\n}","import { getWindow } from 'ssr-window';\nexport default function getBreakpoint(breakpoints, base = 'window', containerEl) {\n  if (!breakpoints || base === 'container' && !containerEl) return undefined;\n  let breakpoint = false;\n  const window = getWindow();\n  const currentHeight = base === 'window' ? window.innerHeight : containerEl.clientHeight;\n  const points = Object.keys(breakpoints).map(point => {\n    if (typeof point === 'string' && point.indexOf('@') === 0) {\n      const minRatio = parseFloat(point.substr(1));\n      const value = currentHeight * minRatio;\n      return {\n        value,\n        point\n      };\n    }\n    return {\n      value: point,\n      point\n    };\n  });\n  points.sort((a, b) => parseInt(a.value, 10) - parseInt(b.value, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const {\n      point,\n      value\n    } = points[i];\n    if (base === 'window') {\n      if (window.matchMedia(`(min-width: ${value}px)`).matches) {\n        breakpoint = point;\n      }\n    } else if (value <= containerEl.clientWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}","import addClasses from './addClasses.js';\nimport removeClasses from './removeClasses.js';\nexport default {\n  addClasses,\n  removeClasses\n};","function prepareClasses(entries, prefix) {\n  const resultClasses = [];\n  entries.forEach(item => {\n    if (typeof item === 'object') {\n      Object.keys(item).forEach(classNames => {\n        if (item[classNames]) {\n          resultClasses.push(prefix + classNames);\n        }\n      });\n    } else if (typeof item === 'string') {\n      resultClasses.push(prefix + item);\n    }\n  });\n  return resultClasses;\n}\nexport default function addClasses() {\n  const swiper = this;\n  const {\n    classNames,\n    params,\n    rtl,\n    el,\n    device\n  } = swiper;\n  // prettier-ignore\n  const suffixes = prepareClasses(['initialized', params.direction, {\n    'free-mode': swiper.params.freeMode && params.freeMode.enabled\n  }, {\n    'autoheight': params.autoHeight\n  }, {\n    'rtl': rtl\n  }, {\n    'grid': params.grid && params.grid.rows > 1\n  }, {\n    'grid-column': params.grid && params.grid.rows > 1 && params.grid.fill === 'column'\n  }, {\n    'android': device.android\n  }, {\n    'ios': device.ios\n  }, {\n    'css-mode': params.cssMode\n  }, {\n    'centered': params.cssMode && params.centeredSlides\n  }, {\n    'watch-progress': params.watchSlidesProgress\n  }], params.containerModifierClass);\n  classNames.push(...suffixes);\n  el.classList.add(...classNames);\n  swiper.emitContainerClasses();\n}","export default function removeClasses() {\n  const swiper = this;\n  const {\n    el,\n    classNames\n  } = swiper;\n  el.classList.remove(...classNames);\n  swiper.emitContainerClasses();\n}","function checkOverflow() {\n  const swiper = this;\n  const {\n    isLocked: wasLocked,\n    params\n  } = swiper;\n  const {\n    slidesOffsetBefore\n  } = params;\n  if (slidesOffsetBefore) {\n    const lastSlideIndex = swiper.slides.length - 1;\n    const lastSlideRightEdge = swiper.slidesGrid[lastSlideIndex] + swiper.slidesSizesGrid[lastSlideIndex] + slidesOffsetBefore * 2;\n    swiper.isLocked = swiper.size > lastSlideRightEdge;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n  if (params.allowSlideNext === true) {\n    swiper.allowSlideNext = !swiper.isLocked;\n  }\n  if (params.allowSlidePrev === true) {\n    swiper.allowSlidePrev = !swiper.isLocked;\n  }\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n  }\n  if (wasLocked !== swiper.isLocked) {\n    swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n  }\n}\nexport default {\n  checkOverflow\n};","export default {\n  init: true,\n  direction: 'horizontal',\n  oneWayMovement: false,\n  touchEventsTarget: 'wrapper',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  resizeObserver: true,\n  nested: false,\n  createElements: false,\n  enabled: true,\n  focusableElements: 'input, select, option, textarea, button, video, label',\n  // Overrides\n  width: null,\n  height: null,\n  //\n  preventInteractionOnTransition: false,\n  // ssr\n  userAgent: null,\n  url: null,\n  // To support iOS's swipe-to-go-back gesture (when being used in-app).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n  // Autoheight\n  autoHeight: false,\n  // Set wrapper width\n  setWrapperSize: false,\n  // Virtual Translate\n  virtualTranslate: false,\n  // Effects\n  effect: 'slide',\n  // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n  breakpointsBase: 'window',\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerGroup: 1,\n  slidesPerGroupSkip: 0,\n  slidesPerGroupAuto: false,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0,\n  // in px\n  slidesOffsetAfter: 0,\n  // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: true,\n  // Round length\n  roundLengths: false,\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 5,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n  // Progress\n  watchSlidesProgress: false,\n  // Cursor\n  grabCursor: false,\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n  // loop\n  loop: false,\n  loopedSlides: null,\n  loopPreventsSliding: true,\n  // rewind\n  rewind: false,\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null,\n  // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n  // Passive Listeners\n  passiveListeners: true,\n  maxBackfaceHiddenSlides: 10,\n  // NS\n  containerModifierClass: 'swiper-',\n  // NEW\n  slideClass: 'swiper-slide',\n  slideActiveClass: 'swiper-slide-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideNextClass: 'swiper-slide-next',\n  slidePrevClass: 'swiper-slide-prev',\n  wrapperClass: 'swiper-wrapper',\n  lazyPreloaderClass: 'swiper-lazy-preloader',\n  lazyPreloadPrevNext: 0,\n  // Callbacks\n  runCallbacksOnInit: true,\n  // Internals\n  _emitClasses: false\n};","import { extend } from '../shared/utils.js';\nexport default function moduleExtendParams(params, allModulesParams) {\n  return function extendParams(obj = {}) {\n    const moduleParamName = Object.keys(obj)[0];\n    const moduleParams = obj[moduleParamName];\n    if (typeof moduleParams !== 'object' || moduleParams === null) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (['navigation', 'pagination', 'scrollbar'].indexOf(moduleParamName) >= 0 && params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        auto: true\n      };\n    }\n    if (!(moduleParamName in params && 'enabled' in moduleParams)) {\n      extend(allModulesParams, obj);\n      return;\n    }\n    if (params[moduleParamName] === true) {\n      params[moduleParamName] = {\n        enabled: true\n      };\n    }\n    if (typeof params[moduleParamName] === 'object' && !('enabled' in params[moduleParamName])) {\n      params[moduleParamName].enabled = true;\n    }\n    if (!params[moduleParamName]) params[moduleParamName] = {\n      enabled: false\n    };\n    extend(allModulesParams, obj);\n  };\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementChildren, setCSSProperty } from '../../shared/utils.js';\nexport default function Virtual({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      renderExternalUpdate: true,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0\n    }\n  });\n  let cssModeTimeout;\n  const document = getDocument();\n  swiper.virtual = {\n    cache: {},\n    from: undefined,\n    to: undefined,\n    slides: [],\n    offset: 0,\n    slidesGrid: []\n  };\n  const tempDOM = document.createElement('div');\n  function renderSlide(slide, index) {\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    // eslint-disable-next-line\n    let slideEl;\n    if (params.renderSlide) {\n      slideEl = params.renderSlide.call(swiper, slide, index);\n      if (typeof slideEl === 'string') {\n        tempDOM.innerHTML = slideEl;\n        slideEl = tempDOM.children[0];\n      }\n    } else if (swiper.isElement) {\n      slideEl = createElement('swiper-slide');\n    } else {\n      slideEl = createElement('div', swiper.params.slideClass);\n    }\n    slideEl.setAttribute('data-swiper-slide-index', index);\n    if (!params.renderSlide) {\n      slideEl.innerHTML = slide;\n    }\n    if (params.cache) swiper.virtual.cache[index] = slideEl;\n    return slideEl;\n  }\n  function update(force) {\n    const {\n      slidesPerView,\n      slidesPerGroup,\n      centeredSlides,\n      loop: isLoop\n    } = swiper.params;\n    const {\n      addSlidesBefore,\n      addSlidesAfter\n    } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      offset: previousOffset\n    } = swiper.virtual;\n    if (!swiper.params.cssMode) {\n      swiper.updateActiveIndex();\n    }\n    const activeIndex = swiper.activeIndex || 0;\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesAfter;\n      slidesBefore = (isLoop ? slidesPerView : slidesPerGroup) + addSlidesBefore;\n    }\n    let from = activeIndex - slidesBefore;\n    let to = activeIndex + slidesAfter;\n    if (!isLoop) {\n      from = Math.max(from, 0);\n      to = Math.min(to, slides.length - 1);\n    }\n    let offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n    if (isLoop && activeIndex >= slidesBefore) {\n      from -= slidesBefore;\n      if (!centeredSlides) offset += swiper.slidesGrid[0];\n    } else if (isLoop && activeIndex < slidesBefore) {\n      from = -slidesBefore;\n      if (centeredSlides) offset += swiper.slidesGrid[0];\n    }\n    Object.assign(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n      slidesBefore,\n      slidesAfter\n    });\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      emit('virtualUpdate');\n    }\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.forEach(slideEl => {\n          slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n        });\n      }\n      swiper.updateProgress();\n      emit('virtualUpdate');\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()\n      });\n      if (swiper.params.virtual.renderExternalUpdate) {\n        onRendered();\n      } else {\n        emit('virtualUpdate');\n      }\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    const getSlideIndex = index => {\n      let slideIndex = index;\n      if (index < 0) {\n        slideIndex = slides.length + index;\n      } else if (slideIndex >= slides.length) {\n        // eslint-disable-next-line\n        slideIndex = slideIndex - slides.length;\n      }\n      return slideIndex;\n    };\n    if (force) {\n      swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}, swiper-slide`).forEach(slideEl => {\n        slideEl.remove();\n      });\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          const slideIndex = getSlideIndex(i);\n          swiper.slidesEl.querySelectorAll(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${slideIndex}\"], swiper-slide[data-swiper-slide-index=\"${slideIndex}\"]`).forEach(slideEl => {\n            slideEl.remove();\n          });\n        }\n      }\n    }\n    const loopFrom = isLoop ? -slides.length : 0;\n    const loopTo = isLoop ? slides.length * 2 : slides.length;\n    for (let i = loopFrom; i < loopTo; i += 1) {\n      if (i >= from && i <= to) {\n        const slideIndex = getSlideIndex(i);\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(slideIndex);\n        } else {\n          if (i > previousTo) appendIndexes.push(slideIndex);\n          if (i < previousFrom) prependIndexes.push(slideIndex);\n        }\n      }\n    }\n    appendIndexes.forEach(index => {\n      swiper.slidesEl.append(renderSlide(slides[index], index));\n    });\n    if (isLoop) {\n      for (let i = prependIndexes.length - 1; i >= 0; i -= 1) {\n        const index = prependIndexes[i];\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      }\n    } else {\n      prependIndexes.sort((a, b) => b - a);\n      prependIndexes.forEach(index => {\n        swiper.slidesEl.prepend(renderSlide(slides[index], index));\n      });\n    }\n    elementChildren(swiper.slidesEl, '.swiper-slide, swiper-slide').forEach(slideEl => {\n      slideEl.style[offsetProp] = `${offset - Math.abs(swiper.cssOverflowAdjustment())}px`;\n    });\n    onRendered();\n  }\n  function appendSlide(slides) {\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    update(true);\n  }\n  function prependSlide(slides) {\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach(cachedIndex => {\n        const cachedEl = cache[cachedIndex];\n        const cachedElIndex = cachedEl.getAttribute('data-swiper-slide-index');\n        if (cachedElIndex) {\n          cachedEl.setAttribute('data-swiper-slide-index', parseInt(cachedElIndex, 10) + numberOfNewSlides);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  }\n  function removeSlide(slidesIndexes) {\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    update(true);\n    swiper.slideTo(activeIndex, 0);\n  }\n  function removeAllSlides() {\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    update(true);\n    swiper.slideTo(0, 0);\n  }\n  on('beforeInit', () => {\n    if (!swiper.params.virtual.enabled) return;\n    let domSlidesAssigned;\n    if (typeof swiper.passedParams.virtual.slides === 'undefined') {\n      const slides = [...swiper.slidesEl.children].filter(el => el.matches(`.${swiper.params.slideClass}, swiper-slide`));\n      if (slides && slides.length) {\n        swiper.virtual.slides = [...slides];\n        domSlidesAssigned = true;\n        slides.forEach((slideEl, slideIndex) => {\n          slideEl.setAttribute('data-swiper-slide-index', slideIndex);\n          swiper.virtual.cache[slideIndex] = slideEl;\n          slideEl.remove();\n        });\n      }\n    }\n    if (!domSlidesAssigned) {\n      swiper.virtual.slides = swiper.params.virtual.slides;\n    }\n    swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n    if (!swiper.params.initialSlide) {\n      update();\n    }\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode && !swiper._immediateVirtual) {\n      clearTimeout(cssModeTimeout);\n      cssModeTimeout = setTimeout(() => {\n        update();\n      }, 100);\n    } else {\n      update();\n    }\n  });\n  on('init update resize', () => {\n    if (!swiper.params.virtual.enabled) return;\n    if (swiper.params.cssMode) {\n      setCSSProperty(swiper.wrapperEl, '--swiper-virtual-size', `${swiper.virtualSize}px`);\n    }\n  });\n  Object.assign(swiper.virtual, {\n    appendSlide,\n    prependSlide,\n    removeSlide,\n    removeAllSlides,\n    update\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow, getDocument } from 'ssr-window';\nimport { elementOffset, elementParents } from '../../shared/utils.js';\nexport default function Keyboard({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  const window = getWindow();\n  swiper.keyboard = {\n    enabled: false\n  };\n  extendParams({\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n      pageUpDown: true\n    }\n  });\n  function handle(event) {\n    if (!swiper.enabled) return;\n    const {\n      rtlTranslate: rtl\n    } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    const pageUpDown = swiper.params.keyboard.pageUpDown;\n    const isPageUp = pageUpDown && kc === 33;\n    const isPageDown = pageUpDown && kc === 34;\n    const isArrowLeft = kc === 37;\n    const isArrowRight = kc === 39;\n    const isArrowUp = kc === 38;\n    const isArrowDown = kc === 40;\n    // Directions locks\n    if (!swiper.allowSlideNext && (swiper.isHorizontal() && isArrowRight || swiper.isVertical() && isArrowDown || isPageDown)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && (swiper.isHorizontal() && isArrowLeft || swiper.isVertical() && isArrowUp || isPageUp)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document.activeElement && document.activeElement.nodeName && (document.activeElement.nodeName.toLowerCase() === 'input' || document.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (isPageUp || isPageDown || isArrowLeft || isArrowRight || isArrowUp || isArrowDown)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (elementParents(swiper.el, `.${swiper.params.slideClass}, swiper-slide`).length > 0 && elementParents(swiper.el, `.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const el = swiper.el;\n      const swiperWidth = el.clientWidth;\n      const swiperHeight = el.clientHeight;\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = elementOffset(el);\n      if (rtl) swiperOffset.left -= el.scrollLeft;\n      const swiperCoord = [[swiperOffset.left, swiperOffset.top], [swiperOffset.left + swiperWidth, swiperOffset.top], [swiperOffset.left, swiperOffset.top + swiperHeight], [swiperOffset.left + swiperWidth, swiperOffset.top + swiperHeight]];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (point[0] >= 0 && point[0] <= windowWidth && point[1] >= 0 && point[1] <= windowHeight) {\n          if (point[0] === 0 && point[1] === 0) continue; // eslint-disable-line\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (isPageUp || isPageDown || isArrowLeft || isArrowRight) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if ((isPageDown || isArrowRight) && !rtl || (isPageUp || isArrowLeft) && rtl) swiper.slideNext();\n      if ((isPageUp || isArrowLeft) && !rtl || (isPageDown || isArrowRight) && rtl) swiper.slidePrev();\n    } else {\n      if (isPageUp || isPageDown || isArrowUp || isArrowDown) {\n        if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n      }\n      if (isPageDown || isArrowDown) swiper.slideNext();\n      if (isPageUp || isArrowUp) swiper.slidePrev();\n    }\n    emit('keyPress', kc);\n    return undefined;\n  }\n  function enable() {\n    if (swiper.keyboard.enabled) return;\n    document.addEventListener('keydown', handle);\n    swiper.keyboard.enabled = true;\n  }\n  function disable() {\n    if (!swiper.keyboard.enabled) return;\n    document.removeEventListener('keydown', handle);\n    swiper.keyboard.enabled = false;\n  }\n  on('init', () => {\n    if (swiper.params.keyboard.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.keyboard.enabled) {\n      disable();\n    }\n  });\n  Object.assign(swiper.keyboard, {\n    enable,\n    disable\n  });\n}","/* eslint-disable consistent-return */\nimport { getWindow } from 'ssr-window';\nimport { now, nextTick } from '../../shared/utils.js';\nexport default function Mousewheel({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarget: 'container',\n      thresholdDelta: null,\n      thresholdTime: null\n    }\n  });\n  swiper.mousewheel = {\n    enabled: false\n  };\n  let timeout;\n  let lastScrollTime = now();\n  let lastEventBeforeSnap;\n  const recentWheelEvents = [];\n  function normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n    if (e.shiftKey && !pX) {\n      // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) {\n        // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else {\n        // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = pX < 1 ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = pY < 1 ? -1 : 1;\n    }\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY\n    };\n  }\n  function handleMouseEnter() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = true;\n  }\n  function handleMouseLeave() {\n    if (!swiper.enabled) return;\n    swiper.mouseEntered = false;\n  }\n  function animateSlider(newEvent) {\n    if (swiper.params.mousewheel.thresholdDelta && newEvent.delta < swiper.params.mousewheel.thresholdDelta) {\n      // Prevent if delta of wheel scroll delta is below configured threshold\n      return false;\n    }\n    if (swiper.params.mousewheel.thresholdTime && now() - lastScrollTime < swiper.params.mousewheel.thresholdTime) {\n      // Prevent if time between scrolls is below configured threshold\n      return false;\n    }\n\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && now() - lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    lastScrollTime = new window.Date().getTime();\n    // Return false as a default\n    return false;\n  }\n  function releaseScroll(newEvent) {\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  }\n  function handle(event) {\n    let e = event;\n    let disableParentSwiper = true;\n    if (!swiper.enabled) return;\n    const params = swiper.params.mousewheel;\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    const targetElContainsTarget = targetEl && targetEl.contains(e.target);\n    if (!swiper.mouseEntered && !targetElContainsTarget && !params.releaseOnEdges) return true;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n    const data = normalize(e);\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = -data.pixelX * rtlFactor;else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = -data.pixelY;else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n    if (delta === 0) return true;\n    if (params.invert) delta = -delta;\n\n    // Get the scroll positions\n    let positions = swiper.getTranslate() + delta * params.sensitivity;\n    if (positions >= swiper.minTranslate()) positions = swiper.minTranslate();\n    if (positions <= swiper.maxTranslate()) positions = swiper.maxTranslate();\n\n    // When loop is true:\n    //     the disableParentSwiper will be true.\n    // When loop is false:\n    //     if the scroll positions is not on edge,\n    //     then the disableParentSwiper will be true.\n    //     if the scroll on edge positions,\n    //     then the disableParentSwiper will be false.\n    disableParentSwiper = swiper.params.loop ? true : !(positions === swiper.minTranslate() || positions === swiper.maxTranslate());\n    if (disableParentSwiper && swiper.params.nested) e.stopPropagation();\n    if (!swiper.params.freeMode || !swiper.params.freeMode.enabled) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event\n      };\n\n      // Keep the most recent events\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta || newEvent.time > prevEvent.time + 150) {\n          animateSlider(newEvent);\n        }\n      } else {\n        animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = {\n        time: now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta)\n      };\n      const ignoreWheelEvents = lastEventBeforeSnap && newEvent.time < lastEventBeforeSnap.time + 500 && newEvent.delta <= lastEventBeforeSnap.delta && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        lastEventBeforeSnap = undefined;\n        let position = swiper.getTranslate() + delta * params.sensitivity;\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n        if (!wasBeginning && swiper.isBeginning || !wasEnd && swiper.isEnd) {\n          swiper.updateSlidesClasses();\n        }\n        if (swiper.params.loop) {\n          swiper.loopFix({\n            direction: newEvent.direction < 0 ? 'next' : 'prev',\n            byMousewheel: true\n          });\n        }\n        if (swiper.params.freeMode.sticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momentum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(timeout);\n          timeout = undefined;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15 && newEvent.time - firstEvent.time < 500 && firstEvent.delta - newEvent.delta >= 1 && newEvent.delta <= 6) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            timeout = nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n\n          if (!timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            timeout = nextTick(() => {\n              const snapToThreshold = 0.5;\n              lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    return false;\n  }\n  function events(method) {\n    let targetEl = swiper.el;\n    if (swiper.params.mousewheel.eventsTarget !== 'container') {\n      targetEl = document.querySelector(swiper.params.mousewheel.eventsTarget);\n    }\n    targetEl[method]('mouseenter', handleMouseEnter);\n    targetEl[method]('mouseleave', handleMouseLeave);\n    targetEl[method]('wheel', handle);\n  }\n  function enable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener('wheel', handle);\n      return true;\n    }\n    if (swiper.mousewheel.enabled) return false;\n    events('addEventListener');\n    swiper.mousewheel.enabled = true;\n    return true;\n  }\n  function disable() {\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, handle);\n      return true;\n    }\n    if (!swiper.mousewheel.enabled) return false;\n    events('removeEventListener');\n    swiper.mousewheel.enabled = false;\n    return true;\n  }\n  on('init', () => {\n    if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n      disable();\n    }\n    if (swiper.params.mousewheel.enabled) enable();\n  });\n  on('destroy', () => {\n    if (swiper.params.cssMode) {\n      enable();\n    }\n    if (swiper.mousewheel.enabled) disable();\n  });\n  Object.assign(swiper.mousewheel, {\n    enable,\n    disable\n  });\n}","import createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Navigation({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  extendParams({\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n      navigationDisabledClass: 'swiper-navigation-disabled'\n    }\n  });\n  swiper.navigation = {\n    nextEl: null,\n    prevEl: null\n  };\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getEl(el) {\n    let res;\n    if (el && typeof el === 'string' && swiper.isElement) {\n      res = swiper.el.shadowRoot.querySelector(el);\n      if (res) return res;\n    }\n    if (el) {\n      if (typeof el === 'string') res = [...document.querySelectorAll(el)];\n      if (swiper.params.uniqueNavElements && typeof el === 'string' && res.length > 1 && swiper.el.querySelectorAll(el).length === 1) {\n        res = swiper.el.querySelector(el);\n      }\n    }\n    if (el && !res) return el;\n    // if (Array.isArray(res) && res.length === 1) res = res[0];\n    return res;\n  }\n  function toggleEl(el, disabled) {\n    const params = swiper.params.navigation;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (subEl) {\n        subEl.classList[disabled ? 'add' : 'remove'](...params.disabledClass.split(' '));\n        if (subEl.tagName === 'BUTTON') subEl.disabled = disabled;\n        if (swiper.params.watchOverflow && swiper.enabled) {\n          subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n        }\n      }\n    });\n  }\n  function update() {\n    // Update Navigation Buttons\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (swiper.params.loop) {\n      toggleEl(prevEl, false);\n      toggleEl(nextEl, false);\n      return;\n    }\n    toggleEl(prevEl, swiper.isBeginning && !swiper.params.rewind);\n    toggleEl(nextEl, swiper.isEnd && !swiper.params.rewind);\n  }\n  function onPrevClick(e) {\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slidePrev();\n    emit('navigationPrev');\n  }\n  function onNextClick(e) {\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop && !swiper.params.rewind) return;\n    swiper.slideNext();\n    emit('navigationNext');\n  }\n  function init() {\n    const params = swiper.params.navigation;\n    swiper.params.navigation = createElementIfNotDefined(swiper, swiper.originalParams.navigation, swiper.params.navigation, {\n      nextEl: 'swiper-button-next',\n      prevEl: 'swiper-button-prev'\n    });\n    if (!(params.nextEl || params.prevEl)) return;\n    let nextEl = getEl(params.nextEl);\n    let prevEl = getEl(params.prevEl);\n    Object.assign(swiper.navigation, {\n      nextEl,\n      prevEl\n    });\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const initButton = (el, dir) => {\n      if (el) {\n        el.addEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      }\n      if (!swiper.enabled && el) {\n        el.classList.add(...params.lockClass.split(' '));\n      }\n    };\n    nextEl.forEach(el => initButton(el, 'next'));\n    prevEl.forEach(el => initButton(el, 'prev'));\n  }\n  function destroy() {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const destroyButton = (el, dir) => {\n      el.removeEventListener('click', dir === 'next' ? onNextClick : onPrevClick);\n      el.classList.remove(...swiper.params.navigation.disabledClass.split(' '));\n    };\n    nextEl.forEach(el => destroyButton(el, 'next'));\n    prevEl.forEach(el => destroyButton(el, 'prev'));\n  }\n  on('init', () => {\n    if (swiper.params.navigation.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      update();\n    }\n  });\n  on('toEdge fromEdge lock unlock', () => {\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.navigation.lockClass));\n  });\n  on('click', (_s, e) => {\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    const targetEl = e.target;\n    if (swiper.params.navigation.hideOnClick && !prevEl.includes(targetEl) && !nextEl.includes(targetEl)) {\n      if (swiper.pagination && swiper.params.pagination && swiper.params.pagination.clickable && (swiper.pagination.el === targetEl || swiper.pagination.el.contains(targetEl))) return;\n      let isHidden;\n      if (nextEl.length) {\n        isHidden = nextEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      } else if (prevEl.length) {\n        isHidden = prevEl[0].classList.contains(swiper.params.navigation.hiddenClass);\n      }\n      if (isHidden === true) {\n        emit('navigationShow');\n      } else {\n        emit('navigationHide');\n      }\n      [...nextEl, ...prevEl].filter(el => !!el).forEach(el => el.classList.toggle(swiper.params.navigation.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    init();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(...swiper.params.navigation.navigationDisabledClass.split(' '));\n    destroy();\n  };\n  Object.assign(swiper.navigation, {\n    enable,\n    disable,\n    update,\n    init,\n    destroy\n  });\n}","import { createElement, elementChildren } from './utils.js';\nexport default function createElementIfNotDefined(swiper, originalParams, params, checkProps) {\n  if (swiper.params.createElements) {\n    Object.keys(checkProps).forEach(key => {\n      if (!params[key] && params.auto === true) {\n        let element = elementChildren(swiper.el, `.${checkProps[key]}`)[0];\n        if (!element) {\n          element = createElement('div', checkProps[key]);\n          element.className = checkProps[key];\n          swiper.el.append(element);\n        }\n        params[key] = element;\n        originalParams[key] = element;\n      }\n    });\n  }\n  return params;\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nimport { elementIndex, elementOuterSize, elementParents } from '../../shared/utils.js';\nexport default function Pagination({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const pfx = 'swiper-pagination';\n  extendParams({\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets',\n      // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: number => number,\n      formatFractionTotal: number => number,\n      bulletClass: `${pfx}-bullet`,\n      bulletActiveClass: `${pfx}-bullet-active`,\n      modifierClass: `${pfx}-`,\n      currentClass: `${pfx}-current`,\n      totalClass: `${pfx}-total`,\n      hiddenClass: `${pfx}-hidden`,\n      progressbarFillClass: `${pfx}-progressbar-fill`,\n      progressbarOppositeClass: `${pfx}-progressbar-opposite`,\n      clickableClass: `${pfx}-clickable`,\n      lockClass: `${pfx}-lock`,\n      horizontalClass: `${pfx}-horizontal`,\n      verticalClass: `${pfx}-vertical`,\n      paginationDisabledClass: `${pfx}-disabled`\n    }\n  });\n  swiper.pagination = {\n    el: null,\n    bullets: []\n  };\n  let bulletSize;\n  let dynamicBulletIndex = 0;\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function isPaginationDisabled() {\n    return !swiper.params.pagination.el || !swiper.pagination.el || Array.isArray(swiper.pagination.el) && swiper.pagination.el.length === 0;\n  }\n  function setSideBullets(bulletEl, position) {\n    const {\n      bulletActiveClass\n    } = swiper.params.pagination;\n    if (!bulletEl) return;\n    bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n    if (bulletEl) {\n      bulletEl.classList.add(`${bulletActiveClass}-${position}`);\n      bulletEl = bulletEl[`${position === 'prev' ? 'previous' : 'next'}ElementSibling`];\n      if (bulletEl) {\n        bulletEl.classList.add(`${bulletActiveClass}-${position}-${position}`);\n      }\n    }\n  }\n  function onBulletClick(e) {\n    const bulletEl = e.target.closest(classesToSelector(swiper.params.pagination.bulletClass));\n    if (!bulletEl) {\n      return;\n    }\n    e.preventDefault();\n    const index = elementIndex(bulletEl) * swiper.params.slidesPerGroup;\n    if (swiper.params.loop) {\n      if (swiper.realIndex === index) return;\n      if (index < swiper.loopedSlides || index > swiper.slides.length - swiper.loopedSlides) {\n        swiper.loopFix({\n          direction: index < swiper.loopedSlides ? 'prev' : 'next',\n          activeSlideIndex: index,\n          slideTo: false\n        });\n      }\n      swiper.slideToLoop(index);\n    } else {\n      swiper.slideTo(index);\n    }\n  }\n  function update() {\n    // Render || Update Pagination bullets/items\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    // Current/Total\n    let current;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const total = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = swiper.params.slidesPerGroup > 1 ? Math.floor(swiper.realIndex / swiper.params.slidesPerGroup) : swiper.realIndex;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        bulletSize = elementOuterSize(bullets[0], swiper.isHorizontal() ? 'width' : 'height', true);\n        el.forEach(subEl => {\n          subEl.style[swiper.isHorizontal() ? 'width' : 'height'] = `${bulletSize * (params.dynamicMainBullets + 4)}px`;\n        });\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          dynamicBulletIndex += current - (swiper.previousIndex || 0);\n          if (dynamicBulletIndex > params.dynamicMainBullets - 1) {\n            dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (dynamicBulletIndex < 0) {\n            dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = Math.max(current - dynamicBulletIndex, 0);\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.forEach(bulletEl => {\n        const classesToRemove = [...['', '-next', '-next-next', '-prev', '-prev-prev', '-main'].map(suffix => `${params.bulletActiveClass}${suffix}`)].map(s => typeof s === 'string' && s.includes(' ') ? s.split(' ') : s).flat();\n        bulletEl.classList.remove(...classesToRemove);\n      });\n      if (el.length > 1) {\n        bullets.forEach(bullet => {\n          const bulletIndex = elementIndex(bullet);\n          if (bulletIndex === current) {\n            bullet.classList.add(...params.bulletActiveClass.split(' '));\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              bullet.classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n            if (bulletIndex === firstIndex) {\n              setSideBullets(bullet, 'prev');\n            }\n            if (bulletIndex === lastIndex) {\n              setSideBullets(bullet, 'next');\n            }\n          }\n        });\n      } else {\n        const bullet = bullets[current];\n        if (bullet) {\n          bullet.classList.add(...params.bulletActiveClass.split(' '));\n        }\n        if (params.dynamicBullets) {\n          const firstDisplayedBullet = bullets[firstIndex];\n          const lastDisplayedBullet = bullets[lastIndex];\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            if (bullets[i]) {\n              bullets[i].classList.add(...`${params.bulletActiveClass}-main`.split(' '));\n            }\n          }\n          setSideBullets(firstDisplayedBullet, 'prev');\n          setSideBullets(lastDisplayedBullet, 'next');\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (bulletSize * dynamicBulletsLength - bulletSize) / 2 - midIndex * bulletSize;\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.forEach(bullet => {\n          bullet.style[swiper.isHorizontal() ? offsetProp : 'top'] = `${bulletsOffset}px`;\n        });\n      }\n    }\n    el.forEach((subEl, subElIndex) => {\n      if (params.type === 'fraction') {\n        subEl.querySelectorAll(classesToSelector(params.currentClass)).forEach(fractionEl => {\n          fractionEl.textContent = params.formatFractionCurrent(current + 1);\n        });\n        subEl.querySelectorAll(classesToSelector(params.totalClass)).forEach(totalEl => {\n          totalEl.textContent = params.formatFractionTotal(total);\n        });\n      }\n      if (params.type === 'progressbar') {\n        let progressbarDirection;\n        if (params.progressbarOpposite) {\n          progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n        } else {\n          progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n        }\n        const scale = (current + 1) / total;\n        let scaleX = 1;\n        let scaleY = 1;\n        if (progressbarDirection === 'horizontal') {\n          scaleX = scale;\n        } else {\n          scaleY = scale;\n        }\n        subEl.querySelectorAll(classesToSelector(params.progressbarFillClass)).forEach(progressEl => {\n          progressEl.style.transform = `translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`;\n          progressEl.style.transitionDuration = `${swiper.params.speed}ms`;\n        });\n      }\n      if (params.type === 'custom' && params.renderCustom) {\n        subEl.innerHTML = params.renderCustom(swiper, current + 1, total);\n        if (subElIndex === 0) emit('paginationRender', subEl);\n      } else {\n        if (subElIndex === 0) emit('paginationRender', subEl);\n        emit('paginationUpdate', subEl);\n      }\n      if (swiper.params.watchOverflow && swiper.enabled) {\n        subEl.classList[swiper.isLocked ? 'add' : 'remove'](params.lockClass);\n      }\n    });\n  }\n  function render() {\n    // Render Container\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    let el = swiper.pagination.el;\n    el = makeElementsArray(el);\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      let numberOfBullets = swiper.params.loop ? Math.ceil(slidesLength / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      if (swiper.params.freeMode && swiper.params.freeMode.enabled && numberOfBullets > slidesLength) {\n        numberOfBullets = slidesLength;\n      }\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>` + ' / ' + `<span class=\"${params.totalClass}\"></span>`;\n      }\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n    }\n    swiper.pagination.bullets = [];\n    el.forEach(subEl => {\n      if (params.type !== 'custom') {\n        subEl.innerHTML = paginationHTML || '';\n      }\n      if (params.type === 'bullets') {\n        swiper.pagination.bullets.push(...subEl.querySelectorAll(classesToSelector(params.bulletClass)));\n      }\n    });\n    if (params.type !== 'custom') {\n      emit('paginationRender', el[0]);\n    }\n  }\n  function init() {\n    swiper.params.pagination = createElementIfNotDefined(swiper, swiper.originalParams.pagination, swiper.params.pagination, {\n      el: 'swiper-pagination'\n    });\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = [...document.querySelectorAll(params.el)];\n    }\n    if (!el) {\n      el = params.el;\n    }\n    if (!el || el.length === 0) return;\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && Array.isArray(el) && el.length > 1) {\n      el = [...swiper.el.querySelectorAll(params.el)];\n      // check if it belongs to another nested Swiper\n      if (el.length > 1) {\n        el = el.filter(subEl => {\n          if (elementParents(subEl, '.swiper')[0] !== swiper.el) return false;\n          return true;\n        })[0];\n      }\n    }\n    if (Array.isArray(el) && el.length === 1) el = el[0];\n    Object.assign(swiper.pagination, {\n      el\n    });\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      if (params.type === 'bullets' && params.clickable) {\n        subEl.classList.add(params.clickableClass);\n      }\n      subEl.classList.add(params.modifierClass + params.type);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n      if (params.type === 'bullets' && params.dynamicBullets) {\n        subEl.classList.add(`${params.modifierClass}${params.type}-dynamic`);\n        dynamicBulletIndex = 0;\n        if (params.dynamicMainBullets < 1) {\n          params.dynamicMainBullets = 1;\n        }\n      }\n      if (params.type === 'progressbar' && params.progressbarOpposite) {\n        subEl.classList.add(params.progressbarOppositeClass);\n      }\n      if (params.clickable) {\n        subEl.addEventListener('click', onBulletClick);\n      }\n      if (!swiper.enabled) {\n        subEl.classList.add(params.lockClass);\n      }\n    });\n  }\n  function destroy() {\n    const params = swiper.params.pagination;\n    if (isPaginationDisabled()) return;\n    let el = swiper.pagination.el;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => {\n        subEl.classList.remove(params.hiddenClass);\n        subEl.classList.remove(params.modifierClass + params.type);\n        subEl.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n        if (params.clickable) {\n          subEl.removeEventListener('click', onBulletClick);\n        }\n      });\n    }\n    if (swiper.pagination.bullets) swiper.pagination.bullets.forEach(subEl => subEl.classList.remove(...params.bulletActiveClass.split(' ')));\n  }\n  on('changeDirection', () => {\n    if (!swiper.pagination || !swiper.pagination.el) return;\n    const params = swiper.params.pagination;\n    let {\n      el\n    } = swiper.pagination;\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.classList.remove(params.horizontalClass, params.verticalClass);\n      subEl.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    });\n  });\n  on('init', () => {\n    if (swiper.params.pagination.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      render();\n      update();\n    }\n  });\n  on('activeIndexChange', () => {\n    if (typeof swiper.snapIndex === 'undefined') {\n      update();\n    }\n  });\n  on('snapIndexChange', () => {\n    update();\n  });\n  on('snapGridLengthChange', () => {\n    render();\n    update();\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  on('enable disable', () => {\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.pagination.lockClass));\n    }\n  });\n  on('lock unlock', () => {\n    update();\n  });\n  on('click', (_s, e) => {\n    const targetEl = e.target;\n    let {\n      el\n    } = swiper.pagination;\n    if (!Array.isArray(el)) el = [el].filter(element => !!element);\n    if (swiper.params.pagination.el && swiper.params.pagination.hideOnClick && el && el.length > 0 && !targetEl.classList.contains(swiper.params.pagination.bulletClass)) {\n      if (swiper.navigation && (swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl || swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl)) return;\n      const isHidden = el[0].classList.contains(swiper.params.pagination.hiddenClass);\n      if (isHidden === true) {\n        emit('paginationShow');\n      } else {\n        emit('paginationHide');\n      }\n      el.forEach(subEl => subEl.classList.toggle(swiper.params.pagination.hiddenClass));\n    }\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.remove(swiper.params.pagination.paginationDisabledClass));\n    }\n    init();\n    render();\n    update();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.pagination.paginationDisabledClass);\n    let {\n      el\n    } = swiper.pagination;\n    if (el) {\n      el = makeElementsArray(el);\n      el.forEach(subEl => subEl.classList.add(swiper.params.pagination.paginationDisabledClass));\n    }\n    destroy();\n  };\n  Object.assign(swiper.pagination, {\n    enable,\n    disable,\n    render,\n    update,\n    init,\n    destroy\n  });\n}","export default function classesToSelector(classes = '') {\n  return `.${classes.trim().replace(/([\\.:!+\\/])/g, '\\\\$1') // eslint-disable-line\n  .replace(/ /g, '.')}`;\n}","import { getDocument } from 'ssr-window';\nimport { createElement, elementOffset, nextTick } from '../../shared/utils.js';\nimport createElementIfNotDefined from '../../shared/create-element-if-not-defined.js';\nexport default function Scrollbar({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const document = getDocument();\n  let isTouched = false;\n  let timeout = null;\n  let dragTimeout = null;\n  let dragStartPos;\n  let dragSize;\n  let trackSize;\n  let divider;\n  extendParams({\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n      scrollbarDisabledClass: 'swiper-scrollbar-disabled',\n      horizontalClass: `swiper-scrollbar-horizontal`,\n      verticalClass: `swiper-scrollbar-vertical`\n    }\n  });\n  swiper.scrollbar = {\n    el: null,\n    dragEl: null\n  };\n  function setTranslate() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n    const progress = swiper.params.loop ? swiper.progressLoop : swiper.progress;\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.transform = `translate3d(${newPos}px, 0, 0)`;\n      dragEl.style.width = `${newSize}px`;\n    } else {\n      dragEl.style.transform = `translate3d(0px, ${newPos}px, 0)`;\n      dragEl.style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(timeout);\n      el.style.opacity = 1;\n      timeout = setTimeout(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n  }\n  function setTransition(duration) {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.dragEl.style.transitionDuration = `${duration}ms`;\n  }\n  function updateSize() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const {\n      scrollbar\n    } = swiper;\n    const {\n      dragEl,\n      el\n    } = scrollbar;\n    dragEl.style.width = '';\n    dragEl.style.height = '';\n    trackSize = swiper.isHorizontal() ? el.offsetWidth : el.offsetHeight;\n    divider = swiper.size / (swiper.virtualSize + swiper.params.slidesOffsetBefore - (swiper.params.centeredSlides ? swiper.snapGrid[0] : 0));\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n    if (swiper.isHorizontal()) {\n      dragEl.style.width = `${dragSize}px`;\n    } else {\n      dragEl.style.height = `${dragSize}px`;\n    }\n    if (divider >= 1) {\n      el.style.display = 'none';\n    } else {\n      el.style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      el.style.opacity = 0;\n    }\n    if (swiper.params.watchOverflow && swiper.enabled) {\n      scrollbar.el.classList[swiper.isLocked ? 'add' : 'remove'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function getPointerPosition(e) {\n    return swiper.isHorizontal() ? e.clientX : e.clientY;\n  }\n  function setDragPosition(e) {\n    const {\n      scrollbar,\n      rtlTranslate: rtl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    let positionRatio;\n    positionRatio = (getPointerPosition(e) - elementOffset(el)[swiper.isHorizontal() ? 'left' : 'top'] - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n    const position = swiper.minTranslate() + (swiper.maxTranslate() - swiper.minTranslate()) * positionRatio;\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  function onDragStart(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    isTouched = true;\n    dragStartPos = e.target === dragEl ? getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n    wrapperEl.style.transitionDuration = '100ms';\n    dragEl.style.transitionDuration = '100ms';\n    setDragPosition(e);\n    clearTimeout(dragTimeout);\n    el.style.transitionDuration = '0ms';\n    if (params.hide) {\n      el.style.opacity = 1;\n    }\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = 'none';\n    }\n    emit('scrollbarDragStart', e);\n  }\n  function onDragMove(e) {\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el,\n      dragEl\n    } = scrollbar;\n    if (!isTouched) return;\n    if (e.preventDefault) e.preventDefault();else e.returnValue = false;\n    setDragPosition(e);\n    wrapperEl.style.transitionDuration = '0ms';\n    el.style.transitionDuration = '0ms';\n    dragEl.style.transitionDuration = '0ms';\n    emit('scrollbarDragMove', e);\n  }\n  function onDragEnd(e) {\n    const params = swiper.params.scrollbar;\n    const {\n      scrollbar,\n      wrapperEl\n    } = swiper;\n    const {\n      el\n    } = scrollbar;\n    if (!isTouched) return;\n    isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style['scroll-snap-type'] = '';\n      wrapperEl.style.transitionDuration = '';\n    }\n    if (params.hide) {\n      clearTimeout(dragTimeout);\n      dragTimeout = nextTick(() => {\n        el.style.opacity = 0;\n        el.style.transitionDuration = '400ms';\n      }, 1000);\n    }\n    emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  }\n  function events(method) {\n    const {\n      scrollbar,\n      params\n    } = swiper;\n    const el = scrollbar.el;\n    if (!el) return;\n    const target = el;\n    const activeListener = params.passiveListeners ? {\n      passive: false,\n      capture: false\n    } : false;\n    const passiveListener = params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    if (!target) return;\n    const eventMethod = method === 'on' ? 'addEventListener' : 'removeEventListener';\n    target[eventMethod]('pointerdown', onDragStart, activeListener);\n    document[eventMethod]('pointermove', onDragMove, activeListener);\n    document[eventMethod]('pointerup', onDragEnd, passiveListener);\n  }\n  function enableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('on');\n  }\n  function disableDraggable() {\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    events('off');\n  }\n  function init() {\n    const {\n      scrollbar,\n      el: swiperEl\n    } = swiper;\n    swiper.params.scrollbar = createElementIfNotDefined(swiper, swiper.originalParams.scrollbar, swiper.params.scrollbar, {\n      el: 'swiper-scrollbar'\n    });\n    const params = swiper.params.scrollbar;\n    if (!params.el) return;\n    let el;\n    if (typeof params.el === 'string' && swiper.isElement) {\n      el = swiper.el.shadowRoot.querySelector(params.el);\n    }\n    if (!el && typeof params.el === 'string') {\n      el = document.querySelectorAll(params.el);\n    } else if (!el) {\n      el = params.el;\n    }\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && el.length > 1 && swiperEl.querySelectorAll(params.el).length === 1) {\n      el = swiperEl.querySelector(params.el);\n    }\n    if (el.length > 0) el = el[0];\n    el.classList.add(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    let dragEl;\n    if (el) {\n      dragEl = el.querySelector(`.${swiper.params.scrollbar.dragClass}`);\n      if (!dragEl) {\n        dragEl = createElement('div', swiper.params.scrollbar.dragClass);\n        el.append(dragEl);\n      }\n    }\n    Object.assign(scrollbar, {\n      el,\n      dragEl\n    });\n    if (params.draggable) {\n      enableDraggable();\n    }\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  }\n  function destroy() {\n    const params = swiper.params.scrollbar;\n    const el = swiper.scrollbar.el;\n    if (el) {\n      el.classList.remove(swiper.isHorizontal() ? params.horizontalClass : params.verticalClass);\n    }\n    disableDraggable();\n  }\n  on('init', () => {\n    if (swiper.params.scrollbar.enabled === false) {\n      // eslint-disable-next-line\n      disable();\n    } else {\n      init();\n      updateSize();\n      setTranslate();\n    }\n  });\n  on('update resize observerUpdate lock unlock', () => {\n    updateSize();\n  });\n  on('setTranslate', () => {\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    setTransition(duration);\n  });\n  on('enable disable', () => {\n    const {\n      el\n    } = swiper.scrollbar;\n    if (el) {\n      el.classList[swiper.enabled ? 'remove' : 'add'](swiper.params.scrollbar.lockClass);\n    }\n  });\n  on('destroy', () => {\n    destroy();\n  });\n  const enable = () => {\n    swiper.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.remove(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    init();\n    updateSize();\n    setTranslate();\n  };\n  const disable = () => {\n    swiper.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    if (swiper.scrollbar.el) {\n      swiper.scrollbar.el.classList.add(swiper.params.scrollbar.scrollbarDisabledClass);\n    }\n    destroy();\n  };\n  Object.assign(swiper.scrollbar, {\n    enable,\n    disable,\n    updateSize,\n    setTranslate,\n    init,\n    destroy\n  });\n}","import { elementChildren } from '../../shared/utils.js';\nexport default function Parallax({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    parallax: {\n      enabled: false\n    }\n  });\n  const setTransform = (el, progress) => {\n    const {\n      rtl\n    } = swiper;\n    const rtlFactor = rtl ? -1 : 1;\n    const p = el.getAttribute('data-swiper-parallax') || '0';\n    let x = el.getAttribute('data-swiper-parallax-x');\n    let y = el.getAttribute('data-swiper-parallax-y');\n    const scale = el.getAttribute('data-swiper-parallax-scale');\n    const opacity = el.getAttribute('data-swiper-parallax-opacity');\n    const rotate = el.getAttribute('data-swiper-parallax-rotate');\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n    if (x.indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if (y.indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - (opacity - 1) * (1 - Math.abs(progress));\n      el.style.opacity = currentOpacity;\n    }\n    let transform = `translate3d(${x}, ${y}, 0px)`;\n    if (typeof scale !== 'undefined' && scale !== null) {\n      const currentScale = scale - (scale - 1) * (1 - Math.abs(progress));\n      transform += ` scale(${currentScale})`;\n    }\n    if (rotate && typeof rotate !== 'undefined' && rotate !== null) {\n      const currentRotate = rotate * progress * -1;\n      transform += ` rotate(${currentRotate}deg)`;\n    }\n    el.style.transform = transform;\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      slides,\n      progress,\n      snapGrid\n    } = swiper;\n    elementChildren(el, '[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(subEl => {\n      setTransform(subEl, progress);\n    });\n    slides.forEach((slideEl, slideIndex) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - progress * (snapGrid.length - 1);\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      slideEl.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale], [data-swiper-parallax-rotate]').forEach(subEl => {\n        setTransform(subEl, slideProgress);\n      });\n    });\n  };\n  const setTransition = (duration = swiper.params.speed) => {\n    const {\n      el\n    } = swiper;\n    el.querySelectorAll('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]').forEach(parallaxEl => {\n      let parallaxDuration = parseInt(parallaxEl.getAttribute('data-swiper-parallax-duration'), 10) || duration;\n      if (duration === 0) parallaxDuration = 0;\n      parallaxEl.style.transitionDuration = `${parallaxDuration}ms`;\n    });\n  };\n  on('beforeInit', () => {\n    if (!swiper.params.parallax.enabled) return;\n    swiper.params.watchSlidesProgress = true;\n    swiper.originalParams.watchSlidesProgress = true;\n  });\n  on('init', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTranslate', () => {\n    if (!swiper.params.parallax.enabled) return;\n    setTranslate();\n  });\n  on('setTransition', (_swiper, duration) => {\n    if (!swiper.params.parallax.enabled) return;\n    setTransition(duration);\n  });\n}","import { getWindow } from 'ssr-window';\nimport { elementChildren, elementOffset, elementParents, getTranslate } from '../../shared/utils.js';\nexport default function Zoom({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed'\n    }\n  });\n  swiper.zoom = {\n    enabled: false\n  };\n  let currentScale = 1;\n  let isScaling = false;\n  let fakeGestureTouched;\n  let fakeGestureMoved;\n  const evCache = [];\n  const gesture = {\n    originX: 0,\n    originY: 0,\n    slideEl: undefined,\n    slideWidth: undefined,\n    slideHeight: undefined,\n    imageEl: undefined,\n    imageWrapEl: undefined,\n    maxRatio: 3\n  };\n  const image = {\n    isTouched: undefined,\n    isMoved: undefined,\n    currentX: undefined,\n    currentY: undefined,\n    minX: undefined,\n    minY: undefined,\n    maxX: undefined,\n    maxY: undefined,\n    width: undefined,\n    height: undefined,\n    startX: undefined,\n    startY: undefined,\n    touchesStart: {},\n    touchesCurrent: {}\n  };\n  const velocity = {\n    x: undefined,\n    y: undefined,\n    prevPositionX: undefined,\n    prevPositionY: undefined,\n    prevTime: undefined\n  };\n  let scale = 1;\n  Object.defineProperty(swiper.zoom, 'scale', {\n    get() {\n      return scale;\n    },\n    set(value) {\n      if (scale !== value) {\n        const imageEl = gesture.imageEl;\n        const slideEl = gesture.slideEl;\n        emit('zoomChange', value, imageEl, slideEl);\n      }\n      scale = value;\n    }\n  });\n  function getDistanceBetweenTouches() {\n    if (evCache.length < 2) return 1;\n    const x1 = evCache[0].pageX;\n    const y1 = evCache[0].pageY;\n    const x2 = evCache[1].pageX;\n    const y2 = evCache[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  }\n  function getScaleOrigin() {\n    if (evCache.length < 2) return {\n      x: null,\n      y: null\n    };\n    const box = gesture.imageEl.getBoundingClientRect();\n    return [(evCache[0].pageX + (evCache[1].pageX - evCache[0].pageX) / 2 - box.x) / currentScale, (evCache[0].pageY + (evCache[1].pageY - evCache[0].pageY) / 2 - box.y) / currentScale];\n  }\n  function getSlideSelector() {\n    return swiper.isElement ? `swiper-slide` : `.${swiper.params.slideClass}`;\n  }\n  function eventWithinSlide(e) {\n    const slideSelector = getSlideSelector();\n    if (e.target.matches(slideSelector)) return true;\n    if (swiper.slides.filter(slideEl => slideEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n  function eventWithinZoomContainer(e) {\n    const selector = `.${swiper.params.zoom.containerClass}`;\n    if (e.target.matches(selector)) return true;\n    if ([...swiper.el.querySelectorAll(selector)].filter(containerEl => containerEl.contains(e.target)).length > 0) return true;\n    return false;\n  }\n\n  // Events\n  function onGestureStart(e) {\n    if (e.pointerType === 'mouse') {\n      evCache.splice(0, evCache.length);\n    }\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    evCache.push(e);\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureTouched = true;\n    gesture.scaleStart = getDistanceBetweenTouches();\n    if (!gesture.slideEl) {\n      gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      if (!gesture.slideEl) gesture.slideEl = swiper.slides[swiper.activeIndex];\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n      if (!gesture.imageWrapEl) {\n        gesture.imageEl = undefined;\n        return;\n      }\n      gesture.maxRatio = gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    }\n    if (gesture.imageEl) {\n      const [originX, originY] = getScaleOrigin();\n      gesture.originX = originX;\n      gesture.originY = originY;\n      gesture.imageEl.style.transitionDuration = '0ms';\n    }\n    isScaling = true;\n  }\n  function onGestureChange(e) {\n    if (!eventWithinSlide(e)) return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache[pointerIndex] = e;\n    if (evCache.length < 2) {\n      return;\n    }\n    fakeGestureMoved = true;\n    gesture.scaleMove = getDistanceBetweenTouches();\n    if (!gesture.imageEl) {\n      return;\n    }\n    zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function onGestureEnd(e) {\n    if (!eventWithinSlide(e)) return;\n    if (e.pointerType === 'mouse' && e.type === 'pointerout') return;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const pointerIndex = evCache.findIndex(cachedEv => cachedEv.pointerId === e.pointerId);\n    if (pointerIndex >= 0) evCache.splice(pointerIndex, 1);\n    if (!fakeGestureTouched || !fakeGestureMoved) {\n      return;\n    }\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n    if (!gesture.imageEl) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.imageEl.style.transitionDuration = `${swiper.params.speed}ms`;\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n    currentScale = zoom.scale;\n    isScaling = false;\n    if (zoom.scale > 1 && gesture.slideEl) {\n      gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    } else if (zoom.scale <= 1 && gesture.slideEl) {\n      gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    }\n    if (zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n      gesture.slideEl = undefined;\n    }\n  }\n  function onTouchStart(e) {\n    const device = swiper.device;\n    if (!gesture.imageEl) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    const event = evCache.length > 0 ? evCache[0] : e;\n    image.touchesStart.x = event.pageX;\n    image.touchesStart.y = event.pageY;\n  }\n  function onTouchMove(e) {\n    if (!eventWithinSlide(e) || !eventWithinZoomContainer(e)) return;\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !gesture.slideEl) return;\n    if (!image.isMoved) {\n      image.width = gesture.imageEl.offsetWidth;\n      image.height = gesture.imageEl.offsetHeight;\n      image.startX = getTranslate(gesture.imageWrapEl, 'x') || 0;\n      image.startY = getTranslate(gesture.imageWrapEl, 'y') || 0;\n      gesture.slideWidth = gesture.slideEl.offsetWidth;\n      gesture.slideHeight = gesture.slideEl.offsetHeight;\n      gesture.imageWrapEl.style.transitionDuration = '0ms';\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.touchesCurrent.x = evCache.length > 0 ? evCache[0].pageX : e.pageX;\n    image.touchesCurrent.y = evCache.length > 0 ? evCache[0].pageY : e.pageY;\n    const touchesDiff = Math.max(Math.abs(image.touchesCurrent.x - image.touchesStart.x), Math.abs(image.touchesCurrent.y - image.touchesStart.y));\n    if (touchesDiff > 5) {\n      swiper.allowClick = false;\n    }\n    if (!image.isMoved && !isScaling) {\n      if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n        image.isTouched = false;\n        return;\n      }\n      if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n    e.stopPropagation();\n    image.isMoved = true;\n    const scaleRatio = (zoom.scale - currentScale) / (gesture.maxRatio - swiper.params.zoom.minRatio);\n    const {\n      originX,\n      originY\n    } = gesture;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX + scaleRatio * (image.width - originX * 2);\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY + scaleRatio * (image.height - originY * 2);\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTouchEnd() {\n    const zoom = swiper.zoom;\n    if (!gesture.imageEl) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n    gesture.imageWrapEl.style.transitionDuration = `${momentumDuration}ms`;\n    gesture.imageWrapEl.style.transform = `translate3d(${image.currentX}px, ${image.currentY}px,0)`;\n  }\n  function onTransitionEnd() {\n    const zoom = swiper.zoom;\n    if (gesture.slideEl && swiper.activeIndex !== swiper.slides.indexOf(gesture.slideEl)) {\n      if (gesture.imageEl) {\n        gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n      }\n      if (gesture.imageWrapEl) {\n        gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n      }\n      gesture.slideEl.classList.remove(`${swiper.params.zoom.zoomedSlideClass}`);\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.slideEl = undefined;\n      gesture.imageEl = undefined;\n      gesture.imageWrapEl = undefined;\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n  }\n  function zoomIn(e) {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (e && e.target) {\n        gesture.slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n      }\n      if (!gesture.slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n        } else {\n          gesture.slideEl = swiper.slides[swiper.activeIndex];\n        }\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.touchAction = 'none';\n    }\n    gesture.slideEl.classList.add(`${params.zoomedSlideClass}`);\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.pageX;\n      touchY = e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n    const forceZoomRatio = typeof e === 'number' ? e : null;\n    if (currentScale === 1 && forceZoomRatio) {\n      touchX = undefined;\n      touchY = undefined;\n    }\n    zoom.scale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    currentScale = forceZoomRatio || gesture.imageWrapEl.getAttribute('data-swiper-zoom') || params.maxRatio;\n    if (e && !(currentScale === 1 && forceZoomRatio)) {\n      slideWidth = gesture.slideEl.offsetWidth;\n      slideHeight = gesture.slideEl.offsetHeight;\n      offsetX = elementOffset(gesture.slideEl).left + window.scrollX;\n      offsetY = elementOffset(gesture.slideEl).top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n      imageWidth = gesture.imageEl.offsetWidth;\n      imageHeight = gesture.imageEl.offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    if (forceZoomRatio && zoom.scale === 1) {\n      gesture.originX = 0;\n      gesture.originY = 0;\n    }\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = `translate3d(${translateX}px, ${translateY}px,0)`;\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = `translate3d(0,0,0) scale(${zoom.scale})`;\n  }\n  function zoomOut() {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    if (!gesture.slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.slideEl = elementChildren(swiper.slidesEl, `.${swiper.params.slideActiveClass}`)[0];\n      } else {\n        gesture.slideEl = swiper.slides[swiper.activeIndex];\n      }\n      let imageEl = gesture.slideEl.querySelector(`.${params.containerClass}`);\n      if (imageEl) {\n        imageEl = imageEl.querySelectorAll('picture, img, svg, canvas, .swiper-zoom-target')[0];\n      }\n      gesture.imageEl = imageEl;\n      if (imageEl) {\n        gesture.imageWrapEl = elementParents(gesture.imageEl, `.${params.containerClass}`)[0];\n      } else {\n        gesture.imageWrapEl = undefined;\n      }\n    }\n    if (!gesture.imageEl || !gesture.imageWrapEl) return;\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = '';\n      swiper.wrapperEl.style.touchAction = '';\n    }\n    zoom.scale = 1;\n    currentScale = 1;\n    gesture.imageWrapEl.style.transitionDuration = '300ms';\n    gesture.imageWrapEl.style.transform = 'translate3d(0,0,0)';\n    gesture.imageEl.style.transitionDuration = '300ms';\n    gesture.imageEl.style.transform = 'translate3d(0,0,0) scale(1)';\n    gesture.slideEl.classList.remove(`${params.zoomedSlideClass}`);\n    gesture.slideEl = undefined;\n    gesture.originX = 0;\n    gesture.originY = 0;\n  }\n\n  // Toggle Zoom\n  function zoomToggle(e) {\n    const zoom = swiper.zoom;\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoomOut();\n    } else {\n      // Zoom In\n      zoomIn(e);\n    }\n  }\n  function getListeners() {\n    const passiveListener = swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    const activeListenerWithCapture = swiper.params.passiveListeners ? {\n      passive: false,\n      capture: true\n    } : true;\n    return {\n      passiveListener,\n      activeListenerWithCapture\n    };\n  }\n\n  // Attach/Detach Events\n  function enable() {\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.addEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.addEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.addEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.addEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  function disable() {\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    zoom.enabled = false;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n\n    // Scale image\n    swiper.wrapperEl.removeEventListener('pointerdown', onGestureStart, passiveListener);\n    swiper.wrapperEl.removeEventListener('pointermove', onGestureChange, activeListenerWithCapture);\n    ['pointerup', 'pointercancel', 'pointerout'].forEach(eventName => {\n      swiper.wrapperEl.removeEventListener(eventName, onGestureEnd, passiveListener);\n    });\n\n    // Move image\n    swiper.wrapperEl.removeEventListener('pointermove', onTouchMove, activeListenerWithCapture);\n  }\n  on('init', () => {\n    if (swiper.params.zoom.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    disable();\n  });\n  on('touchStart', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchStart(e);\n  });\n  on('touchEnd', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchEnd(e);\n  });\n  on('doubleTap', (_s, e) => {\n    if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n      zoomToggle(e);\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n      onTransitionEnd();\n    }\n  });\n  on('slideChange', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n      onTransitionEnd();\n    }\n  });\n  Object.assign(swiper.zoom, {\n    enable,\n    disable,\n    in: zoomIn,\n    out: zoomOut,\n    toggle: zoomToggle\n  });\n}","/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\nimport { elementTransitionEnd, nextTick } from '../../shared/utils.js';\nexport default function Controller({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide' // or 'container'\n    }\n  });\n\n  swiper.controller = {\n    control: undefined\n  };\n  function LinearSpline(x, y) {\n    const binarySearch = function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }();\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (x2 - this.x[i1]) * (this.y[i3] - this.y[i1]) / (this.x[i3] - this.x[i1]) + this.y[i1];\n    };\n    return this;\n  }\n  function getInterpolateFunction(c) {\n    swiper.controller.spline = swiper.params.loop ? new LinearSpline(swiper.slidesGrid, c.slidesGrid) : new LinearSpline(swiper.snapGrid, c.snapGrid);\n  }\n  function setTranslate(_t, byController) {\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    const Swiper = swiper.constructor;\n    function setControlledTranslate(c) {\n      if (c.destroyed) return;\n\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        if (Number.isNaN(multiplier) || !Number.isFinite(multiplier)) {\n          multiplier = 1;\n        }\n        controlledTranslate = (translate - swiper.minTranslate()) * multiplier + c.minTranslate();\n      }\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  }\n  function setTransition(duration, byController) {\n    const Swiper = swiper.constructor;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      if (c.destroyed) return;\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        elementTransitionEnd(c.wrapperEl, () => {\n          if (!controlled) return;\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  }\n  function removeSpline() {\n    if (!swiper.controller.control) return;\n    if (swiper.controller.spline) {\n      swiper.controller.spline = undefined;\n      delete swiper.controller.spline;\n    }\n  }\n  on('beforeInit', () => {\n    if (typeof window !== 'undefined' && (\n    // eslint-disable-line\n    typeof swiper.params.controller.control === 'string' || swiper.params.controller.control instanceof HTMLElement)) {\n      const controlElement = document.querySelector(swiper.params.controller.control);\n      if (controlElement && controlElement.swiper) {\n        swiper.controller.control = controlElement.swiper;\n      } else if (controlElement) {\n        const onControllerSwiper = e => {\n          swiper.controller.control = e.detail[0];\n          swiper.update();\n          controlElement.removeEventListener('init', onControllerSwiper);\n        };\n        controlElement.addEventListener('init', onControllerSwiper);\n      }\n      return;\n    }\n    swiper.controller.control = swiper.params.controller.control;\n  });\n  on('update', () => {\n    removeSpline();\n  });\n  on('resize', () => {\n    removeSpline();\n  });\n  on('observerUpdate', () => {\n    removeSpline();\n  });\n  on('setTranslate', (_s, translate, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTranslate(translate, byController);\n  });\n  on('setTransition', (_s, duration, byController) => {\n    if (!swiper.controller.control || swiper.controller.control.destroyed) return;\n    swiper.controller.setTransition(duration, byController);\n  });\n  Object.assign(swiper.controller, {\n    setTranslate,\n    setTransition\n  });\n}","import classesToSelector from '../../shared/classes-to-selector.js';\nimport { createElement, elementIndex } from '../../shared/utils.js';\nexport default function A11y({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n      slideLabelMessage: '{{index}} / {{slidesLength}}',\n      containerMessage: null,\n      containerRoleDescriptionMessage: null,\n      itemRoleDescriptionMessage: null,\n      slideRole: 'group',\n      id: null\n    }\n  });\n  swiper.a11y = {\n    clicked: false\n  };\n  let liveRegion = null;\n  function notify(message) {\n    const notification = liveRegion;\n    if (notification.length === 0) return;\n    notification.innerHTML = '';\n    notification.innerHTML = message;\n  }\n  const makeElementsArray = el => {\n    if (!Array.isArray(el)) el = [el].filter(e => !!e);\n    return el;\n  };\n  function getRandomNumber(size = 16) {\n    const randomChar = () => Math.round(16 * Math.random()).toString(16);\n    return 'x'.repeat(size).replace(/x/g, randomChar);\n  }\n  function makeElFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '0');\n    });\n  }\n  function makeElNotFocusable(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('tabIndex', '-1');\n    });\n  }\n  function addElRole(el, role) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('role', role);\n    });\n  }\n  function addElRoleDescription(el, description) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-roledescription', description);\n    });\n  }\n  function addElControls(el, controls) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-controls', controls);\n    });\n  }\n  function addElLabel(el, label) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-label', label);\n    });\n  }\n  function addElId(el, id) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('id', id);\n    });\n  }\n  function addElLive(el, live) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-live', live);\n    });\n  }\n  function disableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', true);\n    });\n  }\n  function enableEl(el) {\n    el = makeElementsArray(el);\n    el.forEach(subEl => {\n      subEl.setAttribute('aria-disabled', false);\n    });\n  }\n  function onEnterOrSpaceKey(e) {\n    if (e.keyCode !== 13 && e.keyCode !== 32) return;\n    const params = swiper.params.a11y;\n    const targetEl = e.target;\n    if (swiper.pagination && swiper.pagination.el && (targetEl === swiper.pagination.el || swiper.pagination.el.contains(e.target))) {\n      if (!e.target.matches(classesToSelector(swiper.params.pagination.bulletClass))) return;\n    }\n    if (swiper.navigation && swiper.navigation.nextEl && targetEl === swiper.navigation.nextEl) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        notify(params.lastSlideMessage);\n      } else {\n        notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.prevEl && targetEl === swiper.navigation.prevEl) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        notify(params.firstSlideMessage);\n      } else {\n        notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && targetEl.matches(classesToSelector(swiper.params.pagination.bulletClass))) {\n      targetEl.click();\n    }\n  }\n  function updateNavigation() {\n    if (swiper.params.loop || swiper.params.rewind || !swiper.navigation) return;\n    const {\n      nextEl,\n      prevEl\n    } = swiper.navigation;\n    if (prevEl) {\n      if (swiper.isBeginning) {\n        disableEl(prevEl);\n        makeElNotFocusable(prevEl);\n      } else {\n        enableEl(prevEl);\n        makeElFocusable(prevEl);\n      }\n    }\n    if (nextEl) {\n      if (swiper.isEnd) {\n        disableEl(nextEl);\n        makeElNotFocusable(nextEl);\n      } else {\n        enableEl(nextEl);\n        makeElFocusable(nextEl);\n      }\n    }\n  }\n  function hasPagination() {\n    return swiper.pagination && swiper.pagination.bullets && swiper.pagination.bullets.length;\n  }\n  function hasClickablePagination() {\n    return hasPagination() && swiper.params.pagination.clickable;\n  }\n  function updatePagination() {\n    const params = swiper.params.a11y;\n    if (!hasPagination()) return;\n    swiper.pagination.bullets.forEach(bulletEl => {\n      if (swiper.params.pagination.clickable) {\n        makeElFocusable(bulletEl);\n        if (!swiper.params.pagination.renderBullet) {\n          addElRole(bulletEl, 'button');\n          addElLabel(bulletEl, params.paginationBulletMessage.replace(/\\{\\{index\\}\\}/, elementIndex(bulletEl) + 1));\n        }\n      }\n      if (bulletEl.matches(classesToSelector(swiper.params.pagination.bulletActiveClass))) {\n        bulletEl.setAttribute('aria-current', 'true');\n      } else {\n        bulletEl.removeAttribute('aria-current');\n      }\n    });\n  }\n  const initNavEl = (el, wrapperId, message) => {\n    makeElFocusable(el);\n    if (el.tagName !== 'BUTTON') {\n      addElRole(el, 'button');\n      el.addEventListener('keydown', onEnterOrSpaceKey);\n    }\n    addElLabel(el, message);\n    addElControls(el, wrapperId);\n  };\n  const handlePointerDown = () => {\n    swiper.a11y.clicked = true;\n  };\n  const handlePointerUp = () => {\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        if (!swiper.destroyed) {\n          swiper.a11y.clicked = false;\n        }\n      });\n    });\n  };\n  const handleFocus = e => {\n    if (swiper.a11y.clicked) return;\n    const slideEl = e.target.closest(`.${swiper.params.slideClass}, swiper-slide`);\n    if (!slideEl || !swiper.slides.includes(slideEl)) return;\n    const isActive = swiper.slides.indexOf(slideEl) === swiper.activeIndex;\n    const isVisible = swiper.params.watchSlidesProgress && swiper.visibleSlides && swiper.visibleSlides.includes(slideEl);\n    if (isActive || isVisible) return;\n    if (e.sourceCapabilities && e.sourceCapabilities.firesTouchEvents) return;\n    if (swiper.isHorizontal()) {\n      swiper.el.scrollLeft = 0;\n    } else {\n      swiper.el.scrollTop = 0;\n    }\n    swiper.slideTo(swiper.slides.indexOf(slideEl), 0);\n  };\n  const initSlides = () => {\n    const params = swiper.params.a11y;\n    if (params.itemRoleDescriptionMessage) {\n      addElRoleDescription(swiper.slides, params.itemRoleDescriptionMessage);\n    }\n    if (params.slideRole) {\n      addElRole(swiper.slides, params.slideRole);\n    }\n    const slidesLength = swiper.slides.length;\n    if (params.slideLabelMessage) {\n      swiper.slides.forEach((slideEl, index) => {\n        const slideIndex = swiper.params.loop ? parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10) : index;\n        const ariaLabelMessage = params.slideLabelMessage.replace(/\\{\\{index\\}\\}/, slideIndex + 1).replace(/\\{\\{slidesLength\\}\\}/, slidesLength);\n        addElLabel(slideEl, ariaLabelMessage);\n      });\n    }\n  };\n  const init = () => {\n    const params = swiper.params.a11y;\n    swiper.el.append(liveRegion);\n\n    // Container\n    const containerEl = swiper.el;\n    if (params.containerRoleDescriptionMessage) {\n      addElRoleDescription(containerEl, params.containerRoleDescriptionMessage);\n    }\n    if (params.containerMessage) {\n      addElLabel(containerEl, params.containerMessage);\n    }\n\n    // Wrapper\n    const wrapperEl = swiper.wrapperEl;\n    const wrapperId = params.id || wrapperEl.getAttribute('id') || `swiper-wrapper-${getRandomNumber(16)}`;\n    const live = swiper.params.autoplay && swiper.params.autoplay.enabled ? 'off' : 'polite';\n    addElId(wrapperEl, wrapperId);\n    addElLive(wrapperEl, live);\n\n    // Slide\n    initSlides();\n\n    // Navigation\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => initNavEl(el, wrapperId, params.nextSlideMessage));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => initNavEl(el, wrapperId, params.prevSlideMessage));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.addEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.addEventListener('focus', handleFocus, true);\n    swiper.el.addEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.addEventListener('pointerup', handlePointerUp, true);\n  };\n  function destroy() {\n    if (liveRegion && liveRegion.length > 0) liveRegion.remove();\n    let {\n      nextEl,\n      prevEl\n    } = swiper.navigation ? swiper.navigation : {};\n    nextEl = makeElementsArray(nextEl);\n    prevEl = makeElementsArray(prevEl);\n    if (nextEl) {\n      nextEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n    if (prevEl) {\n      prevEl.forEach(el => el.removeEventListener('keydown', onEnterOrSpaceKey));\n    }\n\n    // Pagination\n    if (hasClickablePagination()) {\n      const paginationEl = Array.isArray(swiper.pagination.el) ? swiper.pagination.el : [swiper.pagination.el];\n      paginationEl.forEach(el => {\n        el.removeEventListener('keydown', onEnterOrSpaceKey);\n      });\n    }\n\n    // Tab focus\n    swiper.el.removeEventListener('focus', handleFocus, true);\n    swiper.el.removeEventListener('pointerdown', handlePointerDown, true);\n    swiper.el.removeEventListener('pointerup', handlePointerUp, true);\n  }\n  on('beforeInit', () => {\n    liveRegion = createElement('span', swiper.params.a11y.notificationClass);\n    liveRegion.setAttribute('aria-live', 'assertive');\n    liveRegion.setAttribute('aria-atomic', 'true');\n    if (swiper.isElement) {\n      liveRegion.setAttribute('slot', 'container-end');\n    }\n  });\n  on('afterInit', () => {\n    if (!swiper.params.a11y.enabled) return;\n    init();\n  });\n  on('slidesLengthChange snapGridLengthChange slidesGridLengthChange', () => {\n    if (!swiper.params.a11y.enabled) return;\n    initSlides();\n  });\n  on('fromEdge toEdge afterInit lock unlock', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updateNavigation();\n  });\n  on('paginationUpdate', () => {\n    if (!swiper.params.a11y.enabled) return;\n    updatePagination();\n  });\n  on('destroy', () => {\n    if (!swiper.params.a11y.enabled) return;\n    destroy();\n  });\n}","import { getWindow } from 'ssr-window';\nexport default function History({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    history: {\n      enabled: false,\n      root: '',\n      replaceState: false,\n      key: 'slides',\n      keepQuery: false\n    }\n  });\n  let initialized = false;\n  let paths = {};\n  const slugify = text => {\n    return text.toString().replace(/\\s+/g, '-').replace(/[^\\w-]+/g, '').replace(/--+/g, '-').replace(/^-+/, '').replace(/-+$/, '');\n  };\n  const getPathValues = urlOverride => {\n    const window = getWindow();\n    let location;\n    if (urlOverride) {\n      location = new URL(urlOverride);\n    } else {\n      location = window.location;\n    }\n    const pathArray = location.pathname.slice(1).split('/').filter(part => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return {\n      key,\n      value\n    };\n  };\n  const setHistory = (key, index) => {\n    const window = getWindow();\n    if (!initialized || !swiper.params.history.enabled) return;\n    let location;\n    if (swiper.params.url) {\n      location = new URL(swiper.params.url);\n    } else {\n      location = window.location;\n    }\n    const slide = swiper.slides[index];\n    let value = slugify(slide.getAttribute('data-history'));\n    if (swiper.params.history.root.length > 0) {\n      let root = swiper.params.history.root;\n      if (root[root.length - 1] === '/') root = root.slice(0, root.length - 1);\n      value = `${root}/${key ? `${key}/` : ''}${value}`;\n    } else if (!location.pathname.includes(key)) {\n      value = `${key ? `${key}/` : ''}${value}`;\n    }\n    if (swiper.params.history.keepQuery) {\n      value += location.search;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({\n        value\n      }, null, value);\n    } else {\n      window.history.pushState({\n        value\n      }, null, value);\n    }\n  };\n  const scrollToSlide = (speed, value, runCallbacks) => {\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides[i];\n        const slideHistory = slugify(slide.getAttribute('data-history'));\n        if (slideHistory === value) {\n          const index = swiper.getSlideIndex(slide);\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  };\n  const setHistoryPopState = () => {\n    paths = getPathValues(swiper.params.url);\n    scrollToSlide(swiper.params.speed, paths.value, false);\n  };\n  const init = () => {\n    const window = getWindow();\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    initialized = true;\n    paths = getPathValues(swiper.params.url);\n    if (!paths.key && !paths.value) {\n      if (!swiper.params.history.replaceState) {\n        window.addEventListener('popstate', setHistoryPopState);\n      }\n      return;\n    }\n    scrollToSlide(0, paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', setHistoryPopState);\n    }\n  };\n  const destroy = () => {\n    const window = getWindow();\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', setHistoryPopState);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.history.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.history.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHistory(swiper.params.history.key, swiper.activeIndex);\n    }\n  });\n}","import { getWindow, getDocument } from 'ssr-window';\nimport { elementChildren } from '../../shared/utils.js';\nexport default function HashNavigation({\n  swiper,\n  extendParams,\n  emit,\n  on\n}) {\n  let initialized = false;\n  const document = getDocument();\n  const window = getWindow();\n  extendParams({\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false\n    }\n  });\n  const onHashChange = () => {\n    emit('hashChange');\n    const newHash = document.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides[swiper.activeIndex].getAttribute('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.getSlideIndex(elementChildren(swiper.slidesEl, `.${swiper.params.slideClass}[data-hash=\"${newHash}\"], swiper-slide[data-hash=\"${newHash}\"]`)[0]);\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  };\n  const setHash = () => {\n    if (!initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, `#${swiper.slides[swiper.activeIndex].getAttribute('data-hash')}` || '');\n      emit('hashSet');\n    } else {\n      const slide = swiper.slides[swiper.activeIndex];\n      const hash = slide.getAttribute('data-hash') || slide.getAttribute('data-history');\n      document.location.hash = hash || '';\n      emit('hashSet');\n    }\n  };\n  const init = () => {\n    if (!swiper.params.hashNavigation.enabled || swiper.params.history && swiper.params.history.enabled) return;\n    initialized = true;\n    const hash = document.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides[i];\n        const slideHash = slide.getAttribute('data-hash') || slide.getAttribute('data-history');\n        if (slideHash === hash) {\n          const index = swiper.getSlideIndex(slide);\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      window.addEventListener('hashchange', onHashChange);\n    }\n  };\n  const destroy = () => {\n    if (swiper.params.hashNavigation.watchState) {\n      window.removeEventListener('hashchange', onHashChange);\n    }\n  };\n  on('init', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      init();\n    }\n  });\n  on('destroy', () => {\n    if (swiper.params.hashNavigation.enabled) {\n      destroy();\n    }\n  });\n  on('transitionEnd _freeModeNoMomentumRelease', () => {\n    if (initialized) {\n      setHash();\n    }\n  });\n  on('slideChange', () => {\n    if (initialized && swiper.params.cssMode) {\n      setHash();\n    }\n  });\n}","/* eslint no-underscore-dangle: \"off\" */\n/* eslint no-use-before-define: \"off\" */\nimport { getDocument } from 'ssr-window';\nexport default function Autoplay({\n  swiper,\n  extendParams,\n  on,\n  emit,\n  params\n}) {\n  swiper.autoplay = {\n    running: false,\n    paused: false,\n    timeLeft: 0\n  };\n  extendParams({\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n      pauseOnMouseEnter: false\n    }\n  });\n  let timeout;\n  let raf;\n  let autoplayDelayTotal = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayDelayCurrent = params && params.autoplay ? params.autoplay.delay : 3000;\n  let autoplayTimeLeft;\n  let autoplayStartTime = new Date().getTime;\n  let wasPaused;\n  let isTouched;\n  let pausedByTouch;\n  let touchStartTimeout;\n  let slideChanged;\n  let pausedByInteraction;\n  function onTransitionEnd(e) {\n    if (!swiper || swiper.destroyed || !swiper.wrapperEl) return;\n    if (e.target !== swiper.wrapperEl) return;\n    swiper.wrapperEl.removeEventListener('transitionend', onTransitionEnd);\n    resume();\n  }\n  const calcTimeLeft = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) {\n      wasPaused = true;\n    } else if (wasPaused) {\n      autoplayDelayCurrent = autoplayTimeLeft;\n      wasPaused = false;\n    }\n    const timeLeft = swiper.autoplay.paused ? autoplayTimeLeft : autoplayStartTime + autoplayDelayCurrent - new Date().getTime();\n    swiper.autoplay.timeLeft = timeLeft;\n    emit('autoplayTimeLeft', timeLeft, timeLeft / autoplayDelayTotal);\n    raf = requestAnimationFrame(() => {\n      calcTimeLeft();\n    });\n  };\n  const getSlideDelay = () => {\n    let activeSlideEl;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      activeSlideEl = swiper.slides.filter(slideEl => slideEl.classList.contains('swiper-slide-active'))[0];\n    } else {\n      activeSlideEl = swiper.slides[swiper.activeIndex];\n    }\n    if (!activeSlideEl) return undefined;\n    const currentSlideDelay = parseInt(activeSlideEl.getAttribute('data-swiper-autoplay'), 10);\n    return currentSlideDelay;\n  };\n  const run = delayForce => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    cancelAnimationFrame(raf);\n    calcTimeLeft();\n    let delay = typeof delayForce === 'undefined' ? swiper.params.autoplay.delay : delayForce;\n    autoplayDelayTotal = swiper.params.autoplay.delay;\n    autoplayDelayCurrent = swiper.params.autoplay.delay;\n    const currentSlideDelay = getSlideDelay();\n    if (!Number.isNaN(currentSlideDelay) && currentSlideDelay > 0 && typeof delayForce === 'undefined') {\n      delay = currentSlideDelay;\n      autoplayDelayTotal = currentSlideDelay;\n      autoplayDelayCurrent = currentSlideDelay;\n    }\n    autoplayTimeLeft = delay;\n    const speed = swiper.params.speed;\n    const proceed = () => {\n      if (!swiper || swiper.destroyed) return;\n      if (swiper.params.autoplay.reverseDirection) {\n        if (!swiper.isBeginning || swiper.params.loop || swiper.params.rewind) {\n          swiper.slidePrev(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, speed, true, true);\n          emit('autoplay');\n        }\n      } else {\n        if (!swiper.isEnd || swiper.params.loop || swiper.params.rewind) {\n          swiper.slideNext(speed, true, true);\n          emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(0, speed, true, true);\n          emit('autoplay');\n        }\n      }\n      if (swiper.params.cssMode) {\n        autoplayStartTime = new Date().getTime();\n        requestAnimationFrame(() => {\n          run();\n        });\n      }\n    };\n    if (delay > 0) {\n      clearTimeout(timeout);\n      timeout = setTimeout(() => {\n        proceed();\n      }, delay);\n    } else {\n      requestAnimationFrame(() => {\n        proceed();\n      });\n    }\n\n    // eslint-disable-next-line\n    return delay;\n  };\n  const start = () => {\n    swiper.autoplay.running = true;\n    run();\n    emit('autoplayStart');\n  };\n  const stop = () => {\n    swiper.autoplay.running = false;\n    clearTimeout(timeout);\n    cancelAnimationFrame(raf);\n    emit('autoplayStop');\n  };\n  const pause = (internal, reset) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    clearTimeout(timeout);\n    if (!internal) {\n      pausedByInteraction = true;\n    }\n    const proceed = () => {\n      emit('autoplayPause');\n      if (swiper.params.autoplay.waitForTransition) {\n        swiper.wrapperEl.addEventListener('transitionend', onTransitionEnd);\n      } else {\n        resume();\n      }\n    };\n    swiper.autoplay.paused = true;\n    if (reset) {\n      if (slideChanged) {\n        autoplayTimeLeft = swiper.params.autoplay.delay;\n      }\n      slideChanged = false;\n      proceed();\n      return;\n    }\n    const delay = autoplayTimeLeft || swiper.params.autoplay.delay;\n    autoplayTimeLeft = delay - (new Date().getTime() - autoplayStartTime);\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop) return;\n    if (autoplayTimeLeft < 0) autoplayTimeLeft = 0;\n    proceed();\n  };\n  const resume = () => {\n    if (swiper.isEnd && autoplayTimeLeft < 0 && !swiper.params.loop || swiper.destroyed || !swiper.autoplay.running) return;\n    autoplayStartTime = new Date().getTime();\n    if (pausedByInteraction) {\n      pausedByInteraction = false;\n      run(autoplayTimeLeft);\n    } else {\n      run();\n    }\n    swiper.autoplay.paused = false;\n    emit('autoplayResume');\n  };\n  const onVisibilityChange = () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    const document = getDocument();\n    if (document.visibilityState === 'hidden') {\n      pausedByInteraction = true;\n      pause(true);\n    }\n    if (document.visibilityState === 'visible') {\n      resume();\n    }\n  };\n  const onPointerEnter = e => {\n    if (e.pointerType !== 'mouse') return;\n    pausedByInteraction = true;\n    pause(true);\n  };\n  const onPointerLeave = e => {\n    if (e.pointerType !== 'mouse') return;\n    if (swiper.autoplay.paused) {\n      resume();\n    }\n  };\n  const attachMouseEvents = () => {\n    if (swiper.params.autoplay.pauseOnMouseEnter) {\n      swiper.el.addEventListener('pointerenter', onPointerEnter);\n      swiper.el.addEventListener('pointerleave', onPointerLeave);\n    }\n  };\n  const detachMouseEvents = () => {\n    swiper.el.removeEventListener('pointerenter', onPointerEnter);\n    swiper.el.removeEventListener('pointerleave', onPointerLeave);\n  };\n  const attachDocumentEvents = () => {\n    const document = getDocument();\n    document.addEventListener('visibilitychange', onVisibilityChange);\n  };\n  const detachDocumentEvents = () => {\n    const document = getDocument();\n    document.removeEventListener('visibilitychange', onVisibilityChange);\n  };\n  on('init', () => {\n    if (swiper.params.autoplay.enabled) {\n      attachMouseEvents();\n      attachDocumentEvents();\n      autoplayStartTime = new Date().getTime();\n      start();\n    }\n  });\n  on('destroy', () => {\n    detachMouseEvents();\n    detachDocumentEvents();\n    if (swiper.autoplay.running) {\n      stop();\n    }\n  });\n  on('beforeTransitionStart', (_s, speed, internal) => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (internal || !swiper.params.autoplay.disableOnInteraction) {\n      pause(true, true);\n    } else {\n      stop();\n    }\n  });\n  on('sliderFirstMove', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    if (swiper.params.autoplay.disableOnInteraction) {\n      stop();\n      return;\n    }\n    isTouched = true;\n    pausedByTouch = false;\n    pausedByInteraction = false;\n    touchStartTimeout = setTimeout(() => {\n      pausedByInteraction = true;\n      pausedByTouch = true;\n      pause(true);\n    }, 200);\n  });\n  on('touchEnd', () => {\n    if (swiper.destroyed || !swiper.autoplay.running || !isTouched) return;\n    clearTimeout(touchStartTimeout);\n    clearTimeout(timeout);\n    if (swiper.params.autoplay.disableOnInteraction) {\n      pausedByTouch = false;\n      isTouched = false;\n      return;\n    }\n    if (pausedByTouch && swiper.params.cssMode) resume();\n    pausedByTouch = false;\n    isTouched = false;\n  });\n  on('slideChange', () => {\n    if (swiper.destroyed || !swiper.autoplay.running) return;\n    slideChanged = true;\n  });\n  Object.assign(swiper.autoplay, {\n    start,\n    stop,\n    pause,\n    resume\n  });\n}","import { getDocument } from 'ssr-window';\nimport { elementChildren, isObject } from '../../shared/utils.js';\nexport default function Thumb({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && clickedSlide.classList.contains(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt(thumbsSwiper.clickedSlide.getAttribute('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      swiper.slideToLoop(slideToIndex);\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  }\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper.update();\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n    swiper.thumbs.swiper.el.classList.add(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView;\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.forEach(slideEl => slideEl.classList.remove(thumbActiveClass));\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        elementChildren(thumbsSwiper.slidesEl, `[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).forEach(slideEl => {\n          slideEl.classList.add(thumbActiveClass);\n        });\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        if (thumbsSwiper.slides[swiper.realIndex + i]) {\n          thumbsSwiper.slides[swiper.realIndex + i].classList.add(thumbActiveClass);\n        }\n      }\n    }\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      const currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n      if (thumbsSwiper.params.loop) {\n        const newThumbsSlide = thumbsSwiper.slides.filter(slideEl => slideEl.getAttribute('data-swiper-slide-index') === `${swiper.realIndex}`)[0];\n        newThumbsIndex = thumbsSwiper.slides.indexOf(newThumbsSlide);\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) {\n          // newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    if (typeof thumbs.swiper === 'string' || thumbs.swiper instanceof HTMLElement) {\n      const document = getDocument();\n      const getThumbsElementAndInit = () => {\n        const thumbsElement = typeof thumbs.swiper === 'string' ? document.querySelector(thumbs.swiper) : thumbs.swiper;\n        if (thumbsElement && thumbsElement.swiper) {\n          thumbs.swiper = thumbsElement.swiper;\n          init();\n          update(true);\n        } else if (thumbsElement) {\n          const onThumbsSwiper = e => {\n            thumbs.swiper = e.detail[0];\n            thumbsElement.removeEventListener('init', onThumbsSwiper);\n            init();\n            update(true);\n            thumbs.swiper.update();\n            swiper.update();\n          };\n          thumbsElement.addEventListener('init', onThumbsSwiper);\n        }\n        return thumbsElement;\n      };\n      const watchForThumbsToAppear = () => {\n        if (swiper.destroyed) return;\n        const thumbsElement = getThumbsElementAndInit();\n        if (!thumbsElement) {\n          requestAnimationFrame(watchForThumbsToAppear);\n        }\n      };\n      requestAnimationFrame(watchForThumbsToAppear);\n    } else {\n      init();\n      update(true);\n    }\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}","import { elementTransitionEnd, now } from '../../shared/utils.js';\nexport default function freeMode({\n  swiper,\n  extendParams,\n  emit,\n  once\n}) {\n  extendParams({\n    freeMode: {\n      enabled: false,\n      momentum: true,\n      momentumRatio: 1,\n      momentumBounce: true,\n      momentumBounceRatio: 1,\n      momentumVelocityRatio: 1,\n      sticky: false,\n      minimumVelocity: 0.02\n    }\n  });\n  function onTouchStart() {\n    const translate = swiper.getTranslate();\n    swiper.setTranslate(translate);\n    swiper.setTransition(0);\n    swiper.touchEventsData.velocities.length = 0;\n    swiper.freeMode.onTouchEnd({\n      currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n    });\n  }\n  function onTouchMove() {\n    const {\n      touchEventsData: data,\n      touches\n    } = swiper;\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now()\n    });\n  }\n  function onTouchEnd({\n    currentPos\n  }) {\n    const {\n      params,\n      wrapperEl,\n      rtlTranslate: rtl,\n      snapGrid,\n      touchEventsData: data\n    } = swiper;\n    // Time diff\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n    if (params.freeMode.momentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeMode.momentumVelocityRatio;\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeMode.momentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeMode.sticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeMode.sticky) {\n          // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      }\n      if (params.freeMode.momentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        elementTransitionEnd(wrapperEl, () => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            elementTransitionEnd(wrapperEl, () => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          elementTransitionEnd(wrapperEl, () => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeMode.sticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      emit('_freeModeNoMomentumRelease');\n    }\n    if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n  }\n  Object.assign(swiper, {\n    freeMode: {\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd\n    }\n  });\n}","export default function Grid({\n  swiper,\n  extendParams\n}) {\n  extendParams({\n    grid: {\n      rows: 1,\n      fill: 'column'\n    }\n  });\n  let slidesNumberEvenToRows;\n  let slidesPerRow;\n  let numFullColumns;\n  const initSlides = slidesLength => {\n    const {\n      slidesPerView\n    } = swiper.params;\n    const {\n      rows,\n      fill\n    } = swiper.params.grid;\n    slidesPerRow = slidesNumberEvenToRows / rows;\n    numFullColumns = Math.floor(slidesLength / rows);\n    if (Math.floor(slidesLength / rows) === slidesLength / rows) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / rows) * rows;\n    }\n    if (slidesPerView !== 'auto' && fill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, slidesPerView * rows);\n    }\n  };\n  const updateSlide = (i, slide, slidesLength, getDirectionLabel) => {\n    const {\n      slidesPerGroup,\n      spaceBetween\n    } = swiper.params;\n    const {\n      rows,\n      fill\n    } = swiper.params.grid;\n    // Set slides order\n    let newSlideOrderIndex;\n    let column;\n    let row;\n    if (fill === 'row' && slidesPerGroup > 1) {\n      const groupIndex = Math.floor(i / (slidesPerGroup * rows));\n      const slideIndexInGroup = i - rows * slidesPerGroup * groupIndex;\n      const columnsInGroup = groupIndex === 0 ? slidesPerGroup : Math.min(Math.ceil((slidesLength - groupIndex * rows * slidesPerGroup) / rows), slidesPerGroup);\n      row = Math.floor(slideIndexInGroup / columnsInGroup);\n      column = slideIndexInGroup - row * columnsInGroup + groupIndex * slidesPerGroup;\n      newSlideOrderIndex = column + row * slidesNumberEvenToRows / rows;\n      slide.style.order = newSlideOrderIndex;\n    } else if (fill === 'column') {\n      column = Math.floor(i / rows);\n      row = i - column * rows;\n      if (column > numFullColumns || column === numFullColumns && row === rows - 1) {\n        row += 1;\n        if (row >= rows) {\n          row = 0;\n          column += 1;\n        }\n      }\n    } else {\n      row = Math.floor(i / slidesPerRow);\n      column = i - row * slidesPerRow;\n    }\n    slide.style[getDirectionLabel('margin-top')] = row !== 0 ? spaceBetween && `${spaceBetween}px` : '';\n  };\n  const updateWrapperSize = (slideSize, snapGrid, getDirectionLabel) => {\n    const {\n      spaceBetween,\n      centeredSlides,\n      roundLengths\n    } = swiper.params;\n    const {\n      rows\n    } = swiper.params.grid;\n    swiper.virtualSize = (slideSize + spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / rows) - spaceBetween;\n    swiper.wrapperEl.style[getDirectionLabel('width')] = `${swiper.virtualSize + spaceBetween}px`;\n    if (centeredSlides) {\n      const newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid.splice(0, snapGrid.length);\n      snapGrid.push(...newSlidesGrid);\n    }\n  };\n  swiper.grid = {\n    initSlides,\n    updateSlide,\n    updateWrapperSize\n  };\n}","import appendSlide from './methods/appendSlide.js';\nimport prependSlide from './methods/prependSlide.js';\nimport addSlide from './methods/addSlide.js';\nimport removeSlide from './methods/removeSlide.js';\nimport removeAllSlides from './methods/removeAllSlides.js';\nexport default function Manipulation({\n  swiper\n}) {\n  Object.assign(swiper, {\n    appendSlide: appendSlide.bind(swiper),\n    prependSlide: prependSlide.bind(swiper),\n    addSlide: addSlide.bind(swiper),\n    removeSlide: removeSlide.bind(swiper),\n    removeAllSlides: removeAllSlides.bind(swiper)\n  });\n}","export default function appendSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  const appendElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.append(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.append(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) appendElement(slides[i]);\n    }\n  } else {\n    appendElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n}","export default function prependSlide(slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  const prependElement = slideEl => {\n    if (typeof slideEl === 'string') {\n      const tempDOM = document.createElement('div');\n      tempDOM.innerHTML = slideEl;\n      slidesEl.prepend(tempDOM.children[0]);\n      tempDOM.innerHTML = '';\n    } else {\n      slidesEl.prepend(slideEl);\n    }\n  };\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) prependElement(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    prependElement(slides);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}","export default function addSlide(index, slides) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex,\n    slidesEl\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.recalcSlides();\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides[i];\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) slidesEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    slidesEl.append(slides);\n  }\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    slidesEl.append(slidesBuffer[i]);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeSlide(slidesIndexes) {\n  const swiper = this;\n  const {\n    params,\n    activeIndex\n  } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides[indexToRemove].remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n  swiper.recalcSlides();\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!params.observer || swiper.isElement) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}","export default function removeAllSlides() {\n  const swiper = this;\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}","import effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFade({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    fadeEffect: {\n      crossFade: false\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides\n    } = swiper;\n    const params = swiper.params.fadeEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = swiper.slides[i];\n      const offset = slideEl.swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade ? Math.max(1 - Math.abs(slideEl.progress), 0) : 1 + Math.min(Math.max(slideEl.progress, -1), 0);\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.opacity = slideOpacity;\n      targetEl.style.transform = `translate3d(${tx}px, ${ty}px, 0px)`;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'fade',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","export default function effectInit(params) {\n  const {\n    effect,\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    overwriteParams,\n    perspective,\n    recreateShadows,\n    getEffectParams\n  } = params;\n  on('beforeInit', () => {\n    if (swiper.params.effect !== effect) return;\n    swiper.classNames.push(`${swiper.params.containerModifierClass}${effect}`);\n    if (perspective && perspective()) {\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n    }\n    const overwriteParamsResult = overwriteParams ? overwriteParams() : {};\n    Object.assign(swiper.params, overwriteParamsResult);\n    Object.assign(swiper.originalParams, overwriteParamsResult);\n  });\n  on('setTranslate', () => {\n    if (swiper.params.effect !== effect) return;\n    setTranslate();\n  });\n  on('setTransition', (_s, duration) => {\n    if (swiper.params.effect !== effect) return;\n    setTransition(duration);\n  });\n  on('transitionEnd', () => {\n    if (swiper.params.effect !== effect) return;\n    if (recreateShadows) {\n      if (!getEffectParams || !getEffectParams().slideShadows) return;\n      // remove shadows\n      swiper.slides.forEach(slideEl => {\n        slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => shadowEl.remove());\n      });\n      // create new one\n      recreateShadows();\n    }\n  });\n  let requireUpdateOnVirtual;\n  on('virtualUpdate', () => {\n    if (swiper.params.effect !== effect) return;\n    if (!swiper.slides.length) {\n      requireUpdateOnVirtual = true;\n    }\n    requestAnimationFrame(() => {\n      if (requireUpdateOnVirtual && swiper.slides && swiper.slides.length) {\n        setTranslate();\n        requireUpdateOnVirtual = false;\n      }\n    });\n  });\n}","import { getSlideTransformEl } from './utils.js';\nexport default function effectTarget(effectParams, slideEl) {\n  const transformEl = getSlideTransformEl(slideEl);\n  if (transformEl !== slideEl) {\n    transformEl.style.backfaceVisibility = 'hidden';\n    transformEl.style['-webkit-backface-visibility'] = 'hidden';\n  }\n  return transformEl;\n}","import { elementTransitionEnd } from './utils.js';\nexport default function effectVirtualTransitionEnd({\n  swiper,\n  duration,\n  transformElements,\n  allSlides\n}) {\n  const {\n    activeIndex\n  } = swiper;\n  const getSlide = el => {\n    if (!el.parentElement) {\n      // assume shadow root\n      const slide = swiper.slides.filter(slideEl => slideEl.shadowEl && slideEl.shadowEl === el.parentNode)[0];\n      return slide;\n    }\n    return el.parentElement;\n  };\n  if (swiper.params.virtualTranslate && duration !== 0) {\n    let eventTriggered = false;\n    let transitionEndTarget;\n    if (allSlides) {\n      transitionEndTarget = transformElements;\n    } else {\n      transitionEndTarget = transformElements.filter(transformEl => {\n        const el = transformEl.classList.contains('swiper-slide-transform') ? getSlide(transformEl) : transformEl;\n        return swiper.getSlideIndex(el) === activeIndex;\n      });\n    }\n    transitionEndTarget.forEach(el => {\n      elementTransitionEnd(el, () => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const evt = new window.CustomEvent('transitionend', {\n          bubbles: true,\n          cancelable: true\n        });\n        swiper.wrapperEl.dispatchEvent(evt);\n      });\n    });\n  }\n}","import effectInit from '../../shared/effect-init.js';\nimport { createElement } from '../../shared/utils.js';\nexport default function EffectCube({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94\n    }\n  });\n  const createSlideShadows = (slideEl, progress, isHorizontal) => {\n    let shadowBefore = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}`);\n      slideEl.append(shadowBefore);\n    }\n    if (!shadowAfter) {\n      shadowAfter = createElement('div', `swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}`);\n      slideEl.append(shadowAfter);\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // create new ones\n    const isHorizontal = swiper.isHorizontal();\n    swiper.slides.forEach(slideEl => {\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      createSlideShadows(slideEl, progress, isHorizontal);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      el,\n      wrapperEl,\n      slides,\n      width: swiperWidth,\n      height: swiperHeight,\n      rtlTranslate: rtl,\n      size: swiperSize,\n      browser\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl = swiper.slidesEl.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          swiper.slidesEl.append(cubeShadowEl);\n        }\n        cubeShadowEl.style.height = `${swiperWidth}px`;\n      } else {\n        cubeShadowEl = el.querySelector('.swiper-cube-shadow');\n        if (!cubeShadowEl) {\n          cubeShadowEl = createElement('div', 'swiper-cube-shadow');\n          el.append(cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt(slideEl.getAttribute('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + round * 4 * swiperSize;\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = 3 * swiperSize + swiperSize * 4 * round;\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = slideIndex * 90 + progress * 90;\n        if (rtl) wrapperRotate = -slideIndex * 90 - progress * 90;\n      }\n      slideEl.style.transform = transform;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, isHorizontal);\n      }\n    }\n    wrapperEl.style.transformOrigin = `50% 50% -${swiperSize / 2}px`;\n    wrapperEl.style['-webkit-transform-origin'] = `50% 50% -${swiperSize / 2}px`;\n    if (params.shadow) {\n      if (isHorizontal) {\n        cubeShadowEl.style.transform = `translate3d(0px, ${swiperWidth / 2 + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`;\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - Math.floor(Math.abs(wrapperRotate) / 90) * 90;\n        const multiplier = 1.5 - (Math.sin(shadowAngle * 2 * Math.PI / 360) / 2 + Math.cos(shadowAngle * 2 * Math.PI / 360) / 2);\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        cubeShadowEl.style.transform = `scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${swiperHeight / 2 + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`;\n      }\n    }\n    const zFactor = (browser.isSafari || browser.isWebView) && browser.needPerspectiveFix ? -swiperSize / 2 : 0;\n    wrapperEl.style.transform = `translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`;\n    wrapperEl.style.setProperty('--swiper-cube-translate-z', `${zFactor}px`);\n  };\n  const setTransition = duration => {\n    const {\n      el,\n      slides\n    } = swiper;\n    slides.forEach(slideEl => {\n      slideEl.style.transitionDuration = `${duration}ms`;\n      slideEl.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(subEl => {\n        subEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      const shadowEl = el.querySelector('.swiper-cube-shadow');\n      if (shadowEl) shadowEl.style.transitionDuration = `${duration}ms`;\n    }\n  };\n  effectInit({\n    effect: 'cube',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.cubeEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      resistanceRatio: 0,\n      spaceBetween: 0,\n      centeredSlides: false,\n      virtualTranslate: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectFlip({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true\n    }\n  });\n  const createSlideShadows = (slideEl, progress, params) => {\n    let shadowBefore = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n    let shadowAfter = swiper.isHorizontal() ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n    if (!shadowBefore) {\n      shadowBefore = createShadow(params, slideEl, swiper.isHorizontal() ? 'left' : 'top');\n    }\n    if (!shadowAfter) {\n      shadowAfter = createShadow(params, slideEl, swiper.isHorizontal() ? 'right' : 'bottom');\n    }\n    if (shadowBefore) shadowBefore.style.opacity = Math.max(-progress, 0);\n    if (shadowAfter) shadowAfter.style.opacity = Math.max(progress, 0);\n  };\n  const recreateShadows = () => {\n    // Set shadows\n    const params = swiper.params.flipEffect;\n    swiper.slides.forEach(slideEl => {\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      createSlideShadows(slideEl, progress, params);\n    });\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      rtlTranslate: rtl\n    } = swiper;\n    const params = swiper.params.flipEffect;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      let progress = slideEl.progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min(slideEl.progress, 1), -1);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n      if (params.slideShadows) {\n        createSlideShadows(slideEl, progress, params);\n      }\n      const transform = `translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'flip',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    recreateShadows,\n    getEffectParams: () => swiper.params.flipEffect,\n    perspective: () => true,\n    overwriteParams: () => ({\n      slidesPerView: 1,\n      slidesPerGroup: 1,\n      watchSlidesProgress: true,\n      spaceBetween: 0,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import { createElement, getSlideTransformEl } from './utils.js';\nexport default function createShadow(params, slideEl, side) {\n  const shadowClass = `swiper-slide-shadow${side ? `-${side}` : ''}`;\n  const shadowContainer = getSlideTransformEl(slideEl);\n  let shadowEl = shadowContainer.querySelector(`.${shadowClass}`);\n  if (!shadowEl) {\n    shadowEl = createElement('div', `swiper-slide-shadow${side ? `-${side}` : ''}`);\n    shadowContainer.append(shadowEl);\n  }\n  return shadowEl;\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCoverflow({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      scale: 1,\n      modifier: 1,\n      slideShadows: true\n    }\n  });\n  const setTranslate = () => {\n    const {\n      width: swiperWidth,\n      height: swiperHeight,\n      slides,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + swiperWidth / 2 : -transform + swiperHeight / 2;\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const slideEl = slides[i];\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = slideEl.swiperSlideOffset;\n      const centerOffset = (center - slideOffset - slideSize / 2) / slideSize;\n      const offsetMultiplier = typeof params.modifier === 'function' ? params.modifier(centerOffset) : centerOffset * params.modifier;\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n      let stretch = params.stretch;\n      // Allow percentage to make a relative stretch for responsive sliders\n      if (typeof stretch === 'string' && stretch.indexOf('%') !== -1) {\n        stretch = parseFloat(params.stretch) / 100 * slideSize;\n      }\n      let translateY = isHorizontal ? 0 : stretch * offsetMultiplier;\n      let translateX = isHorizontal ? stretch * offsetMultiplier : 0;\n      let scale = 1 - (1 - params.scale) * Math.abs(offsetMultiplier);\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n      if (Math.abs(scale) < 0.001) scale = 0;\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg) scale(${scale})`;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = slideTransform;\n      slideEl.style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBeforeEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-left') : slideEl.querySelector('.swiper-slide-shadow-top');\n        let shadowAfterEl = isHorizontal ? slideEl.querySelector('.swiper-slide-shadow-right') : slideEl.querySelector('.swiper-slide-shadow-bottom');\n        if (!shadowBeforeEl) {\n          shadowBeforeEl = createShadow(params, slideEl, isHorizontal ? 'left' : 'top');\n        }\n        if (!shadowAfterEl) {\n          shadowAfterEl = createShadow(params, slideEl, isHorizontal ? 'right' : 'bottom');\n        }\n        if (shadowBeforeEl) shadowBeforeEl.style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if (shadowAfterEl) shadowAfterEl.style.opacity = -offsetMultiplier > 0 ? -offsetMultiplier : 0;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n  };\n  effectInit({\n    effect: 'coverflow',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCreative({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    creativeEffect: {\n      limitProgress: 1,\n      shadowPerProgress: false,\n      progressMultiplier: 1,\n      perspective: true,\n      prev: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      },\n      next: {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        opacity: 1,\n        scale: 1\n      }\n    }\n  });\n  const getTranslateValue = value => {\n    if (typeof value === 'string') return value;\n    return `${value}px`;\n  };\n  const setTranslate = () => {\n    const {\n      slides,\n      wrapperEl,\n      slidesSizesGrid\n    } = swiper;\n    const params = swiper.params.creativeEffect;\n    const {\n      progressMultiplier: multiplier\n    } = params;\n    const isCenteredSlides = swiper.params.centeredSlides;\n    if (isCenteredSlides) {\n      const margin = slidesSizesGrid[0] / 2 - swiper.params.slidesOffsetBefore || 0;\n      wrapperEl.style.transform = `translateX(calc(50% - ${margin}px))`;\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideEl.progress, -params.limitProgress), params.limitProgress);\n      let originalProgress = progress;\n      if (!isCenteredSlides) {\n        originalProgress = Math.min(Math.max(slideEl.originalProgress, -params.limitProgress), params.limitProgress);\n      }\n      const offset = slideEl.swiperSlideOffset;\n      const t = [swiper.params.cssMode ? -offset - swiper.translate : -offset, 0, 0];\n      const r = [0, 0, 0];\n      let custom = false;\n      if (!swiper.isHorizontal()) {\n        t[1] = t[0];\n        t[0] = 0;\n      }\n      let data = {\n        translate: [0, 0, 0],\n        rotate: [0, 0, 0],\n        scale: 1,\n        opacity: 1\n      };\n      if (progress < 0) {\n        data = params.next;\n        custom = true;\n      } else if (progress > 0) {\n        data = params.prev;\n        custom = true;\n      }\n      // set translate\n      t.forEach((value, index) => {\n        t[index] = `calc(${value}px + (${getTranslateValue(data.translate[index])} * ${Math.abs(progress * multiplier)}))`;\n      });\n      // set rotates\n      r.forEach((value, index) => {\n        r[index] = data.rotate[index] * Math.abs(progress * multiplier);\n      });\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const translateString = t.join(', ');\n      const rotateString = `rotateX(${r[0]}deg) rotateY(${r[1]}deg) rotateZ(${r[2]}deg)`;\n      const scaleString = originalProgress < 0 ? `scale(${1 + (1 - data.scale) * originalProgress * multiplier})` : `scale(${1 - (1 - data.scale) * originalProgress * multiplier})`;\n      const opacityString = originalProgress < 0 ? 1 + (1 - data.opacity) * originalProgress * multiplier : 1 - (1 - data.opacity) * originalProgress * multiplier;\n      const transform = `translate3d(${translateString}) ${rotateString} ${scaleString}`;\n\n      // Set shadows\n      if (custom && data.shadow || !custom) {\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl && data.shadow) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) {\n          const shadowOpacity = params.shadowPerProgress ? progress * (1 / params.limitProgress) : progress;\n          shadowEl.style.opacity = Math.min(Math.max(Math.abs(shadowOpacity), 0), 1);\n        }\n      }\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n      targetEl.style.opacity = opacityString;\n      if (data.origin) {\n        targetEl.style.transformOrigin = data.origin;\n      }\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements,\n      allSlides: true\n    });\n  };\n  effectInit({\n    effect: 'creative',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => swiper.params.creativeEffect.perspective,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","import createShadow from '../../shared/create-shadow.js';\nimport effectInit from '../../shared/effect-init.js';\nimport effectTarget from '../../shared/effect-target.js';\nimport effectVirtualTransitionEnd from '../../shared/effect-virtual-transition-end.js';\nimport { getSlideTransformEl } from '../../shared/utils.js';\nexport default function EffectCards({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    cardsEffect: {\n      slideShadows: true,\n      rotate: true,\n      perSlideRotate: 2,\n      perSlideOffset: 8\n    }\n  });\n  const setTranslate = () => {\n    const {\n      slides,\n      activeIndex\n    } = swiper;\n    const params = swiper.params.cardsEffect;\n    const {\n      startTranslate,\n      isTouched\n    } = swiper.touchEventsData;\n    const currentTranslate = swiper.translate;\n    for (let i = 0; i < slides.length; i += 1) {\n      const slideEl = slides[i];\n      const slideProgress = slideEl.progress;\n      const progress = Math.min(Math.max(slideProgress, -4), 4);\n      let offset = slideEl.swiperSlideOffset;\n      if (swiper.params.centeredSlides && !swiper.params.cssMode) {\n        swiper.wrapperEl.style.transform = `translateX(${swiper.minTranslate()}px)`;\n      }\n      if (swiper.params.centeredSlides && swiper.params.cssMode) {\n        offset -= slides[0].swiperSlideOffset;\n      }\n      let tX = swiper.params.cssMode ? -offset - swiper.translate : -offset;\n      let tY = 0;\n      const tZ = -100 * Math.abs(progress);\n      let scale = 1;\n      let rotate = -params.perSlideRotate * progress;\n      let tXAdd = params.perSlideOffset - Math.abs(progress) * 0.75;\n      const slideIndex = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.from + i : i;\n      const isSwipeToNext = (slideIndex === activeIndex || slideIndex === activeIndex - 1) && progress > 0 && progress < 1 && (isTouched || swiper.params.cssMode) && currentTranslate < startTranslate;\n      const isSwipeToPrev = (slideIndex === activeIndex || slideIndex === activeIndex + 1) && progress < 0 && progress > -1 && (isTouched || swiper.params.cssMode) && currentTranslate > startTranslate;\n      if (isSwipeToNext || isSwipeToPrev) {\n        const subProgress = (1 - Math.abs((Math.abs(progress) - 0.5) / 0.5)) ** 0.5;\n        rotate += -28 * progress * subProgress;\n        scale += -0.5 * subProgress;\n        tXAdd += 96 * subProgress;\n        tY = `${-25 * subProgress * Math.abs(progress)}%`;\n      }\n      if (progress < 0) {\n        // next\n        tX = `calc(${tX}px + (${tXAdd * Math.abs(progress)}%))`;\n      } else if (progress > 0) {\n        // prev\n        tX = `calc(${tX}px + (-${tXAdd * Math.abs(progress)}%))`;\n      } else {\n        tX = `${tX}px`;\n      }\n      if (!swiper.isHorizontal()) {\n        const prevY = tY;\n        tY = tX;\n        tX = prevY;\n      }\n      const scaleString = progress < 0 ? `${1 + (1 - scale) * progress}` : `${1 - (1 - scale) * progress}`;\n      const transform = `\n        translate3d(${tX}, ${tY}, ${tZ}px)\n        rotateZ(${params.rotate ? rotate : 0}deg)\n        scale(${scaleString})\n      `;\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowEl = slideEl.querySelector('.swiper-slide-shadow');\n        if (!shadowEl) {\n          shadowEl = createShadow(params, slideEl);\n        }\n        if (shadowEl) shadowEl.style.opacity = Math.min(Math.max((Math.abs(progress) - 0.5) / 0.5, 0), 1);\n      }\n      slideEl.style.zIndex = -Math.abs(Math.round(slideProgress)) + slides.length;\n      const targetEl = effectTarget(params, slideEl);\n      targetEl.style.transform = transform;\n    }\n  };\n  const setTransition = duration => {\n    const transformElements = swiper.slides.map(slideEl => getSlideTransformEl(slideEl));\n    transformElements.forEach(el => {\n      el.style.transitionDuration = `${duration}ms`;\n      el.querySelectorAll('.swiper-slide-shadow').forEach(shadowEl => {\n        shadowEl.style.transitionDuration = `${duration}ms`;\n      });\n    });\n    effectVirtualTransitionEnd({\n      swiper,\n      duration,\n      transformElements\n    });\n  };\n  effectInit({\n    effect: 'cards',\n    swiper,\n    on,\n    setTranslate,\n    setTransition,\n    perspective: () => true,\n    overwriteParams: () => ({\n      watchSlidesProgress: true,\n      virtualTranslate: !swiper.params.cssMode\n    })\n  });\n}","const toggleArray = document.querySelectorAll('.switch__input');\nconst currentTheme = localStorage.getItem('theme');\n\nfor (let toggleEl of toggleArray) {\n  if (currentTheme === 'dark-theme') {\n    toggleEl.checked = true;\n    document.body.classList.add('dark');\n  }\n\n  function switchTheme(e) {\n    if (e.target.checked) {\n      document.body.classList.add('dark');\n      localStorage.setItem('theme', 'dark-theme');\n      for (let el of toggleArray) {\n        el.checked = true;\n      }\n    } else {\n      document.body.classList.remove('dark');\n      localStorage.removeItem('theme');\n      for (let el of toggleArray) {\n        el.checked = false;\n      }\n    }\n  }\n\n  toggleEl.addEventListener('change', switchTheme);\n}\n","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"cIs3N\\\":\\\"index.fd8c2bdc.js\\\",\\\"5UbS1\\\":\\\"index.fc79d244.css\\\",\\\"6IS9A\\\":\\\"save-the-children@1x.afa9e55b.png\\\",\\\"6gXfa\\\":\\\"save-the-children@2x.688b6dc7.png\\\",\\\"gvTuF\\\":\\\"project-hope@1x.a334484f.png\\\",\\\"3R9K2\\\":\\\"project-hope@2x.5ac714fa.png\\\",\\\"4cd8Z\\\":\\\"united@1x.f6acf95c.png\\\",\\\"ay3B9\\\":\\\"united@2x.f7c42ea4.png\\\",\\\"iLbAS\\\":\\\"medical-corp@1x.38e7f653.png\\\",\\\"hcyNA\\\":\\\"medical-corp@2x.2c438457.png\\\",\\\"f3wf9\\\":\\\"msf@1x.d33f22ac.png\\\",\\\"b2FOw\\\":\\\"msf@2x.89950815.png\\\",\\\"5DDrP\\\":\\\"razom@1x.61fc7ccd.png\\\",\\\"2Krz4\\\":\\\"razom@2x.49347143.png\\\",\\\"Rhm4P\\\":\\\"against-hunger@1x.73beaec7.png\\\",\\\"ffy0U\\\":\\\"against-hunger@2x.b350b402.png\\\",\\\"fBtqB\\\":\\\"world-vision@1x.e5a63e9b.png\\\",\\\"deDmU\\\":\\\"world-vision@2x.39ac4395.png\\\",\\\"gM9A7\\\":\\\"sprytula@1x.69cae55e.png\\\",\\\"55zs5\\\":\\\"sprytula@2x.b3afcdef.png\\\"}\"));"],"names":["$0380ce8f1f064ccc$export$6503ec6e8aabbaf","$0380ce8f1f064ccc$export$f7ad0328861e2f03","$0380ce8f1f064ccc$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","mobileMenu","openMenuBtn","closeMenuBtn","closeMenuLink","toggleMenu","document","querySelector","querySelectorAll","isMenuOpen","getAttribute","setAttribute","classList","toggle","forEach","item","addEventListener","window","matchMedia","e","matches","remove","a","href","location","pathname","className","defineProperty","module","exports","value","default","instance","Constructor","TypeError","$74e7f8130373505f$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","arr","$111a013c31e2261e$var$_arrayWithHoles","$111a013c31e2261e$var$_iterableToArray","$111a013c31e2261e$var$_unsupportedIterableToArray","$111a013c31e2261e$var$_nonIterableRest","$111a013c31e2261e$var$_interopRequireDefault","parcelRequire","obj","__esModule","Array","isArray","iter","Symbol","iterator","from","o","minLen","$7a2c4c4c44c69707$var$_arrayLikeToArray","n","toString","call","slice","constructor","name","test","len","arr2","$6195f07b5409ba15$var$_arrayWithoutHoles","$6195f07b5409ba15$var$_iterableToArray","$6195f07b5409ba15$var$_unsupportedIterableToArray","$6195f07b5409ba15$var$_nonIterableSpread","$6195f07b5409ba15$var$_interopRequireDefault","$f215c72f040a88cf$var$_arrayLikeToArray","$cxhhJ","$7500a55abca3c3a3$var$charityEl","$7500a55abca3c3a3$var$charityItemsHtml","charityItems","map","param","index","url","img","imgRetina","title","concat","padStart","join","innerHTML","$7500a55abca3c3a3$var$swiper","$2pSj8","direction","loop","spaceBetween","slidesPerView","breakpoints","activeIndex","loopedSlides","slides","slideToLoop","slideNext","$aQ05D","$9205f98482de6398$export$9a67ddf8d7931ed8","$parcel$interopDefault","$io44I","$7akSc","$3vS9q","$aDRIZ","$j0NPm","$8JDHI","$bBI8f","$9VOFo","$d77gJ","$l3IJe","$72saa","$guSMN","$1vMrk","$az5FB","$guWvk","$1ZGX2","$8fk6D","getBundleURL","resolve","$7dd1ddf6834435ca$export$bdfd709ae4826697","$7dd1ddf6834435ca$var$bundleURL","$7dd1ddf6834435ca$var$getBaseURL","replace","err","stack","match","$7dd1ddf6834435ca$var$getBundleURL","$8MBJY","$1c280aeb2839a22d$var$prototypes","eventsEmitter","$3lgo1","update","$42aG2","translate","$lUFJw","transition","$59lEw","slide","$itDrZ","$aSak5","grabCursor","$61axM","events","$lrPYL","$lWyhG","checkOverflow","$h5TWE","classes","$9Vwwo","$1c280aeb2839a22d$var$extendedDefaults","$1c280aeb2839a22d$var$Swiper","Swiper","_len","arguments","args","_key","_modules","el","params","ref","$1EjTE","extend","$58sFY","getDocument","swipers","containerEl","newParams","push","swiper","this","__swiper__","support","$ledMJ","getSupport","device","$4rC3V","getDevice","userAgent","browser","$lhE85","getBrowser","eventsListeners","eventsAnyListeners","modules","$8nrFW","__modules__","apply","allModulesParams","mod","extendParams","$6gDqh","on","bind","once","off","emit","swiperParams","$959nv","originalParams","passedParams","eventName","onAny","assign","enabled","classNames","slidesGrid","snapGrid","slidesSizesGrid","isHorizontal","isVertical","realIndex","isBeginning","isEnd","previousTranslate","progress","velocity","animating","cssOverflowAdjustment","Math","trunc","allowSlideNext","allowSlidePrev","touchEventsData","isTouched","undefined","isMoved","allowTouchCallbacks","touchStartTime","isScrolling","currentTranslate","startTranslate","allowThresholdMove","focusableElements","lastClickTime","clickTimeout","velocities","allowMomentumBounce","startMoving","evCache","allowClick","allowTouchMove","touches","startX","startY","currentX","currentY","diff","imagesToLoad","imagesLoaded","init","slideEl","slidesEl","elementChildren","slideClass","firstSlideIndex","elementIndex","getSlideIndex","filter","setGrabCursor","unsetGrabCursor","speed","min","max","minTranslate","current","maxTranslate","translateTo","updateActiveIndex","updateSlidesClasses","_emitClasses","cls","split","indexOf","containerModifierClass","destroyed","updates","getSlideClasses","view","exact","swiperSize","size","spv","centeredSlides","breakLoop","slideSize","swiperSlideSize","i1","i2","slideInView","i3","slideInView1","setBreakpoint","imageEl","complete","$7eaCI","processLazyPreloader","updateSize","updateSlides","updateProgress","freeMode","setTranslate","autoHeight","updateAutoHeight","slideTo","watchOverflow","translateValue","rtlTranslate","newTranslate","newDirection","needUpdate","currentDirection","add","emitContainerClasses","style","width","height","rtl","dir","element","mounted","shadowEl","isElement","getWrapperSelector","wrapperClass","trim","wrapperEl","shadowRoot","createElements","createElement","append","toLowerCase","elementStyle","wrongRTL","initialized","mount","addClasses","virtual","initialSlide","slidesBefore","runCallbacksOnInit","loopCreate","attachEvents","preload","deleteInstance","cleanStyles","detachEvents","loopDestroy","removeClasses","removeAttribute","slideVisibleClass","slideActiveClass","slideNextClass","slidePrevClass","deleteProps","newDefaults","m","installModule","prototypeGroup","protoMethod","use","$hoK65","$5NIfu","$1c280aeb2839a22d$export$2e2bcd8739ae039","$3bd3f193ccd5630c$var$isObject","$3bd3f193ccd5630c$export$8b58be045bf06082","src","$3bd3f193ccd5630c$export$3fdcb9b4d81368d8","body","removeEventListener","activeElement","blur","nodeName","getElementById","createEvent","initEvent","children","childNodes","getElementsByTagName","createElementNS","importNode","hash","host","hostname","origin","protocol","search","$3bd3f193ccd5630c$export$f65ca476c09acec0","doc","$3bd3f193ccd5630c$export$8582633f185c62bb","navigator","history","replaceState","pushState","go","back","CustomEvent","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","requestAnimationFrame","callback","cancelAnimationFrame","$3bd3f193ccd5630c$export$38b2d434cce3ea22","win","$hKHmD","$1338f5f0d60fe216$export$8694e5c03a4df8e6","object","e1","$1338f5f0d60fe216$export$bdd553fddd433dcb","delay","$1338f5f0d60fe216$export$461939dd4422153","now","$1338f5f0d60fe216$export$3735103072e4a80","getWindow","currentStyle","$1338f5f0d60fe216$export$5ec402b7fcf74398","matrix","curTransform","transformMatrix","axis","curStyle","WebKitCSSMatrix","transform","webkitTransform","MozTransform","OTransform","MsTransform","msTransform","m41","parseFloat","m42","$1338f5f0d60fe216$export$a6cdc56e425d0d0a","$1338f5f0d60fe216$var$isNode","node","HTMLElement","nodeType","$1338f5f0d60fe216$export$8b58be045bf06082","nextSource","keysArray","noExtend","nextIndex","nextKey","desc","getOwnPropertyDescriptor","to","_loop","$1338f5f0d60fe216$export$a607267f322101fd","varName","varValue","setProperty","$1338f5f0d60fe216$export$a5dd2b4b1a116d6d","time","targetPosition","side","startPosition","startTime","duration","scrollSnapType","cssModeFrameID","isOutOfBound","animate","getTime","easeProgress","cos","PI","currentPosition","scrollTo","overflow","$1338f5f0d60fe216$export$616841b86f802685","$1338f5f0d60fe216$export$eb846d859f2895e6","selector","$1338f5f0d60fe216$export$c8a8987d4410bf2d","tag","_classList","$1338f5f0d60fe216$export$d7820ec56f35bbaa","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","$1338f5f0d60fe216$export$392b9fa9626e91e0","prevEls","previousElementSibling","prev","$1338f5f0d60fe216$export$b245807c30cf5df8","nextEls","nextElementSibling","next","$1338f5f0d60fe216$export$4184470d4bd0f986","prop","$1338f5f0d60fe216$export$371885c503a01623","child","previousSibling","$1338f5f0d60fe216$export$aedc7b608ca8e855","parents","parent","parentElement","$1338f5f0d60fe216$export$6b974c5889da0bb5","fireCallBack","$1338f5f0d60fe216$export$863f37913038cf77","includeMargins","offsetWidth","$f745992e8d1b1180$var$support","$f745992e8d1b1180$export$d61c7b85ff180578","smoothScroll","documentElement","touch","DocumentTouch","$f745992e8d1b1180$var$calcSupport","$33c7356d035118c5$var$deviceCached","$33c7356d035118c5$var$calcDevice","platform","ua","ios","android","screenWidth","screenHeight","ipad","ipod","iphone","windows","macos","iPadScreens","os","$33c7356d035118c5$export$30c823bc834d6ab4","overrides","$f7ea505fdac53fb2$var$browser","$1t1Wn","$f7ea505fdac53fb2$export$89e15fc796a4a429","needPerspectiveFix","isSafari","ua1","String","includes","num","Number","major","minor","isWebView","$f7ea505fdac53fb2$var$calcBrowser","$caa86f81f75e9730$export$2e2bcd8739ae039","param1","observer","animationFrame","resizeHandler","orientationChangeHandler","resizeObserver","ResizeObserver","entries","newWidth","newHeight","contentBoxSize","contentRect","inlineSize","blockSize","observe","unobserve","$4393da3adccaa7db$export$2e2bcd8739ae039","observers","attach","options","ObserverFunc","MutationObserver","WebkitMutationObserver","mutations","__preventObserver__","observerUpdate","attributes","childList","characterData","observeParents","observeSlideChildren","containerParents","elementParents","disconnect","splice","$26f00b4681ced12e$export$2e2bcd8739ae039","handler","priority","self","method","event","onceHandler","__emitterProxy","offAny","eventHandler","data","context","unshift","eventsArray","$gXfEI","$2effa18fdcd4ebca$export$2e2bcd8739ae039","$fdMLQ","$56ZNO","updateSlidesOffset","$hIP6N","updateSlidesProgress","$dW6z4","$5P2Nk","$1kvfj","$KG4bf","updateClickedSlide","$9VeMF","$c57e4cf0a3cc0e9b$export$2e2bcd8739ae039","clientWidth","clientHeight","parseInt","isNaN","$b14de6c650ce395b$export$2e2bcd8739ae039","getDirectionLabel","property","marginRight","getDirectionPropertyValue","label","isVirtual","previousSlidesLength","slidesLength","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidePosition","prevSlideSize","virtualSize","marginLeft","marginBottom","marginTop","cssMode","setCSSProperty","gridEnabled","grid","rows","initSlides","shouldResetSlideSize","updateSlide","slideStyles","currentTransform","currentWebKitTransform","roundLengths","elementOuterSize","paddingLeft","paddingRight","boxSizing","floor","abs","slidesPerGroup","slidesPerGroupSkip","effect","setWrapperSize","updateWrapperSize","newSlidesGrid","slidesGridItem","groups","ceil","slidesAfter","groupSize","key1","_","slideIndex","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesSize1","allSlidesOffset","snapIndex","addToSnapGrid","addToSlidesGrid","v","watchSlidesProgress","backFaceHiddenClass","hasClassBackfaceClassAdded","contains","maxBackfaceHiddenSlides","$3b8d73f2acfa0ea0$export$2e2bcd8739ae039","activeSlides","setTransition","getSlideByIndex","getSlideIndexByData","visibleSlides","index1","offsetHeight","$ce6e30db971b8f6a$export$2e2bcd8739ae039","minusOffset","offsetLeft","offsetTop","swiperSlideOffset","$a255c8b825922753$export$2e2bcd8739ae039","offsetCenter","visibleSlidesIndexes","slideOffset","slideProgress","originalSlideProgress","slideBefore","slideAfter","isVisible","originalProgress","$43d3e22542fd4c38$export$2e2bcd8739ae039","multiplier","translatesDiff","progressLoop","wasBeginning","wasEnd","isBeginningRounded","isEndRounded","lastSlideIndex","firstSlideTranslate","lastSlideTranslate","translateMax","translateAbs","$0f7fe5860e74601f$export$2e2bcd8739ae039","activeSlide","getFilteredSlide","nextSlide","elementNextAll","prevSlide","elementPrevAll","emitSlidesClasses","$08c4ed821325a44e$export$2e2bcd8739ae039","newActiveIndex","realIndex1","previousIndex","previousRealIndex","previousSnapIndex","getVirtualRealIndex","aIndex","normalizeSlideIndex","$08c4ed821325a44e$export$81ecffcda7ad6ebb","skip","$543214d309191af3$export$54749c0631f34ffc","closest","lazyEl","lazyPreloaderClass","$543214d309191af3$var$unlazy","$543214d309191af3$export$513ccb98c53b8039","amount","lazyPreloadPrevNext","slidesPerViewDynamic","slideIndexLastInView","rewind","$7394e7bbbcd710e0$export$2e2bcd8739ae039","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","$1vNo4","$ff3f3346f9416381$export$2e2bcd8739ae039","getTranslate","$kCYKF","$7THKu","$dzDR0","$dVcfr","$119efefc5c17e954$export$2e2bcd8739ae039","virtualTranslate","$f0467b48c9fa9010$export$2e2bcd8739ae039","byController","x","y","$5bff9b105f3a15ca$export$2e2bcd8739ae039","$9e1d7562301634ad$export$2e2bcd8739ae039","$a22a1974ce4a087e$export$2e2bcd8739ae039","runCallbacks","translateBounds","internal","preventInteractionOnTransition","isH","animateCSSModeScroll","_obj","onTranslateToWrapperTransitionEnd","$kR0Vg","$3bfe96c57afe6ca0$export$2e2bcd8739ae039","transitionStart","$488q8","transitionEnd","$99Zle","$f2e9791e5099a2fd$export$2e2bcd8739ae039","transitionDuration","$4aOW6","$301e70f0ee5514cd$export$2e2bcd8739ae039","step","$309f9b76d4fd47ea$export$2e2bcd8739ae039","$6ab48978240ea54a$export$2e2bcd8739ae039","$OZIeq","$d7398976190fd90b$export$2e2bcd8739ae039","$cGTS6","$7Y909","slidePrev","$3B7dt","slideReset","$dhKLJ","slideToClosest","$fn7l8","$hk5na","$09948a6d2dc2571f$export$2e2bcd8739ae039","initial","normalizedTranslate","normalizedGrid","normalizedGridNext","t","_immediateVirtual","_cssModeVirtualInitialSet","onSlideToWrapperTransitionEnd","$93d4bf3a931cd83e$export$2e2bcd8739ae039","indexAsNumber","newIndex","$5cd51e7a21111153$export$2e2bcd8739ae039","perGroup","slidesPerGroupAuto","increment","loopPreventsSliding","loopFix","_clientLeft","$29ea6cd54fa440bc$export$2e2bcd8739ae039","normalize","val","prevSnapIndex","normalizedSnapGrid","prevSnap","prevIndex","lastIndex","$9ac1243abd623ac0$export$2e2bcd8739ae039","$b30eb28584e91039$export$2e2bcd8739ae039","threshold","currentSnap","nextSnap","currentSnap1","$c9c878d368de6346$export$2e2bcd8739ae039","slideToIndex","slideSelector","nextTick","$3Gh7G","$7ea6f47a36945eb6$export$2e2bcd8739ae039","$7AnfI","$5gsL1","$2ae2939469a141d4$export$2e2bcd8739ae039","slideRealIndex","$585deea5b955cef7$export$2e2bcd8739ae039","_slideTo","activeSlideIndex","byMousewheel","prependSlidesIndexes","appendSlidesIndexes","isNext","isPrev","slidesPrepended","slidesAppended","prepend","recalcSlides","currentSlideTranslate","newSlideTranslate","currentSlideTranslate1","newSlideTranslate1","diff1","controller","control","loopParams","c","$3d54c101ba970f47$export$2e2bcd8739ae039","newSlidesOrder","swiperSlideIndex","$3mSh2","$012177cdd3ce0659$export$2e2bcd8739ae039","$aozqy","$273d86d6596c268d$export$2e2bcd8739ae039","moving","simulateTouch","isLocked","touchEventsTarget","cursor","$7917a06587c5c882$export$2e2bcd8739ae039","$f9d4708c1dfbfc0b$var$dummyEventAttached","$f9d4708c1dfbfc0b$var$dummyEventListener","$f9d4708c1dfbfc0b$var$events","capture","nested","domMethod","swiperMethod","onTouchStart","passive","onTouchMove","onTouchEnd","preventClicks","preventClicksPropagation","onClick","onScroll","updateOnWindowResize","$kXZZT","onLoad","$f9d4708c1dfbfc0b$export$2e2bcd8739ae039","$97DRT","$ex2Z8","$1OTa3","$19FtL","$35dR0","$1jcRQ","$6a43b17d59f348c6$export$2e2bcd8739ae039","pointerType","originalEvent","targetEl","which","button","swipingClassHasValue","noSwipingClass","eventPath","composedPath","path","noSwipingSelector","isTargetShadow","noSwiping","__closestFrom","assignedSlot","found","getRootNode","$6a43b17d59f348c6$var$closestElement","swipeHandler","pageX","pageY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","innerWidth","preventDefault","swipeDirection","shouldPreventDefault","touchStartPreventDefault","touchStartForcePreventDefault","isContentEditable","$02baf1653270db8e$export$2e2bcd8739ae039","pointerIndex","findIndex","cachedEv","pointerId","targetTouch","preventedByNestedSwiper","prevX","prevY","touchReleaseOnEdges","targetTouches","diffX","diffY","sqrt","pow","touchAngle","atan2","zoom","cancelable","touchMoveStopPropagation","stopPropagation","touchesDiff","previousX","previousY","oneWayMovement","touchRatio","prevTouchesDirection","touchesDirection","loopFixed","isLoop","evt","bubbles","dispatchEvent","disableParentSwiper","resistanceRatio","resistance","followFinger","$15353fd53fa0afb1$export$2e2bcd8739ae039","type","currentPos","touchEndTime","timeDiff","pathTree","stopIndex","rewindFirstIndex","rewindLastIndex","ratio","increment1","longSwipesMs","longSwipes","longSwipesRatio","shortSwipes","navigation","nextEl","prevEl","$f43968ae768025a8$var$timeout","$f43968ae768025a8$export$2e2bcd8739ae039","isVirtualLoop","autoplay","running","paused","resume","$23ec95d99b99a94a$export$2e2bcd8739ae039","stopImmediatePropagation","$0d76ce9bb77be3f2$export$2e2bcd8739ae039","$0f418bff419545b4$export$2e2bcd8739ae039","$bGu4B","$ff999bdc5ea561ff$export$2e2bcd8739ae039","getBreakpoint","$7ogML","$881af1db6e44c2b5$var$isGridEnabled","$881af1db6e44c2b5$export$2e2bcd8739ae039","breakpoint","breakpointsBase","currentBreakpoint","breakpointParams","wasMultiRow","isMultiRow","wasEnabled","fill","wasModuleEnabled","isModuleEnabled","disable","enable","directionChanged","needsReLoop","changeDirection","isEnabled","$5617cb898a0f8fe0$export$2e2bcd8739ae039","base","currentHeight","innerHeight","points","point","minRatio","substr","sort","b","_i","point1","value1","$g0Bml","$73a2aa00ea89ae97$export$2e2bcd8739ae039","$8Ubu7","$ba79a0353521e453$export$2e2bcd8739ae039","_classNames","prefix","resultClasses","suffixes","autoheight","centered","$67bc7655f50fd7fe$export$2e2bcd8739ae039","$c71e4cd26750bb38$export$2e2bcd8739ae039","wasLocked","lastSlideRightEdge","$69cbdaf801d551aa$export$2e2bcd8739ae039","uniqueNavElements","passiveListeners","$4902d140bb7ee8d5$export$2e2bcd8739ae039","moduleParamName","moduleParams","auto","$f468fb17181f9684$export$2e2bcd8739ae039","checkProps","$73166865f7b54cd7$export$2e2bcd8739ae039","$f4c91b3b7f316ab7$export$2e2bcd8739ae039","appendElement","tempDOM","$2813cfd83c41305e$export$2e2bcd8739ae039","prependElement","$18636735d4558718$export$2e2bcd8739ae039","activeIndexBuffer","baseLength","prependSlide","appendSlide","slidesBuffer","currentSlide","$716dd64e8af94877$export$2e2bcd8739ae039","slidesIndexes","indexToRemove","$09cd9ab98ba19d8c$export$2e2bcd8739ae039","removeSlide","$972bb72b4792baa3$export$2e2bcd8739ae039","requireUpdateOnVirtual","overwriteParams","perspective","recreateShadows","getEffectParams","overwriteParamsResult","_s","slideShadows","$a3fe64242580cf29$export$2e2bcd8739ae039","effectParams","transformEl","getSlideTransformEl","backfaceVisibility","$32bf8419d687a016$export$2e2bcd8739ae039","transformElements","allSlides","eventTriggered","parentNode","getSlide","elementTransitionEnd","$aa588c71d5569b8d$export$2e2bcd8739ae039","shadowClass","shadowContainer","$2381388f86a3d3bd$var$toggleArray","$2381388f86a3d3bd$var$currentTheme","localStorage","getItem","$2381388f86a3d3bd$var$_iteratorNormalCompletion","$2381388f86a3d3bd$var$_didIteratorError","$2381388f86a3d3bd$var$_iteratorError","$2381388f86a3d3bd$var$_step2","$2381388f86a3d3bd$var$_iterator2","done","$2381388f86a3d3bd$var$toggleEl","$2381388f86a3d3bd$var$switchTheme","checked","setItem","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step3","_iterator3","return","removeItem","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","register","JSON","parse"],"version":3,"file":"index.fd8c2bdc.js.map"}